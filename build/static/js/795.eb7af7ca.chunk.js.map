{"version":3,"file":"static/js/795.eb7af7ca.chunk.js","mappings":"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","sources":["genetousApi.js","views/others/applications.js","../node_modules/@coreui/icons/js/free/cil-account-logout.js"],"sourcesContent":["import { cilHd } from \"@coreui/icons\"\r\n\r\nexport const auth_service = process.env.REACT_APP_AUTH_SERVICE;\r\nexport const rule_engine = process.env.REACT_APP_RULE_ENGINE;\r\nexport const organization = {\r\n    applicationId: process.env.REACT_APP_APPLICATION_ID,\r\n    organizationId: process.env.REACT_APP_ORGANIZATION_ID,\r\n\r\n}\r\nconst clientSecret = process.env.REACT_APP_CLIENT_SECRET;\r\nconst uconfig = {\r\n    onUploadProgress: progressEvent => console.log(progressEvent.loaded)\r\n}\r\nconst requestOptions = {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json', Authorization: \"\" },\r\n    body: \"\"\r\n};\r\nconst requestOptionsFile = {\r\n    method: 'POST',\r\n    headers: { Authorization: \"\" },\r\n    body: null\r\n};\r\nexport const Methods = {\r\n    GetConfigs: rule_engine + '/get/configs',\r\n    AddConfigs:rule_engine + '/add/configuration',\r\n    GetRules:rule_engine + '/get/rules',\r\n    GetEncryption:rule_engine + '/get/encryption',\r\n    AddEncryption:rule_engine + '/add/encryption',\r\n    AddUpdateRules:rule_engine + '/add/methods',\r\n    DeleteRule:rule_engine + '/delete/method',\r\n    GetAppSecret:rule_engine + '/get/appSecret',\r\n    LoginUser:rule_engine + '/login',\r\n    GetApplications:rule_engine + '/applications',\r\n\r\n    VerifyToken: auth_service + '/verify',\r\n    KillToken: auth_service + '/logout',\r\n    Auth: auth_service + '/auth',\r\n    Client:auth_service + '/client'\r\n\r\n}\r\nasync function setTokenToLocalStorage(token) {\r\n    localStorage.setItem('token', token)\r\n}\r\nasync function setTimeout() {\r\n    var time=Date.now();\r\n    localStorage.setItem('timeout', time)\r\n}\r\nasync function setOrgToLocalStorage(orgId) {\r\n    localStorage.setItem('orgId', orgId)\r\n}\r\nasync function setAppIDToLocalStorage(appId) {\r\n    localStorage.setItem('appID', appId)\r\n}\r\nexport var verifyToken = function () {\r\n    return new Promise(async function (resolve, reject) {\r\n\r\n        try {\r\n            var hd = new Headers();\r\n            var tk = \"\";\r\n            if (localStorage.getItem('token') != null && localStorage.getItem('token') != \"\") {\r\n                tk = `Bearer ${localStorage.getItem('token')}`;\r\n            } else {\r\n                reject(401)\r\n                return;\r\n            }\r\n            hd.append('Authorization', tk)\r\n            hd.append(\"Content-Type\", \"application/json\");\r\n            const responseCollection = await fetch(\r\n                Methods.VerifyToken,\r\n                {\r\n                    method: 'GET',\r\n                    headers: hd\r\n                }\r\n            )\r\n            resolve(responseCollection.status);\r\n        } catch (err) {\r\n            reject(err)\r\n        }\r\n    });\r\n}\r\nexport var logout = function () {\r\n    return new Promise(async function (resolve, reject) {\r\n\r\n        try {\r\n            var hd = new Headers();\r\n            var tk = \"\";\r\n            if (localStorage.getItem('token') != null && localStorage.getItem('token') != \"\") {\r\n                tk = `Bearer ${localStorage.getItem('token')}`;\r\n            } else {\r\n                reject(401)\r\n                return;\r\n            }\r\n            var rdata = {\r\n                status: -1,\r\n                message: \"\",\r\n            }\r\n            hd.append('Authorization', tk)\r\n            hd.append(\"Content-Type\", \"application/json\");\r\n            const responseCollection = await fetch(\r\n                Methods.KillToken,\r\n                {\r\n                    method: 'POST',\r\n                    headers: hd\r\n                }\r\n            )\r\n            var d = null\r\n            rdata.status = responseCollection.status;\r\n            try {\r\n                d = await responseCollection.json()\r\n                if (responseCollection.status != 200) {\r\n                    if (responseCollection.status == 500) {\r\n                        rdata.message = \"Unexpected Error Occured!\"\r\n                    } else {\r\n                        rdata.message = d.message\r\n                    }\r\n                    reject(rdata)\r\n                } else {\r\n                    resolve(d)\r\n                }\r\n            } catch (err) {\r\n                rdata.message = err.message\r\n                reject(rdata)\r\n            }\r\n        } catch (err) {\r\n            reject(err)\r\n        }\r\n    });\r\n}\r\nexport var loginOrganization = function (loginModel, operationStep) {\r\n    return new Promise(async function (resolve, reject) {\r\n        try {\r\n            requestOptions.body = JSON.stringify(organization)\r\n            const responseClient = await fetch(Methods.Client, requestOptions)\r\n            var c = await responseClient.json()\r\n            if (responseClient.status != 200) {\r\n                var model = {\r\n                    success: false,\r\n                    message: c.message\r\n                }\r\n                reject(model)\r\n                return;\r\n            }\r\n            c.clientSecret = clientSecret\r\n            requestOptions.body = JSON.stringify(c)\r\n            const responseAuth = await fetch(Methods.Auth, requestOptions)\r\n            const a = await responseAuth.json()\r\n            if (responseAuth.status != 200) {\r\n                var model = {\r\n                    success: false,\r\n                    message: a.message\r\n                }\r\n                reject(model)\r\n                return;\r\n            }\r\n            if (operationStep === 0) {\r\n                var hd = new Headers();\r\n                var tk = \"Bearer \" + a.token;\r\n                hd.append('Authorization', tk)\r\n                hd.append(\"Content-Type\", \"application/json\");\r\n                const responseCollection = await fetch(\r\n                    Methods.LoginUser,\r\n                    {\r\n                        method: 'POST',\r\n                        headers: hd,\r\n                        body: JSON.stringify(loginModel)\r\n                    }\r\n                )\r\n                const d = await responseCollection.json();\r\n                if (responseCollection.status != 200) {\r\n                    var model = {\r\n                        success: false,\r\n                        message: d.message\r\n                    }\r\n                    reject(model)\r\n                }\r\n                if (d.results.length > 0) {\r\n                    var ds = d.results[0].data[0];\r\n                    if (ds == null) {\r\n                        var model = {\r\n                            success: false,\r\n                            message: \"No user found!\"\r\n                        }\r\n                        reject(model)\r\n                        return;\r\n                    }\r\n                    setOrgToLocalStorage(ds.collectionId);\r\n                    organization.clientId = ds.related.user[0]._id;\r\n                    await loginOrganization(organization, 1).then(function (result) {\r\n                        resolve(result);\r\n                    }, err => {\r\n                        var model = {\r\n                            success: false,\r\n                            message: err\r\n                        }\r\n                        reject(model)\r\n                        return;\r\n                    });\r\n                } else {\r\n                    var model = {\r\n                        success: false,\r\n                        message: d.message\r\n                    }\r\n                    reject(model)\r\n                    return;\r\n                }\r\n            } else {\r\n                setTokenToLocalStorage(a.token);\r\n                setTimeout();\r\n                localStorage.setItem('clientId', organization.clientId)\r\n                localStorage.setItem('organizationId', organization.organizationId)\r\n                localStorage.setItem('applicationId', organization.applicationId)\r\n                var model = {\r\n                    success: true,\r\n                    message: \"\"\r\n                }\r\n                resolve(model)\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n            var model = {\r\n                success: false,\r\n                message: err\r\n            }\r\n            reject(model)\r\n        }\r\n    });\r\n}\r\nexport var getGuestToken = function () {\r\n    return new Promise(async function (resolve, reject) {\r\n        try {\r\n            Object.keys(organization).forEach(function (key) {\r\n                if (key === \"clientId\") {\r\n                    delete organization[key];\r\n                }\r\n            });\r\n            requestOptions.body = JSON.stringify(organization)\r\n            const responseClient = await fetch(Methods.Client, requestOptions)\r\n            var c = await responseClient.json()\r\n            c.clientSecret = clientSecret\r\n            requestOptions.body = JSON.stringify(c)\r\n            const responseAuth = await fetch(Methods.Auth, requestOptions)\r\n            const a = await responseAuth.json()\r\n            setTokenToLocalStorage(a.token)\r\n            setTimeout();\r\n            resolve(true);\r\n        } catch (err) {\r\n            console.log(err)\r\n            reject(err)\r\n        }\r\n    });\r\n}\r\nexport var getGuestTokenReturnToken = function () {\r\n    return new Promise(async function (resolve, reject) {\r\n        try {\r\n            Object.keys(organization).forEach(function (key) {\r\n                if (key === \"clientId\") {\r\n                    delete organization[key];\r\n                }\r\n            });\r\n            requestOptions.body = JSON.stringify(organization)\r\n            const responseClient = await fetch(Methods.Client, requestOptions)\r\n            var c = await responseClient.json()\r\n            c.clientSecret = clientSecret\r\n            requestOptions.body = JSON.stringify(c)\r\n            const responseAuth = await fetch(Methods.Auth, requestOptions)\r\n            const a = await responseAuth.json()\r\n            resolve(a.token);\r\n        } catch (err) {\r\n            console.log(err)\r\n            reject(err)\r\n        }\r\n    });\r\n}\r\nexport var postWithSavedToken = function (model, method) {\r\n    return new Promise(async function (resolve, reject) {\r\n        try {\r\n            var hd = new Headers();\r\n            var tk = \"\";\r\n            if (localStorage.getItem('token') != null && localStorage.getItem('token') != \"\") {\r\n                tk = `Bearer ${localStorage.getItem('token')}`;\r\n            } else {\r\n                reject(401)\r\n                return;\r\n            }\r\n            hd.append('Authorization', tk)\r\n            hd.append(\"Content-Type\", \"application/json\");\r\n            var rdata = {\r\n                status: -1,\r\n                message: \"\",\r\n            }\r\n            const responseCollection = await fetch(\r\n                method,\r\n                {\r\n                    method: 'POST',\r\n                    headers: hd,\r\n                    body: JSON.stringify(model)\r\n                }\r\n            )\r\n            var d = null\r\n            rdata.status = responseCollection.status;\r\n            try {\r\n                d = await responseCollection.json()\r\n                if (responseCollection.status != 200) {\r\n                    if (responseCollection.status == 500) {\r\n                        rdata.message = \"Unexpected Error Occured!\"\r\n                    } else {\r\n                        rdata.message = d.message\r\n                    }\r\n                    reject(rdata)\r\n                } else {\r\n                    resolve(d)\r\n                }\r\n            } catch (err) {\r\n                rdata.message = err.message\r\n                reject(rdata)\r\n            }\r\n\r\n        } catch (err) {\r\n            reject(err)\r\n        }\r\n    });\r\n}\r\nexport var get = function (method) {\r\n    return new Promise(async function (resolve, reject) {\r\n        try {\r\n            var hd = new Headers();\r\n            var tk = `Bearer ${localStorage.getItem('token')}`;\r\n            hd.append('Authorization', tk)\r\n            hd.append(\"Content-Type\", \"application/json\");\r\n            var rdata = null\r\n            const responseCollection = await fetch(\r\n                method,\r\n                {\r\n                    method: 'GET',\r\n                    headers: hd\r\n                }\r\n            )\r\n            var d = null\r\n            try {\r\n                d = await responseCollection.json()\r\n                resolve(d);\r\n            } catch (err) {\r\n                if (responseCollection.status === 200) {\r\n                    resolve(\"success\");\r\n                } else if (responseCollection.status === 400) {\r\n                    reject(\"Not Found\")\r\n                } else if (responseCollection.status === 403) {\r\n                    reject(\"Session Timeout\")\r\n                }\r\n\r\n            }\r\n\r\n\r\n        } catch (err) {\r\n            reject(err)\r\n        }\r\n    });\r\n}\r\nexport var fileUpload = function (file, method, config) {\r\n    return new Promise(async function (resolve, reject) {\r\n        try {\r\n            const data = new FormData()\r\n            data.append('file', file)\r\n            data.append('bucket', organization.applicationId)\r\n            requestOptionsFile.headers.Authorization = `Bearer ${localStorage.getItem('token')}`\r\n            requestOptionsFile.body = data\r\n            const responseCollection = await fetch(\r\n                method,\r\n                requestOptionsFile\r\n            )\r\n            const d = await responseCollection.text()\r\n            resolve(d);\r\n        } catch (err) {\r\n            reject(err)\r\n        }\r\n    });\r\n}\r\nexport var fileDownload = function (file, method) {\r\n    return new Promise(async function (resolve, reject) {\r\n        try {\r\n            requestOptionsFile.headers.Authorization = `Bearer ${localStorage.getItem('token')}`\r\n            const responseCollection = await fetch(\r\n                method + file,\r\n                requestOptionsFile\r\n            )\r\n            resolve(responseCollection.data);\r\n        } catch (err) {\r\n            reject(err)\r\n        }\r\n    });\r\n}\r\nexport var postWithNoToken = function (model, method) {\r\n    return new Promise(async function (resolve, reject) {\r\n        try {\r\n            var hd = new Headers();\r\n            hd.append(\"Content-Type\", \"application/json\");\r\n            var rdata = {\r\n                status: -1,\r\n                message: \"\",\r\n            }\r\n            const responseCollection = await fetch(\r\n                method,\r\n                {\r\n                    method: 'POST',\r\n                    headers: hd,\r\n                    body: JSON.stringify(model)\r\n                }\r\n            )\r\n            var d = null\r\n            rdata.status = responseCollection.status;\r\n            try {\r\n                d = await responseCollection.json()\r\n                if (responseCollection.status != 200) {\r\n                    if (responseCollection.status == 500) {\r\n                        rdata.message = \"Unexpected Error Occured!\"\r\n                    } else {\r\n                        rdata.message = d.message\r\n                    }\r\n                    reject(rdata)\r\n                } else {\r\n                    resolve(d)\r\n                }\r\n            } catch (err) {\r\n                rdata.message = err.message\r\n                reject(rdata)\r\n            }\r\n\r\n        } catch (err) {\r\n            reject(err)\r\n        }\r\n    });\r\n}\r\nexport var postwithAddToken = function (model, method, tk) {\r\n    return new Promise(async function (resolve, reject) {\r\n        try {\r\n            var hd = new Headers();\r\n            hd.append('Authorization', tk)\r\n            hd.append(\"Content-Type\", \"application/json\");\r\n            var rdata = {\r\n                status: -1,\r\n                message: \"\",\r\n            }\r\n            const responseCollection = await fetch(\r\n                method,\r\n                {\r\n                    method: 'POST',\r\n                    headers: hd,\r\n                    body: JSON.stringify(model)\r\n                }\r\n            )\r\n            var d = null\r\n            rdata.status = responseCollection.status;\r\n            try {\r\n                d = await responseCollection.json()\r\n                if (responseCollection.status != 200) {\r\n                    if (responseCollection.status == 500) {\r\n                        rdata.message = \"Unexpected Error Occured!\"\r\n                    } else {\r\n                        rdata.message = d.message\r\n                    }\r\n                    reject(rdata)\r\n                } else {\r\n                    resolve(d)\r\n                }\r\n            } catch (err) {\r\n                rdata.message = err.message\r\n                reject(rdata)\r\n            }\r\n\r\n        } catch (err) {\r\n            reject(err)\r\n        }\r\n    });\r\n}\r\n","import React, { Component } from 'react';\r\nimport CIcon from '@coreui/icons-react';\r\nimport * as icon from '@coreui/icons';\r\nimport { Methods, get, logout, organization, postWithSavedToken } from \"../../genetousApi\"\r\nimport { format } from 'date-fns';\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { ToastContainer, toast, Slide } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {\r\n    CCard,\r\n    CCardBody,\r\n    CRow,\r\n    CCol,\r\n    CCardTitle,\r\n    CContainer,\r\n    CCardImage,\r\n    CCardText,\r\n    CButton,\r\n    CModal,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CFormInput,\r\n    CFormLabel\r\n} from '@coreui/react'\r\nimport { bool } from 'prop-types';\r\nconst vars = {\r\n    'cursor': \"pointer\"\r\n}\r\nvar status = -1;\r\nvar message = \"Unexpected Error Occured!\";\r\nvar error = false;\r\nexport class Applications extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            applications: [],\r\n            modalVisible: false,\r\n            file: [],\r\n            application: {\r\n                collectionName: \"application\",\r\n                content: {\r\n                    applicationName: \"\",\r\n                    applicationIcon: \"\",\r\n                    applicationCreatedDate: 0,\r\n                    uniqueFields: [\"applicationName\"]\r\n                }\r\n            },\r\n            redirect: false,\r\n            appCreateStarted: false\r\n        }\r\n    }\r\n\r\n    handleRedirect() {\r\n        if (!this.state.redirect)\r\n            this.setState({ redirect: true })\r\n    }\r\n    componentDidMount() {\r\n        this.getApplications();\r\n    }\r\n    async getApplications() {\r\n        var orgId = localStorage.getItem('orgId')\r\n        var model = {\r\n            where: {\r\n                and: {\r\n                    \"relationName\": \"organizationRelations\",\r\n                    \"collectionId\": orgId\r\n                }\r\n            },\r\n            related: {\r\n                collectionName: \"application\",\r\n                sort: {\r\n                    applicationName: \"asc\"\r\n                }\r\n            }\r\n        }\r\n        var d = [...this.state.applications];\r\n        var success = true;\r\n        await postWithSavedToken(model, Methods.GetApplications).then(function (result) {\r\n            if (result.results.length > 0 && result.results[0].data.length > 0) {\r\n                d = result.results[0].data[0].related.application;\r\n            }\r\n        }, err => {\r\n            if (err.status == 401) {\r\n                this.handleRedirect();\r\n            } else {\r\n                success = false;\r\n                message = err.message;\r\n\r\n            }\r\n        });\r\n        if (!success) {\r\n            var type = success ? \"success\" : \"error\";\r\n            this.toastShow(type, message);\r\n        }\r\n        this.setState({ applications: d });\r\n    }\r\n    toastShow(type, message) {\r\n        switch (type) {\r\n            case \"success\":\r\n                toast.success(message, {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 1000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: false,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme: \"dark\",\r\n                    transition: Slide\r\n                });\r\n                break;\r\n            case \"error\":\r\n                toast.error(message, {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 1000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: false,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme: \"dark\",\r\n                    transition: Slide\r\n                });\r\n                break;\r\n            case \"info\":\r\n                toast.info(message, {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 1000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: false,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme: \"dark\",\r\n                    transition: Slide\r\n                });\r\n        }\r\n    }\r\n    appItemChange(d) {\r\n        const { application } = this.state;\r\n        application[\"content\"][d.target.name] = d.target.value;\r\n        this.setState({ application });\r\n    }\r\n    async fileChanged(e) {\r\n        if (e.target.files.length > 0) {\r\n            var files = e.target.files;\r\n            if (files.length > 0) {\r\n                await this.setState({\r\n                    file: files\r\n                });\r\n            }\r\n        } else {\r\n            await this.setState({ file: [] });\r\n        }\r\n    }\r\n    setModalVisible(e, b) {\r\n        this.setState({ modalVisible: e });\r\n    }\r\n    async deleteApp(appId) {\r\n        var model = {\r\n            where: {\r\n                or: {\r\n                    id: [appId]\r\n                }\r\n            }\r\n        }\r\n        await postWithSavedToken(model, Methods.DeleteCollection).then(function (result) {\r\n        }, err => {\r\n\r\n        });\r\n        return true;\r\n    }\r\n    setAppID(e, d) {\r\n        localStorage.setItem(\"appId\", e.target.name)\r\n    }\r\n    async logOut(e) {\r\n        var redirect = false;\r\n        await logout().then(function (result) {\r\n            redirect = true;\r\n        }, err => {\r\n            if (err.status == 401) {\r\n                redirect = true;\r\n            } else {\r\n                message = err.message;\r\n            }\r\n        });\r\n        if (redirect) {\r\n            localStorage.removeItem(\"token\")\r\n            localStorage.removeItem(\"clientId\")\r\n            localStorage.removeItem(\"organizationId\")\r\n            localStorage.removeItem(\"applicationId\")\r\n            localStorage.removeItem(\"appId\")\r\n            localStorage.removeItem(\"orgId\")\r\n            delete organization.clientId;\r\n            this.setState({ redirect: true })\r\n        } else {\r\n            this.toastShow(\"error\", message);\r\n        }\r\n        return false;\r\n    }\r\n    toastShow(type, message) {\r\n        switch (type) {\r\n            case \"success\":\r\n                toast.success(message, {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 1000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: false,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme: \"dark\",\r\n                    transition: Slide\r\n                });\r\n                break;\r\n            case \"error\":\r\n                toast.error(message, {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 1000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: false,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme: \"dark\",\r\n                    transition: Slide\r\n                });\r\n                break;\r\n            case \"info\":\r\n                toast.info(message, {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 1000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: false,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme: \"dark\",\r\n                    transition: Slide\r\n                });\r\n        }\r\n    }\r\n    render() {\r\n        const { redirect } = this.state;\r\n\r\n        if (redirect) {\r\n            return <Redirect to='/login' />;\r\n        }\r\n        return (\r\n            <CContainer className='p-5'>\r\n                <ToastContainer />\r\n                <CRow className=\"justify-content-center\">\r\n                    <CCol className=\"text-center p-5\">\r\n                        <CCardTitle>OrganizationId : {localStorage.getItem(\"orgId\")}</CCardTitle>\r\n                    </CCol>\r\n                </CRow>\r\n                <CRow className=\"justify-content-center\">\r\n                   \r\n                    {this.state.applications.map((item, index) => (\r\n                        <CCol sm={3}>\r\n                            <CCard className=\"text-center\" >\r\n                                <CCardBody>\r\n                                    <CCardTitle>{item.content.applicationName}</CCardTitle>\r\n                                    <CCardText>ApplicationId : {item.content.applicationId}</CCardText>\r\n                                    <CCardText>Created Date : {format(item.content.applicationCreatedDate, 'dd.MM.yyyy')}</CCardText>\r\n                                    <Link to=\"/\" name={item.content.applicationId} onClick={this.setAppID.bind(this)}>\r\n                                        <CButton name={item.content.applicationId} href=\"#\">Go to Panel</CButton>\r\n                                    </Link>\r\n                                </CCardBody>\r\n                            </CCard>\r\n                        </CCol>\r\n                    ))\r\n                    }\r\n                </CRow>\r\n               \r\n                <CRow className=\"justify-content-center\">\r\n                    <CCol className=\"text-center p-5\">\r\n                        <CButton onClick={this.logOut.bind(this)}><CIcon icon={icon.cilAccountLogout} /> Logout </CButton>\r\n                    </CCol>\r\n                </CRow>\r\n               \r\n            </CContainer>\r\n        )\r\n    }\r\n}\r\nexport default Applications","export const cilAccountLogout = [\"512 512\",\"<polygon fill='var(--ci-primary-color, currentColor)' points='77.155 272.034 351.75 272.034 351.75 272.033 351.75 240.034 351.75 240.033 77.155 240.033 152.208 164.98 152.208 164.98 152.208 164.979 129.58 142.353 15.899 256.033 15.9 256.034 15.899 256.034 129.58 369.715 152.208 347.088 152.208 347.087 152.208 347.087 77.155 272.034' class='ci-primary'/><polygon fill='var(--ci-primary-color, currentColor)' points='160 16 160 48 464 48 464 464 160 464 160 496 496 496 496 16 160 16' class='ci-primary'/>\"]"],"names":["auth_service","process","rule_engine","organization","applicationId","organizationId","clientSecret","requestOptions","method","headers","Authorization","body","Methods","GetConfigs","AddConfigs","GetRules","GetEncryption","AddEncryption","AddUpdateRules","DeleteRule","GetAppSecret","LoginUser","GetApplications","VerifyToken","KillToken","Auth","Client","async","setTokenToLocalStorage","token","localStorage","setItem","setTimeout","time","Date","now","verifyToken","Promise","resolve","reject","hd","Headers","tk","getItem","concat","append","fetch","status","err","logout","rdata","message","responseCollection","d","json","loginOrganization","loginModel","operationStep","JSON","stringify","responseClient","c","model","success","responseAuth","a","results","length","ds","data","orgId","setOrgToLocalStorage","collectionId","clientId","related","user","_id","then","result","console","log","postWithSavedToken","Applications","Component","constructor","props","super","this","state","applications","modalVisible","file","application","collectionName","content","applicationName","applicationIcon","applicationCreatedDate","uniqueFields","redirect","appCreateStarted","handleRedirect","setState","componentDidMount","getApplications","where","and","sort","type","toastShow","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","theme","transition","Slide","error","info","appItemChange","target","name","value","e","files","setModalVisible","b","appId","or","id","DeleteCollection","setAppID","removeItem","render","_jsx","Redirect","to","_jsxs","CContainer","className","children","ToastContainer","CRow","CCol","CCardTitle","map","item","index","sm","CCard","CCardBody","CCardText","format","Link","onClick","bind","CButton","href","logOut","CIcon","icon","cilAccountLogout"],"sourceRoot":""}