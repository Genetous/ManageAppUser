{"version":3,"file":"static/js/887.a1e6fc19.chunk.js","mappings":"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","sources":["views/others/rules/dataservice/createCollection.js","views/others/rules/dataservice/createRelation.js","views/others/rules/dataservice/updateCollection.js","views/others/rules/dataservice/deleteCollection.js","views/others/rules/dataservice/deleteRelation.js","views/others/rules/dataservice/execute.js","views/others/rules/dataservice/getCollections.js","views/others/rules/dataservice/getRelations.js","views/others/rules/dataservice/dataservice.js","../node_modules/@coreui/icons/js/free/cil-plus.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport CIcon from '@coreui/icons-react';\r\nimport * as icon from '@coreui/icons';\r\nimport {\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CCard,\r\n    CCardBody,\r\n    CRow,\r\n    CCol,\r\n    CCardTitle,\r\n    CFormInput,\r\n    CButton,\r\n    CFormSelect,\r\n    CModal,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CCardHeader,\r\n    CCardFooter,\r\n    CSpinner,\r\n} from '@coreui/react'\r\nimport { bool } from 'prop-types';\r\nconst vars = {\r\n    'cursor': \"pointer\",\r\n    \"color\": \"rgb(33, 37, 41)\",\r\n    \"background-color\": \"#fff\"\r\n}\r\nconst activeLink = {\r\n    'cursor': \"pointer\",\r\n    \"background-color\": \"rgb(33, 37, 41)\",\r\n    \"color\": \"#fff\"\r\n}\r\nconst dangerIcon = {\r\n    \"color\": \"#f7f2f2\"\r\n}\r\nconst fRight = {\r\n    \"float\": \"right\"\r\n}\r\nconst cardText = { \"height\": \"620px\", \"overflow-y\": \"scroll\" }\r\nconst arrayLabels = [\"not\", \"in\", \"eq\"]\r\n\r\nexport class CreateCollection extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            collectionCreateRules: [],\r\n            activeKey: 1,\r\n            activeSubKeys: [1, 1, 1, 1, 1],\r\n            subKeys: [],\r\n            changedTypes: [],\r\n            visible: false,\r\n            yesNoVisible: false,\r\n            yesNoQuestion: \"\",\r\n            arguments: [],\r\n            sendType: \"\",\r\n            addRoleSpinner: false,\r\n            compare:[\"eq\",\"not\",\"gt\",\"gte\",\"lt\",\"lte\",\"in\"]\r\n\r\n        }\r\n    }\r\n\r\n    setSubActiveKey(key, id) {\r\n        const { subKeys } = this.state;\r\n        var index = subKeys.findIndex(x => x.id === id);\r\n        subKeys[index].activeKey = key;\r\n        this.setState({ subKeys });\r\n        return false;\r\n    }\r\n    getSubActiveKey(e, key, id) {\r\n        const { subKeys } = this.state;\r\n        var index = subKeys.findIndex(x => x.id === id);\r\n        return key == subKeys[index].activeKey\r\n    }\r\n    componentDidMount() {\r\n        this.getCreateCollectionRules();\r\n    }\r\n    async getCreateCollectionRules() {\r\n        var orgId = localStorage.getItem('orgId')\r\n        var appId = localStorage.getItem('appId')\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            service: this.props.service,\r\n            methodContentType: \"collection\",\r\n            methodType: \"create\"\r\n        }\r\n        var d = { ...this.state.collectionCreateRules };\r\n        d = await this.props.getRules(model);\r\n        var sk = [];\r\n        if (d.length > 0) {\r\n            var rr = d[0];\r\n            rr.roleRules.permissions.map(m => {\r\n                var data = {\r\n                    id: m._id,\r\n                    activeKey: 1\r\n                }\r\n                sk.push(data);\r\n            })\r\n        }\r\n\r\n        this.setState({ collectionCreateRules: d, subKeys: sk });\r\n    }\r\n\r\n    getValueType(val) {\r\n        if (Array.isArray(val)) {\r\n            if (val.length > 0) {\r\n                return typeof val[0]\r\n            }\r\n        }\r\n        return typeof val;\r\n    }\r\n    getContentData(item, key, permIndex, collectionIndex, type) {\r\n        return (\r\n            <div>\r\n                {Object.keys(item).length < 1 &&\r\n                    <CRow className='mt-2 justify-content-center'>\r\n                        <CCol className='col-2'>\r\n                            <CButton color='primary' onClick={this.addNewContentDataSub.bind(this, key, permIndex, collectionIndex, type)}><CIcon style={dangerIcon} icon={icon.cilPlus} /></CButton>\r\n                        </CCol>\r\n                    </CRow>\r\n                }\r\n                {typeof item == \"object\" &&\r\n                    Object.keys(item).map((k, i) => {\r\n                        return (\r\n                            <div>\r\n                                <CRow className='mt-2'>\r\n                                    <CCol className='col-3'>\r\n                                        <CFormSelect onChange={this.eqChanged.bind(this, key, k, permIndex, collectionIndex, type, i)}\r\n                                            value={k} name={this.getValueType(item[k])}>\r\n                                            <option value=\"eq\">{'='}</option>\r\n                                            <option value=\"not\">{'!='}</option>\r\n                                            <option value=\"gt\">{'>'}</option>\r\n                                            <option value=\"gte\">{'>='}</option>\r\n                                            <option value=\"lt\">{'<'}</option>\r\n                                            <option value=\"lte\">{'<='}</option>\r\n                                            <option value=\"in\">{'in'}</option>\r\n                                        </CFormSelect>\r\n                                    </CCol>\r\n                                    <CCol className='col-3'>\r\n                                        <CFormInput type='text' name='value' onChange={this.changeContentDataSubKey.bind(this, key, k, permIndex, collectionIndex, type)} placeholder={arrayLabels.indexOf(k) < 0 ? \"value\" : \"values with comma\"} value={arrayLabels.indexOf(k) < 0 ? item[k] : this.value} />\r\n                                    </CCol>\r\n                                    <CCol className='col-3'>\r\n                                        <CFormSelect id={key + \"_\" + k + \"_\" + permIndex + \"_\" + collectionIndex + \"_\" + type}\r\n                                            onChange={this.typeChanged.bind(this, key, k, permIndex, collectionIndex, type, i)}\r\n                                            value={this.getValueType(item[k])}\r\n                                            disabled={item[k].length<1} >\r\n                                            <option value=\"string\">{'String'}</option>\r\n                                            <option value=\"number\">{'Integer'}</option>\r\n                                        </CFormSelect>\r\n                                    </CCol>\r\n                                    <CCol className='col-1 align-self-center'>\r\n                                        <button type=\"button\"\r\n                                            onClick={this.removeContentDataSubKey.bind(this, key, k, permIndex, collectionIndex, type)}\r\n                                            class=\"btn-close\" aria-label=\"Remove\" />\r\n                                    </CCol>\r\n                                    {Object.keys(item).length - 1 == i &&\r\n                                        <CCol className='col-1'>\r\n                                            <CButton color='primary' onClick={this.addNewContentDataSub.bind(this, key, permIndex, collectionIndex, type)}><CIcon style={dangerIcon} icon={icon.cilPlus} /></CButton>\r\n                                        </CCol>\r\n                                    }\r\n                                </CRow>\r\n                                {arrayLabels.indexOf(k) >= 0 &&\r\n                                    <CRow className='mt-2'>\r\n                                        {item[k].map((val =>\r\n                                            <CCol className='col-3'>\r\n                                                {this.getArrayItems(val, key, k, permIndex, collectionIndex, type)}\r\n                                            </CCol>\r\n                                        ))}\r\n                                    </CRow>\r\n                                }\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n    getArrayItems(val, key, k, permIndex, collectionIndex, type) {\r\n        return (\r\n            <p className=\"p-1 rounded border border-primary text-primary\">{val}\r\n                <span style={fRight}> <button type=\"button\"\r\n                    onClick={this.removeContentDataSubKeyArray.bind(this, key, k, permIndex, collectionIndex, type, val)}\r\n                    class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n            </p>\r\n        )\r\n    }\r\n\r\n    eqChanged(key, k, permIndex, collectionIndex, type, keyIndex, e) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        var newContentData = {}\r\n\r\n        Object.keys(collection.contentData[key]).map((ki, i) => {\r\n            if (keyIndex == i) {\r\n                if (arrayLabels.indexOf(e.target.value) < 0)\r\n                    newContentData[e.target.value] = collection.contentData[key][ki]\r\n                else {\r\n                    var arr = this.getValueAsArrayByType(collection.contentData[key][ki], e.target.name);\r\n                    newContentData[e.target.value] = arr\r\n                }\r\n            } else {\r\n                newContentData[ki] = collection.contentData[key][ki]\r\n            }\r\n        })\r\n        collection.contentData[key] = newContentData;\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n        \r\n    }\r\n    typeChanged(key, k, permIndex, collectionIndex, type, keyIndex, e) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        var newContentData = {}\r\n        Object.keys(collection.contentData[key]).map((ki, i) => {\r\n            if (keyIndex == i) {\r\n                if (arrayLabels.indexOf(k) < 0)\r\n                    newContentData[k] = this.convert(collection.contentData[key][ki], e.target.value);\r\n                else {\r\n                    var arr = this.convert(collection.contentData[key][ki], e.target.value);\r\n                    newContentData[k] = arr\r\n                }\r\n            } else {\r\n                newContentData[ki] = collection.contentData[key][ki]\r\n            }\r\n        })\r\n        collection.contentData[key] = newContentData;\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    removeContentDataSubKey(key, k, permIndex, collectionIndex, type) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        delete collection.contentData[key][k];\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n    removeContentDataSubKeyArray(key, k, permIndex, collectionIndex, type, val) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        const index = collection.contentData[key][k].indexOf(val);\r\n        if (index > -1) {\r\n            collection.contentData[key][k].splice(index, 1);\r\n        }\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n\r\n    changeContentDataSubKey(key, k, permIndex, collectionIndex, type, e) {\r\n        var eleman = document.getElementById(key + \"_\" + k + \"_\" + permIndex + \"_\" + collectionIndex + \"_\" + type)\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex];\r\n        if (arrayLabels.indexOf(k) < 0)\r\n            collection.contentData[key][k] = e.target.value;\r\n        else {\r\n            if (e.target.value.toString().indexOf(\",\") >= 0) {\r\n                var arr = this.getValueAsArrayByType(e.target.value, eleman.value);\r\n                switch (eleman.value) {\r\n                    case \"string\":\r\n                        if (arr[0] && collection.contentData[key][k].indexOf(arr[0]) < 0) {\r\n                            collection.contentData[key][k].push(arr[0]);\r\n                        }\r\n                        break;\r\n                    case \"number\":\r\n                        if (!isNaN(arr[0]) && collection.contentData[key][k].indexOf(arr[0]) < 0) {\r\n                            collection.contentData[key][k].push(arr[0]);\r\n                        }\r\n                        break;\r\n                }\r\n                e.target.value = \"\";\r\n            }\r\n            else if (e.target.value.toString().trim() == \"\") {\r\n                e.target.value = \"\";\r\n            }\r\n        }\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n    addNewContentDataSub(key, permIndex, collectionIndex, type) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        for(var i=0;i<this.state.compare.length;++i){\r\n            if(!(this.state.compare[i] in collection.contentData[key])){\r\n                 if(i>0 && collection.contentData[key][this.state.compare[i-1]].length>0){\r\n                    collection.contentData[key][this.state.compare[i]] = [];\r\n                }else if(i==0){\r\n                    collection.contentData[key][this.state.compare[i]] = [];\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n    removeContentDataKey(key, permIndex, collectionIndex, type) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        delete collection.contentData[key];\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n    changeContentDataKey(key, permIndex, collectionIndex, type, keyIndex, e) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        var newContentData = {}\r\n        Object.keys(collection.contentData).map((k, i) => {\r\n            if (keyIndex == i) {\r\n                newContentData[e.target.value] = collection.contentData[k]\r\n            } else {\r\n                newContentData[k] = collection.contentData[k]\r\n            }\r\n        })\r\n        collection.contentData = newContentData;\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n    changeCollectionName(permIndex, collectionIndex, type, e) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        collection[\"collectionName\"] = e.target.value\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    changeNonPermittedCollectionName(permIndex, collectionIndex, type, e) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        collection[\"collectionName\"] = e.target.value;\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    addNewContentData(permIndex, collectionIndex, type) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        collection.contentData[\"newkey\"] = {};\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    addNewCollection(permIndex, type) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections;\r\n        var model = {\r\n            collectionName: \"collectionName\",\r\n            contentData: {},\r\n            contentKeys: []\r\n        }\r\n        collection.push(model);\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    removeCollection(permIndex, index, type) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections;\r\n        collection.splice(index, 1)\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    changeCK(permIndex, collectionIndex, type, e) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        if (e.target.value.toString().indexOf(\",\") >= 0) {\r\n            var arr = this.getValueAsArrayByType(e.target.value, \"string\");\r\n            if (arr[0] && collection.contentKeys.indexOf(arr[0]) < 0) {\r\n                collection.contentKeys.push(arr[0]);\r\n            }\r\n            e.target.value = \"\";\r\n        }\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    removeContentKeys(val, permIndex, collectionIndex, type, e) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        const index = collection.contentKeys.indexOf(val);\r\n        if (index > -1) {\r\n            collection.contentKeys.splice(index, 1);\r\n        }\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    getContentKeysItems(val, permIndex, collectionIndex, type) {\r\n        return (\r\n            <p className=\"p-1 rounded border border-primary text-primary\">{val}\r\n                <span style={fRight}> <button type=\"button\"\r\n                    onClick={this.removeContentKeys.bind(this, val, permIndex, collectionIndex, type)}\r\n                    class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n            </p>\r\n        )\r\n    }\r\n    getValueAsArray(val) {\r\n        var arr = []\r\n        var d = val.toString();\r\n        var ind = d.indexOf(',');\r\n        if (ind >= 0) {\r\n            arr = val.split(\",\");\r\n        }\r\n        else\r\n            arr.push(val)\r\n\r\n        return arr;\r\n    }\r\n    getValueAsArrayByType(val, type) {\r\n        var arr = []\r\n        var d = val.toString();\r\n        var ind = d.indexOf(',');\r\n        if (ind >= 0) {\r\n            var arrElems = val.split(\",\");\r\n            switch (type) {\r\n                case \"string\":\r\n                    arr = arrElems;\r\n                    break;\r\n                case \"number\":\r\n                    arrElems.map((item) => {\r\n                        arr.push(parseInt(item));\r\n                    });\r\n            }\r\n        }\r\n        else {\r\n            switch (type) {\r\n                case \"string\":\r\n                    if (val) {\r\n                        arr.push(val)\r\n                    }\r\n                    break;\r\n                case \"number\":\r\n                    if (!isNaN(val)) {\r\n                        arr.push(val)\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return arr;\r\n    }\r\n    convert(val, type) {\r\n        if (!Array.isArray(val)) {\r\n            switch (type) {\r\n                case \"string\":\r\n                    return val.toString();\r\n                case \"number\":\r\n                    return parseInt(val);\r\n            }\r\n        } else {\r\n            switch (type) {\r\n                case \"string\":\r\n                    var arr = [];\r\n                    val.map((item) => {\r\n                        arr.push(item.toString());\r\n                    });\r\n                    return arr;\r\n                case \"number\":\r\n                    var arr = [];\r\n                    val.map((item) => {\r\n                        var item = parseInt(item);\r\n                        if (!isNaN(item))\r\n                            arr.push(item);\r\n                    });\r\n                    return arr;\r\n            }\r\n\r\n        }\r\n    }\r\n    async addUpdateRule() {\r\n        this.props.toastShow(\"info\", \"Processing...\");\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var rule = collectionCreateRules[0].roleRules;\r\n        var rls = {\r\n            method: rule.method,\r\n            methodType: rule.methodType,\r\n            methodContentType: rule.methodContentType,\r\n            service: rule.service,\r\n            permissions: rule.permissions\r\n        }\r\n        var orgId = localStorage.getItem(\"orgId\");\r\n        var appId = localStorage.getItem(\"appId\");\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            rules: [rls]\r\n        }\r\n        this.props.addUpdateRule(model);\r\n    }\r\n    async setVisible(vis) {\r\n        this.setState({ visible: vis });\r\n    }\r\n    async setYesNoVisible(vis, question, sendType, args, send) {\r\n        if (vis)\r\n            this.setState({ yesNoVisible: vis, yesNoQuestion: question, sendType: sendType, arguments: args });\r\n        else {\r\n            await this.setVisible(false);\r\n            if (send) {\r\n                var st = this.state.sendType;\r\n                switch (st) {\r\n                    case \"deleteRole\":\r\n                        await this.deleteRole(this.state.arguments);\r\n                        break;\r\n                    case \"saveAll\":\r\n                        await this.addUpdateRule();\r\n                        break;\r\n                }\r\n            }\r\n            this.setState({ yesNoVisible: vis, yesNoQuestion: \"\", sendType: \"\", arguments: [] });\r\n        }\r\n    }\r\n    async newRuleAdd() {\r\n        var eleman = document.getElementById(\"newrule\");\r\n        if (!eleman.value) {\r\n            this.props.toastShow(\"error\", \"Role Name cannot be null or empty!\");\r\n            return false;\r\n        }\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var orgId = localStorage.getItem(\"orgId\");\r\n        var appId = localStorage.getItem(\"appId\");\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            rules: [\r\n                {\r\n                    method: this.props.method,\r\n                    methodType: \"create\",\r\n                    methodContentType: \"collection\",\r\n                    service: this.props.service,\r\n                    permissions: [{\r\n                        role: eleman.value,\r\n                        permitted: {\r\n                            collections: []\r\n                        },\r\n                        nonPermitted: {\r\n                            collections: []\r\n                        }\r\n                    }]\r\n                }\r\n            ]\r\n        }\r\n        await this.props.newRuleAdd(model)\r\n        this.getCreateCollectionRules();\r\n    }\r\n    async deleteRole(args) {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing...\");\r\n        var id = args[0];\r\n        var index = args[1];\r\n        var orgId = localStorage.getItem('orgId')\r\n        var appId = localStorage.getItem('appId')\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            id: id\r\n        }\r\n        var success = await this.props.deleteRole(model);\r\n        if (success) {\r\n            var collectionCreateRules = [...this.state.collectionCreateRules]\r\n            var permissions = collectionCreateRules[0].roleRules.permissions;\r\n            permissions.splice(index, 1);\r\n            this.setState({ collectionCreateRules });\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <CCard>\r\n                <CRow className='m-2 border-bottom d-flex align-items-center'>\r\n                    <CCol className='col-6 pb-2'>\r\n                        <CCardTitle>Add/Update <b>\"Collection Create\"</b> Permissions</CCardTitle>\r\n                    </CCol>\r\n                    <CCol className='col-6 d-grid gap-2 d-md-flex justify-content-md-end pb-2'>\r\n                        <CButton color='secondary' onClick={this.setVisible.bind(this, true)}>Add New Role</CButton>\r\n                        <CButton color='info' style={{ \"color\": \"#fff\" }}\r\n                            onClick={this.setYesNoVisible.bind(this, true, \"Are you sure you want to save all?\", \"saveAll\", [this])}>Save All</CButton>\r\n                    </CCol>\r\n\r\n                    <CModal visible={this.state.visible} onClose={this.setVisible.bind(this, false)}>\r\n                        <CModalHeader>\r\n                            <CModalTitle>Add New Role</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalBody>\r\n                            <CFormInput type='text' placeholder='Role Name' name=\"newRule\" id=\"newrule\" />\r\n                        </CModalBody>\r\n                        <CModalFooter>\r\n                            <CButton color=\"secondary\" onClick={this.setVisible.bind(this, false)}>\r\n                                Close\r\n                            </CButton>\r\n                            <CButton color=\"primary\" onClick={this.newRuleAdd.bind(this)}\r\n                                disabled={this.state.addRoleSpinner}>\r\n                                <CSpinner component=\"span\" size=\"sm\" variant=\"grow\" \r\n                                aria-hidden=\"true\" hidden={!this.state.addRoleSpinner} className='mx-1' />\r\n                                Create Role</CButton>\r\n                            \r\n                        </CModalFooter>\r\n                    </CModal>\r\n                    <CModal visible={this.state.yesNoVisible} onClose={this.setYesNoVisible.bind(this, false)}>\r\n                        <CModalHeader>\r\n                            <CModalTitle>{this.state.yesNoQuestion}</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalFooter>\r\n                            <CButton color=\"secondary\" onClick={this.setYesNoVisible.bind(this, false, null, null, null, false)}>\r\n                                No\r\n                            </CButton>\r\n                            <CButton color=\"primary\" onClick={this.setYesNoVisible.bind(this, false, null, null, null, true)}>Yes</CButton>\r\n                        </CModalFooter>\r\n                    </CModal>\r\n                </CRow>\r\n                <CCardBody style={cardText}>\r\n\r\n                    {this.state.collectionCreateRules.length > 0 &&\r\n\r\n                        this.state.collectionCreateRules[0].roleRules.permissions.map((item, index) => (\r\n                            <CCard className='mt-1'>\r\n                                <CCardBody>\r\n                                    <CCardTitle><b>\"{item.role}\"</b> Rules  <span style={fRight}>\r\n                                        <CButton color='danger'\r\n                                            onClick={this.setYesNoVisible.bind(this, true, \"Are you sure you want to delete \" + item.role + \" role?\", \"deleteRole\", [item._id, index, this])}\r\n                                            //onClick={this.deleteRole.bind(this,item._id,index)}\r\n                                            style={dangerIcon}>Delete Role</CButton></span></CCardTitle>\r\n                                    <CNav variant=\"tabs\" className='mt-4' role=\"tablist\" style={vars} >\r\n                                        <CNavItem>\r\n                                            <CNavLink\r\n                                                style={vars}\r\n                                                active={this.getSubActiveKey(this, 1, item._id)}\r\n                                                onClick={this.setSubActiveKey.bind(this, 1, item._id)}\r\n                                            >\r\n                                                Permitted\r\n                                            </CNavLink>\r\n                                        </CNavItem>\r\n                                        <CNavItem>\r\n                                            <CNavLink\r\n                                                style={vars}\r\n                                                active={this.getSubActiveKey(this, 2, item._id)}\r\n                                                onClick={this.setSubActiveKey.bind(this, 2, item._id)}\r\n                                            >\r\n                                                Non-Permitted\r\n                                            </CNavLink>\r\n                                        </CNavItem>\r\n\r\n                                    </CNav>\r\n                                    <CTabContent>\r\n                                        <CTabPane role=\"tabpanel\" className='p-3' aria-labelledby=\"home-tab\" visible={this.getSubActiveKey(this, 1, item._id)}>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Collections</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    {item.permitted.collections.map((c, i) => (\r\n                                                        <div>\r\n                                                            <CRow className='mt-2'>\r\n                                                                <CCol className='col-11'>\r\n                                                                    <CFormInput type='text' name='collectionName'\r\n                                                                        onChange={this.changeCollectionName.bind(this, index, i, \"permitted\")}\r\n                                                                        placeholder='Collection Name' value={c.collectionName} />\r\n                                                                </CCol>\r\n                                                                <CCol className='align-self-center'>\r\n                                                                    <span style={fRight}> <button type=\"button\"\r\n                                                                        onClick={this.removeCollection.bind(this, index, i, \"permitted\")}\r\n                                                                        class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            {Object.keys(c.contentData).map((key, keyIndex) => (\r\n                                                                <div>\r\n                                                                    <CRow className='mt-2'>\r\n                                                                        <CCol className='col-11'>\r\n                                                                            <CCard>\r\n                                                                                <CCardBody>\r\n                                                                                    <CRow className='mt-2 pb-2 border-bottom'>\r\n                                                                                        <CCol className='col-9'><CFormInput type='text' placeholder='Content Field'\r\n                                                                                            value={key} onChange={this.changeContentDataKey.bind(this, key, index, i, \"permitted\", keyIndex)} /></CCol>\r\n                                                                                        <CCol className='col-1 align-self-center'>\r\n                                                                                            <button type=\"button\"\r\n                                                                                                onClick={this.removeContentDataKey.bind(this, key, index, i, \"permitted\")}\r\n                                                                                                class=\"btn-close\" aria-label=\"Remove\" />\r\n                                                                                        </CCol>\r\n\r\n                                                                                    </CRow>\r\n                                                                                    {this.getContentData(c.contentData[key], key, index, i, \"permitted\")}\r\n                                                                                </CCardBody>\r\n                                                                            </CCard>\r\n                                                                        </CCol>\r\n                                                                    </CRow>\r\n\r\n\r\n                                                                </div>\r\n                                                            ))\r\n                                                            }\r\n\r\n                                                            <CRow className='mt-2 justify-content-center'>\r\n                                                                <CCol className='col-6 text-center'>\r\n                                                                    <CButton onClick={this.addNewContentData.bind(this, index, i, \"permitted\")}><CIcon icon={icon.cilPlus} />Add New Content Data for {c.collectionName}</CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            <CRow className='mt-2 pb-2'>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <CFormInput type='text' name='contentKeys'\r\n                                                                        onChange={this.changeCK.bind(this, index, i, \"permitted\")}\r\n                                                                        placeholder='Content Keys with comma' />\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n\r\n                                                            <CRow className='mt-2'>\r\n                                                                {c.contentKeys.map((val =>\r\n                                                                    <CCol className='col-3'>\r\n                                                                        {this.getContentKeysItems(val, index, i, \"permitted\")}\r\n                                                                    </CCol>\r\n                                                                ))}\r\n                                                            </CRow>\r\n\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </CCardBody>\r\n                                                <CCardFooter>\r\n                                                    <CRow className='mt-2 justify-content-center'>\r\n                                                        <CCol className='col-6 text-center'>\r\n                                                            <CButton onClick={this.addNewCollection.bind(this, index, \"permitted\")}><CIcon icon={icon.cilPlus} />Add New Collection for {item.role}</CButton>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                </CCardFooter>\r\n                                            </CCard>\r\n\r\n                                        </CTabPane>\r\n                                        <CTabPane role=\"tabpanel\" className='p-3' aria-labelledby=\"profile-tab\" visible={this.getSubActiveKey(this, 2, item._id)}>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Collections</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    {item.nonPermitted.collections.map((c, i) => (\r\n                                                        <div>\r\n                                                            <CRow className='mt-2'>\r\n                                                                <CCol className='col-11'>\r\n                                                                    <CFormInput type='text' name='collectionName'\r\n                                                                        onChange={this.changeNonPermittedCollectionName.bind(this, index, i, \"nonPermitted\")} placeholder='Collection Name' value={c.collectionName} />\r\n                                                                </CCol>\r\n                                                                <CCol className='align-self-center'>\r\n                                                                    <span style={fRight}> <button type=\"button\"\r\n                                                                        onClick={this.removeCollection.bind(this, index, i, \"nonPermitted\")}\r\n                                                                        class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            {Object.keys(c.contentData).map((key, keyIndex) => (\r\n                                                                <div>\r\n                                                                    <CRow className='mt-2'>\r\n                                                                        <CCol className='col-11'>\r\n                                                                            <CCard>\r\n                                                                                <CCardBody>\r\n                                                                                    <CRow className='mt-2 pb-2 border-bottom'>\r\n                                                                                        <CCol className='col-9'><CFormInput type='text' placeholder='Content Field'\r\n                                                                                            value={key} onChange={this.changeContentDataKey.bind(this, key, index, i, \"nonPermitted\", keyIndex)} /></CCol>\r\n                                                                                        <CCol className='col-1 align-self-center'>\r\n                                                                                            <button type=\"button\"\r\n                                                                                                onClick={this.removeContentDataKey.bind(this, key, index, i, \"nonPermitted\")}\r\n                                                                                                class=\"btn-close\" aria-label=\"Remove\" />\r\n                                                                                        </CCol>\r\n                                                                                    </CRow>\r\n                                                                                    {this.getContentData(c.contentData[key], key, index, i, \"nonPermitted\")}\r\n                                                                                </CCardBody>\r\n                                                                            </CCard>\r\n                                                                        </CCol>\r\n                                                                    </CRow>\r\n\r\n\r\n                                                                </div>\r\n                                                            ))\r\n                                                            }\r\n\r\n                                                            <CRow className='mt-2 justify-content-center'>\r\n                                                                <CCol className='col-6 text-center'>\r\n                                                                    <CButton onClick={this.addNewContentData.bind(this, index, i, \"nonPermitted\")}><CIcon icon={icon.cilPlus} />Add New Content Data for {c.collectionName}</CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            <CRow className='mt-2 pb-2'>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <CFormInput type='text' name='contentKeys'\r\n                                                                        onChange={this.changeCK.bind(this, index, i, \"nonPermitted\")}\r\n                                                                        placeholder='Content Keys with comma' />\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n\r\n                                                            <CRow className='mt-2'>\r\n                                                                {c.contentKeys.map((val =>\r\n                                                                    <CCol className='col-3'>\r\n                                                                        {this.getContentKeysItems(val, index, i, \"nonPermitted\")}\r\n                                                                    </CCol>\r\n                                                                ))}\r\n                                                            </CRow>\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </CCardBody>\r\n                                                <CCardFooter>\r\n                                                    <CRow className='mt-2 justify-content-center'>\r\n                                                        <CCol className='col-6 text-center'>\r\n                                                            <CButton onClick={this.addNewCollection.bind(this, index, \"nonPermitted\")}><CIcon icon={icon.cilPlus} />Add New Collection for {item.role}</CButton>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                </CCardFooter>\r\n                                            </CCard>\r\n\r\n                                        </CTabPane>\r\n\r\n                                    </CTabContent>\r\n                                </CCardBody>\r\n                            </CCard>\r\n                        ))}\r\n                </CCardBody>\r\n\r\n\r\n            </CCard>\r\n        )\r\n    }\r\n}\r\nexport default CreateCollection","import React, { Component } from 'react';\r\nimport CIcon from '@coreui/icons-react';\r\nimport * as icon from '@coreui/icons';\r\nimport { Link } from 'react-router-dom'\r\nimport { format } from 'date-fns';\r\nimport { ToastContainer, toast,Slide } from 'react-toastify';\r\nimport Popup from '../../../widgets/Popup';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CCard,\r\n    CCardBody,\r\n    CRow,\r\n    CCol,\r\n    CCardTitle,\r\n    CFormInput,\r\n    CButton,\r\n    CFormSelect,\r\n    CModal,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CCardHeader,\r\n    CCardFooter,\r\n} from '@coreui/react'\r\nimport { bool } from 'prop-types';\r\nconst vars = {\r\n    'cursor': \"pointer\",\r\n    \"color\": \"rgb(33, 37, 41)\",\r\n    \"background-color\": \"#fff\"\r\n}\r\nconst activeLink = {\r\n    'cursor': \"pointer\",\r\n    \"background-color\": \"rgb(33, 37, 41)\",\r\n    \"color\": \"#fff\"\r\n}\r\nconst dangerIcon = {\r\n    \"color\": \"#f7f2f2\"\r\n}\r\nconst fRight = {\r\n    \"float\": \"right\"\r\n}\r\nconst cardText = { \"height\": \"620px\", \"overflow-y\": \"scroll\" }\r\nconst arrayLabels = [\"not\", \"in\",\"eq\"]\r\nexport class CreateRelation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            relationCreateRules: [],\r\n            activeKey: 1,\r\n            activeSubKeys: [1, 1, 1, 1, 1],\r\n            subKeys: [],\r\n            changedTypes: [],\r\n            visible: false,\r\n            yesNoVisible: false,\r\n            yesNoQuestion: \"\",\r\n            arguments: [],\r\n            sendType: \"\",\r\n            compare:[\"eq\",\"not\",\"gt\",\"gte\",\"lt\",\"lte\",\"in\"]\r\n\r\n        }\r\n    }\r\n\r\n    setSubActiveKey(key, id) {\r\n        const { subKeys } = this.state;\r\n        var index = subKeys.findIndex(x => x.id === id);\r\n        subKeys[index].activeKey = key;\r\n        this.setState({ subKeys });\r\n        return false;\r\n    }\r\n    getSubActiveKey(e, key, id) {\r\n        const { subKeys } = this.state;\r\n        var index = subKeys.findIndex(x => x.id === id);\r\n        return key == subKeys[index].activeKey\r\n    }\r\n    componentDidMount() {\r\n        this.getCreateRelationRules();\r\n    }\r\n    async getCreateRelationRules() {\r\n        var orgId = localStorage.getItem('orgId')\r\n        var appId = localStorage.getItem('appId')\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            service: \"dataservice\",\r\n            methodContentType: \"relation\",\r\n            methodType: \"create\"\r\n        }\r\n        var d = { ...this.state.relationCreateRules };\r\n        d = await this.props.getRules(model);\r\n        var sk = [];\r\n        if (d.length > 0) {\r\n            var rr = d[0];\r\n            rr.roleRules.permissions.map(m => {\r\n                var data = {\r\n                    id: m._id,\r\n                    activeKey: 1\r\n                }\r\n                sk.push(data);\r\n            })\r\n        }\r\n\r\n        this.setState({ relationCreateRules: d, subKeys: sk });\r\n    }\r\n    getValueType(val) {\r\n        if (Array.isArray(val)) {\r\n            if (val.length > 0) {\r\n                return typeof val[0]\r\n            }\r\n        }\r\n        return typeof val;\r\n    }\r\n    getContentData(item, key, permIndex, collectionIndex, type) {\r\n        return (\r\n            <div>\r\n                {Object.keys(item).length < 1 &&\r\n                    <CRow className='mt-2 justify-content-center'>\r\n                        <CCol className='col-2'>\r\n                            <CButton color='primary' onClick={this.addNewContentDataSub.bind(this, key, permIndex, collectionIndex, type)}><CIcon style={dangerIcon} icon={icon.cilPlus} /></CButton>\r\n                        </CCol>\r\n                    </CRow>\r\n                }\r\n                {typeof item == \"object\" &&\r\n                    Object.keys(item).map((k, i) => {\r\n                        return (\r\n                            <div>\r\n                                <CRow className='mt-2'>\r\n                                    <CCol className='col-3'>\r\n                                        <CFormSelect onChange={this.eqChanged.bind(this, key, k, permIndex, collectionIndex, type, i)}\r\n                                            value={k} name={this.getValueType(item[k])}>\r\n                                            <option value=\"eq\">{'='}</option>\r\n                                            <option value=\"not\">{'!='}</option>\r\n                                            <option value=\"gt\">{'>'}</option>\r\n                                            <option value=\"gte\">{'>='}</option>\r\n                                            <option value=\"lt\">{'<'}</option>\r\n                                            <option value=\"lte\">{'<='}</option>\r\n                                            <option value=\"in\">{'in'}</option>\r\n                                        </CFormSelect>\r\n                                    </CCol>\r\n                                    <CCol className='col-3'>\r\n                                        <CFormInput type='text' name='value' onChange={this.changeContentDataSubKey.bind(this, key, k, permIndex, collectionIndex, type)} placeholder={arrayLabels.indexOf(k) < 0 ? \"value\" : \"values with comma\"} value={arrayLabels.indexOf(k) < 0 ? item[k] : this.value} />\r\n                                    </CCol>\r\n                                    <CCol className='col-3'>\r\n                                        <CFormSelect id={key + \"_\" + k + \"_\" + permIndex + \"_\" + collectionIndex + \"_\" + type}\r\n                                            onChange={this.typeChanged.bind(this, key, k, permIndex, collectionIndex, type, i)}\r\n                                            value={this.getValueType(item[k])}\r\n                                            disabled={item[k].length<1} >\r\n                                            <option value=\"string\">{'String'}</option>\r\n                                            <option value=\"number\">{'Integer'}</option>\r\n                                        </CFormSelect>\r\n                                    </CCol>\r\n                                    <CCol className='col-1 align-self-center'>\r\n                                        <button type=\"button\"                        \r\n                                            onClick={this.removeContentDataSubKey.bind(this, key, k, permIndex, collectionIndex, type)}\r\n                                            class=\"btn-close\" aria-label=\"Remove\"/>\r\n                                    </CCol>\r\n                                    \r\n                                    {Object.keys(item).length - 1 == i &&\r\n                                        <CCol className='col-1'>\r\n                                            <CButton color='primary' onClick={this.addNewContentDataSub.bind(this, key, permIndex, collectionIndex, type)}><CIcon style={dangerIcon} icon={icon.cilPlus} /></CButton>\r\n                                        </CCol>\r\n                                    }\r\n                                </CRow>\r\n                                {arrayLabels.indexOf(k) >= 0 &&\r\n                                    <CRow className='mt-2'>\r\n                                        {item[k].map((val =>\r\n                                            <CCol className='col-3'>\r\n                                                {this.getArrayItems(val, key, k, permIndex, collectionIndex, type)}\r\n                                            </CCol>\r\n                                        ))}\r\n                                    </CRow>\r\n                                }\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n    getArrayItems(val, key, k, permIndex, collectionIndex, type) {\r\n        return (\r\n            <p className=\"p-1 rounded border border-primary text-primary\">{val}\r\n                <span style={fRight}> <button type=\"button\"\r\n                    onClick={this.removeContentDataSubKeyArray.bind(this, key, k, permIndex, collectionIndex, type, val)}\r\n                    class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n            </p>\r\n        )\r\n    }\r\n\r\n    eqChanged(key, k, permIndex, collectionIndex, type, keyIndex, e) {\r\n        var relationCreateRules = [...this.state.relationCreateRules]\r\n        var collection = relationCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        var newContentData = {}\r\n\r\n        Object.keys(collection.contentData[key]).map((ki, i) => {\r\n            if (keyIndex == i) {\r\n                if (arrayLabels.indexOf(e.target.value) < 0)\r\n                    newContentData[e.target.value] = collection.contentData[key][ki]\r\n                else {\r\n                    var arr = this.getValueAsArrayByType(collection.contentData[key][ki], e.target.name);\r\n                    newContentData[e.target.value] = arr\r\n                }\r\n            } else {\r\n                newContentData[ki] = collection.contentData[key][ki]\r\n            }\r\n        })\r\n        collection.contentData[key] = newContentData;\r\n        this.setState({ relationCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    typeChanged(key, k, permIndex, collectionIndex, type, keyIndex, e) {\r\n        var relationCreateRules = [...this.state.relationCreateRules]\r\n        var collection = relationCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        var newContentData = {}\r\n        Object.keys(collection.contentData[key]).map((ki, i) => {\r\n            if (keyIndex == i) {\r\n                if (arrayLabels.indexOf(k) < 0)\r\n                    newContentData[k] = this.convert(collection.contentData[key][ki], e.target.value);\r\n                else {\r\n                    var arr = this.convert(collection.contentData[key][ki], e.target.value);\r\n                    newContentData[k] = arr\r\n                }\r\n            } else {\r\n                newContentData[ki] = collection.contentData[key][ki]\r\n            }\r\n        })\r\n        collection.contentData[key] = newContentData;\r\n        this.setState({ relationCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    removeContentDataSubKey(key, k, permIndex, collectionIndex, type) {\r\n        var relationCreateRules = [...this.state.relationCreateRules]\r\n        var collection = relationCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        delete collection.contentData[key][k];\r\n        this.setState({ relationCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n    removeContentDataSubKeyArray(key, k, permIndex, collectionIndex, type, val) {\r\n        var relationCreateRules = [...this.state.relationCreateRules]\r\n        var collection = relationCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        const index = collection.contentData[key][k].indexOf(val);\r\n        if (index > -1) {\r\n            collection.contentData[key][k].splice(index, 1);\r\n        }\r\n        this.setState({ relationCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n\r\n    changeContentDataSubKey(key, k, permIndex, collectionIndex, type, e) {\r\n        var eleman = document.getElementById(key + \"_\" + k + \"_\" + permIndex + \"_\" + collectionIndex + \"_\" + type)\r\n        var relationCreateRules = [...this.state.relationCreateRules]\r\n        var collection = relationCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex];\r\n        if (arrayLabels.indexOf(k) < 0)\r\n            collection.contentData[key][k] = e.target.value;\r\n        else {\r\n            if (e.target.value.toString().indexOf(\",\") >= 0) {\r\n                var arr = this.getValueAsArrayByType(e.target.value, eleman.value);\r\n                switch (eleman.value) {\r\n                    case \"string\":\r\n                        if (arr[0] && collection.contentData[key][k].indexOf(arr[0]) < 0) {\r\n                            collection.contentData[key][k].push(arr[0]);\r\n                        }\r\n                        break;\r\n                    case \"number\":\r\n                        if (!isNaN(arr[0]) && collection.contentData[key][k].indexOf(arr[0]) < 0) {\r\n                            collection.contentData[key][k].push(arr[0]);\r\n                        }\r\n                        break;\r\n                }\r\n                e.target.value = \"\";\r\n            }\r\n            else if (e.target.value.toString().trim() == \"\") {\r\n                e.target.value = \"\";\r\n            }\r\n        }\r\n        this.setState({ relationCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n    addNewContentDataSub(key, permIndex, collectionIndex, type) {\r\n        var relationCreateRules = [...this.state.relationCreateRules]\r\n        var collection = relationCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        for(var i=0;i<this.state.compare.length;++i){\r\n            if(!(this.state.compare[i] in collection.contentData[key])){\r\n                 if(i>0 && collection.contentData[key][this.state.compare[i-1]].length>0){\r\n                    collection.contentData[key][this.state.compare[i]] = [];\r\n                }else if(i==0){\r\n                    collection.contentData[key][this.state.compare[i]] = [];\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        this.setState({ relationCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n    removeContentDataKey(key, permIndex, collectionIndex, type) {\r\n        var relationCreateRules = [...this.state.relationCreateRules]\r\n        var collection = relationCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        delete collection.contentData[key];\r\n        this.setState({ relationCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n    changeContentDataKey(key, permIndex, collectionIndex, type, keyIndex, e) {\r\n        var relationCreateRules = [...this.state.relationCreateRules]\r\n        var collection = relationCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        var newContentData = {}\r\n        Object.keys(collection.contentData).map((k, i) => {\r\n            if (keyIndex == i) {\r\n                newContentData[e.target.value] = collection.contentData[k]\r\n            } else {\r\n                newContentData[k] = collection.contentData[k]\r\n            }\r\n        })\r\n        collection.contentData = newContentData;\r\n        this.setState({ relationCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n    changeCollectionName(permIndex, collectionIndex, type, e) {\r\n        var relationCreateRules = [...this.state.relationCreateRules]\r\n        var collection = relationCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        collection[\"collectionName\"] = e.target.value\r\n        this.setState({ relationCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    changeNonPermittedCollectionName(permIndex, collectionIndex, type, e) {\r\n        var relationCreateRules = [...this.state.relationCreateRules]\r\n        var collection = relationCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        collection[\"collectionName\"] =e.target.value;\r\n        this.setState({ relationCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    addNewContentData(permIndex, collectionIndex, type) {\r\n        var relationCreateRules = [...this.state.relationCreateRules]\r\n        var collection = relationCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        collection.contentData[\"newkey\"] = {};\r\n        this.setState({ relationCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    addNewCollection(permIndex, type) {\r\n        var relationCreateRules = [...this.state.relationCreateRules]\r\n        var collection = relationCreateRules[0].roleRules.permissions[permIndex][type].collections;\r\n        var model = {\r\n            collectionName: \"collectionName\",\r\n            contentData: {},\r\n            contentKeys: []\r\n        }\r\n        collection.push(model);\r\n        this.setState({ relationCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n\r\n    removeCollection(permIndex, index, type) {\r\n        var relationCreateRules = [...this.state.relationCreateRules]\r\n        var collection = relationCreateRules[0].roleRules.permissions[permIndex][type].collections;\r\n        collection.splice(index, 1)\r\n        this.setState({ relationCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    changeCK(permIndex, collectionIndex, type, e) {\r\n        var relationCreateRules = [...this.state.relationCreateRules]\r\n        var collection = relationCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        if (e.target.value.toString().indexOf(\",\") >= 0) {\r\n            var arr = this.getValueAsArrayByType(e.target.value, \"string\");\r\n            if (arr[0] && collection.contentKeys.indexOf(arr[0]) < 0) {\r\n                collection.contentKeys.push(arr[0]);\r\n            }\r\n            e.target.value = \"\";\r\n        }\r\n        this.setState({ relationCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    removeContentKeys(val, permIndex, collectionIndex, type, e) {\r\n        var relationCreateRules = [...this.state.relationCreateRules]\r\n        var collection = relationCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        const index = collection.contentKeys.indexOf(val);\r\n        if (index > -1) {\r\n            collection.contentKeys.splice(index, 1);\r\n        }\r\n        this.setState({ relationCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    getContentKeysItems(val, permIndex, collectionIndex, type) {\r\n        return (\r\n            <p className=\"p-1 rounded border border-primary text-primary\">{val}\r\n                <span style={fRight}> <button type=\"button\"\r\n                    onClick={this.removeContentKeys.bind(this, val, permIndex, collectionIndex, type)}\r\n                    class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n            </p>\r\n        )\r\n    }\r\n    addNewMainSub(permIndex, type) {\r\n        var relationCreateRules = [...this.state.relationCreateRules]\r\n        var collection = relationCreateRules[0].roleRules.permissions[permIndex][type].mainSub;\r\n        var model = {\r\n            main: \"mainCollectionName\",\r\n            sub: []\r\n        }\r\n        collection.push(model);\r\n        this.setState({ relationCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    removeMainSub(permIndex, index, type) {\r\n        var relationCreateRules = [...this.state.relationCreateRules]\r\n        var collection = relationCreateRules[0].roleRules.permissions[permIndex][type].mainSub;\r\n        collection.splice(index, 1)\r\n        this.setState({ relationCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    mainCollectionChange(permIndex, mainSubIndex, type, e) {\r\n        var relationCreateRules = [...this.state.relationCreateRules]\r\n        var collection = relationCreateRules[0].roleRules.permissions[permIndex][type].mainSub[mainSubIndex]\r\n        collection.main = e.target.value;\r\n        this.setState({ relationCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    changeSub(permIndex, mainSubIndex, type, e) {\r\n        var relationCreateRules = [...this.state.relationCreateRules]\r\n        var collection = relationCreateRules[0].roleRules.permissions[permIndex][type].mainSub[mainSubIndex]\r\n        if (e.target.value.toString().indexOf(\",\") >= 0) {\r\n            var arr = this.getValueAsArrayByType(e.target.value, \"string\");\r\n            if (arr[0] && collection.sub.indexOf(arr[0]) < 0) {\r\n                collection.sub.push(arr[0]);\r\n            }\r\n            e.target.value = \"\";\r\n        }\r\n        this.setState({ relationCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    getMainSubItems(val, permIndex, mainSubIndex, valIndex, type) {\r\n        return (\r\n            <p className=\"p-1 rounded border border-primary text-primary\">{val}\r\n                <span style={fRight}> <button type=\"button\"\r\n                    onClick={this.removeSub.bind(this, permIndex, mainSubIndex, valIndex, type)}\r\n                    class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n            </p>\r\n        )\r\n    }\r\n    removeSub(permIndex, mainSubIndex, valIndex, type, e) {\r\n        var relationCreateRules = [...this.state.relationCreateRules]\r\n        var collection = relationCreateRules[0].roleRules.permissions[permIndex][type].mainSub[mainSubIndex]\r\n        collection.sub.splice(valIndex, 1);\r\n        this.setState({ relationCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    getValueAsArray(val) {\r\n        var arr = []\r\n        var d = val.toString();\r\n        var ind = d.indexOf(',');\r\n        if (ind >= 0) {\r\n            arr = val.split(\",\");\r\n        }\r\n        else\r\n            arr.push(val)\r\n\r\n        return arr;\r\n    }\r\n    getValueAsArrayByType(val, type) {\r\n        var arr = []\r\n        var d = val.toString();\r\n        var ind = d.indexOf(',');\r\n        if (ind >= 0) {\r\n            var arrElems = val.split(\",\");\r\n            switch (type) {\r\n                case \"string\":\r\n                    arr = arrElems;\r\n                    break;\r\n                case \"number\":\r\n                    arrElems.map((item) => {\r\n                        arr.push(parseInt(item));\r\n                    });\r\n            }\r\n        }\r\n        else {\r\n            switch (type) {\r\n                case \"string\":\r\n                    if (val) {\r\n                        arr.push(val)\r\n                    }\r\n                    break;\r\n                case \"number\":\r\n                    if (!isNaN(val)) {\r\n                        arr.push(val)\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return arr;\r\n    }\r\n    convert(val, type) {\r\n        if (!Array.isArray(val)) {\r\n            switch (type) {\r\n                case \"string\":\r\n                    return val.toString();\r\n                case \"number\":\r\n                    return parseInt(val);\r\n            }\r\n        } else {\r\n            switch (type) {\r\n                case \"string\":\r\n                    var arr = [];\r\n                    val.map((item) => {\r\n                        arr.push(item.toString());\r\n                    });\r\n                    return arr;\r\n                case \"number\":\r\n                    var arr = [];\r\n                    val.map((item) => {\r\n                        var item = parseInt(item);\r\n                        if (!isNaN(item))\r\n                            arr.push(item);\r\n                    });\r\n                    return arr;\r\n            }\r\n\r\n        }\r\n    }\r\n    async addUpdateRule() {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var relationCreateRules = [...this.state.relationCreateRules]\r\n        var rule = relationCreateRules[0].roleRules;\r\n        var rls = {\r\n            method: rule.method,\r\n            methodType: rule.methodType,\r\n            methodContentType: rule.methodContentType,\r\n            service: rule.service,\r\n            permissions: rule.permissions\r\n        }\r\n        var orgId = localStorage.getItem(\"orgId\");\r\n        var appId = localStorage.getItem(\"appId\");\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            rules: [rls]\r\n        }\r\n        this.props.addUpdateRule(model);\r\n    }\r\n    setVisible(vis) {\r\n        this.setState({ visible: vis });\r\n    }\r\n    async setYesNoVisible(vis, question, sendType, args, send) {\r\n        if (vis)\r\n            this.setState({ yesNoVisible: vis, yesNoQuestion: question, sendType: sendType, arguments: args });\r\n        else {\r\n            if (send) {\r\n                var st = this.state.sendType;\r\n                switch (st) {\r\n                    case \"deleteRole\":\r\n                        await this.deleteRole(this.state.arguments);\r\n                        break;\r\n                    case \"saveAll\":\r\n                        await this.addUpdateRule();\r\n                        break;\r\n                }\r\n            }\r\n            this.setState({ yesNoVisible: vis, yesNoQuestion: \"\", sendType: \"\", arguments: [] });\r\n        }\r\n    }\r\n    async newRuleAdd() {\r\n        var eleman = document.getElementById(\"newrule\");\r\n        if (!eleman.value) {\r\n            this.props.toastShow(\"error\",\"Role Name cannot be null or empty!\")\r\n            return false;\r\n        }\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var orgId = localStorage.getItem(\"orgId\");\r\n        var appId = localStorage.getItem(\"appId\");\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            rules: [\r\n                {\r\n                    method: \"/dataservice/add/relation\",\r\n                    methodType: \"create\",\r\n                    methodContentType: \"relation\",\r\n                    service: \"dataservice\",\r\n                    permissions: [{\r\n                        role: eleman.value,\r\n                        permitted: {\r\n                            collections: [],\r\n                            mainSub: []\r\n                        },\r\n                        nonPermitted: {\r\n                            collections: [],\r\n                            mainSub: []\r\n                        }\r\n                    }]\r\n                }\r\n            ]\r\n        }\r\n        await this.props.newRuleAdd(model)\r\n        this.getCreateRelationRules();\r\n\r\n    }\r\n    async deleteRole(args) {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing...\");\r\n        var id = args[0];\r\n        var index = args[1];\r\n        var orgId = localStorage.getItem('orgId')\r\n        var appId = localStorage.getItem('appId')\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            id: id\r\n        }\r\n        var success= await this.props.deleteRole(model);\r\n        if (success) {\r\n            var relationCreateRules = [...this.state.relationCreateRules]\r\n            var permissions = relationCreateRules[0].roleRules.permissions;\r\n            permissions.splice(index, 1);\r\n            this.setState({ relationCreateRules });\r\n        }\r\n       \r\n        \r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <CCard>\r\n                <CRow className='m-2 border-bottom d-flex align-items-center'>\r\n                    <CCol className='col-6 pb-2'>\r\n                        <CCardTitle>Add/Update <b>\"Relation Create\"</b> Permissions</CCardTitle>\r\n                    </CCol>\r\n                    <CCol className='col-6 d-grid gap-2 d-md-flex justify-content-md-end pb-2'>\r\n                        <CButton color='secondary' onClick={this.setVisible.bind(this, true)}>Add New Role</CButton>\r\n                        <CButton color='info' style={{\"color\":\"#fff\"}}\r\n                            onClick={this.setYesNoVisible.bind(this, true, \"Are you sure you want to save all?\", \"saveAll\", [this])}>Save All</CButton>\r\n                    </CCol>\r\n\r\n                    <CModal visible={this.state.visible} onClose={this.setVisible.bind(this, false)}>\r\n                        <CModalHeader>\r\n                            <CModalTitle>Add New Role</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalBody>\r\n                            <CFormInput type='text' placeholder='Role Name' name=\"newRule\" id=\"newrule\" />\r\n                        </CModalBody>\r\n                        <CModalFooter>\r\n                            <CButton color=\"secondary\" onClick={this.setVisible.bind(this, false)}>\r\n                                Close\r\n                            </CButton>\r\n                            <CButton color=\"primary\" onClick={this.newRuleAdd.bind(this)}>Create Role</CButton>\r\n                        </CModalFooter>\r\n                    </CModal>\r\n                    <CModal visible={this.state.yesNoVisible} onClose={this.setYesNoVisible.bind(this, false)}>\r\n                        <CModalHeader>\r\n                            <CModalTitle>{this.state.yesNoQuestion}</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalFooter>\r\n                            <CButton color=\"secondary\" onClick={this.setYesNoVisible.bind(this, false, null, null, null, false)}>\r\n                                No\r\n                            </CButton>\r\n                            <CButton color=\"primary\" onClick={this.setYesNoVisible.bind(this, false, null, null, null, true)}>Yes</CButton>\r\n                        </CModalFooter>\r\n                    </CModal>\r\n                </CRow>\r\n                <CCardBody style={cardText}>\r\n\r\n                    {this.state.relationCreateRules.length > 0 &&\r\n\r\n                        this.state.relationCreateRules[0].roleRules.permissions.map((item, index) => (\r\n                            <CCard className='mt-1'>\r\n                                <CCardBody>\r\n                                    <CCardTitle><b>\"{item.role}\"</b> Rules  <span style={fRight}>\r\n                                        <CButton color='danger'\r\n                                            onClick={this.setYesNoVisible.bind(this, true, \"Are you sure you want to delete \" + item.role + \" role?\", \"deleteRole\", [item._id, index, this])}\r\n                                            //onClick={this.deleteRole.bind(this,item._id,index)}\r\n                                            style={dangerIcon}>Delete Role</CButton></span></CCardTitle>\r\n                                    <CNav variant=\"tabs\" className='mt-4' role=\"tablist\" style={vars} >\r\n                                        <CNavItem>\r\n                                            <CNavLink\r\n                                                style={vars}\r\n                                                active={this.getSubActiveKey(this, 1, item._id)}\r\n                                                onClick={this.setSubActiveKey.bind(this, 1, item._id)}\r\n                                            >\r\n                                                Permitted\r\n                                            </CNavLink>\r\n                                        </CNavItem>\r\n                                        <CNavItem>\r\n                                            <CNavLink\r\n                                                style={vars}\r\n                                                active={this.getSubActiveKey(this, 2, item._id)}\r\n                                                onClick={this.setSubActiveKey.bind(this, 2, item._id)}\r\n                                            >\r\n                                                Non-Permitted\r\n                                            </CNavLink>\r\n                                        </CNavItem>\r\n\r\n                                    </CNav>\r\n                                    <CTabContent>\r\n                                        <CTabPane role=\"tabpanel\" className='p-3' aria-labelledby=\"home-tab\" visible={this.getSubActiveKey(this, 1, item._id)}>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Child Collections</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    {item.permitted.collections.map((c, i) => (\r\n                                                        <div>\r\n                                                            <CRow className='mt-2'>\r\n                                                                <CCol className='col-11'>\r\n                                                                    <CFormInput type='text' name='collectionName'\r\n                                                                        onChange={this.changeCollectionName.bind(this, index, i, \"permitted\")}\r\n                                                                        placeholder='Collection Name' value={c.collectionName} />\r\n                                                                </CCol>\r\n                                                                <CCol className='align-self-center'>\r\n                                                                    <span style={fRight}> <button type=\"button\"\r\n                                                                        onClick={this.removeCollection.bind(this, index, i, \"permitted\")}\r\n                                                                        class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            {Object.keys(c.contentData).map((key, keyIndex) => (\r\n                                                                <div>\r\n                                                                    <CRow className='mt-2'>\r\n                                                                        <CCol className='col-11'>\r\n                                                                            <CCard>\r\n                                                                                <CCardBody>\r\n                                                                                    <CRow className='mt-2 pb-2 border-bottom'>\r\n                                                                                        <CCol className='col-9'><CFormInput type='text' placeholder='Content Field'\r\n                                                                                            value={key} onChange={this.changeContentDataKey.bind(this, key, index, i, \"permitted\", keyIndex)} /></CCol>\r\n                                                                                        <CCol className='col-1 align-self-center'>\r\n                                                                                            <button type=\"button\"\r\n                                                                                                onClick={this.removeContentDataKey.bind(this, key, index, i, \"permitted\")}\r\n                                                                                                class=\"btn-close\" aria-label=\"Remove\" />\r\n                                                                                        </CCol>\r\n                                                                                    </CRow>\r\n                                                                                    {this.getContentData(c.contentData[key], key, index, i, \"permitted\")}\r\n                                                                                </CCardBody>\r\n                                                                            </CCard>\r\n                                                                        </CCol>\r\n                                                                    </CRow>\r\n\r\n\r\n                                                                </div>\r\n                                                            ))\r\n                                                            }\r\n\r\n                                                            <CRow className='mt-2 justify-content-center'>\r\n                                                                <CCol className='col-6 text-center'>\r\n                                                                    <CButton onClick={this.addNewContentData.bind(this, index, i, \"permitted\")}><CIcon icon={icon.cilPlus} />Add New Content Data for {c.collectionName}</CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            <CRow className='mt-2 pb-2'>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <CFormInput type='text' name='contentKeys'\r\n                                                                        onChange={this.changeCK.bind(this, index, i, \"permitted\")}\r\n                                                                        placeholder='Content Keys with comma' />\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n\r\n                                                            <CRow className='mt-2'>\r\n                                                                {c.contentKeys.map((val =>\r\n                                                                    <CCol className='col-3'>\r\n                                                                        {this.getContentKeysItems(val, index, i, \"permitted\")}\r\n                                                                    </CCol>\r\n                                                                ))}\r\n                                                            </CRow>\r\n\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </CCardBody>\r\n                                                <CCardFooter>\r\n                                                    <CRow className='mt-2 justify-content-center'>\r\n                                                        <CCol className='col-6 text-center'>\r\n                                                            <CButton onClick={this.addNewCollection.bind(this, index, \"permitted\")}><CIcon icon={icon.cilPlus} />Add New Collection for {item.role}</CButton>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                </CCardFooter>\r\n                                            </CCard>\r\n\r\n\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Main-Child Collections Relation Permissions</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    {item.permitted.mainSub.map((val, i) => (\r\n                                                        <div>\r\n                                                            <CRow>\r\n                                                                <p><b>Main collectionName :</b></p>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <CFormInput type='text' name='main' onChange={this.mainCollectionChange.bind(this, index, i, \"permitted\")} value={val.main} />\r\n                                                                </CCol>\r\n                                                                <CCol className='align-self-center'>\r\n                                                                    <span style={fRight}> <button type=\"button\"\r\n                                                                        onClick={this.removeMainSub.bind(this, index, i, \"permitted\")}\r\n                                                                        class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            <CRow className='mt-2 pb-2'>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <p><b>Sub collectionNames :</b></p>\r\n                                                                    <CFormInput type='text' name='subCollection'\r\n                                                                        onChange={this.changeSub.bind(this, index, i, \"permitted\")}\r\n                                                                        placeholder='Collection Names with comma' />\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            <CRow className='mt-2'>\r\n                                                                {val.sub.map((s, si) =>\r\n                                                                    <CCol className='col-3'>\r\n                                                                        {this.getMainSubItems(s, index, i, si, \"permitted\")}\r\n                                                                    </CCol>\r\n                                                                )}\r\n                                                            </CRow>\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </CCardBody>\r\n                                                <CCardFooter>\r\n                                                    <CRow className='mt-2 justify-content-center'>\r\n                                                        <CCol className='col-6 text-center'>\r\n                                                            <CButton onClick={this.addNewMainSub.bind(this, index, \"permitted\")}><CIcon icon={icon.cilPlus} />Add Main-Sub Collection Relation for {item.role}</CButton>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                </CCardFooter>\r\n                                            </CCard>\r\n\r\n                                        </CTabPane>\r\n                                        <CTabPane role=\"tabpanel\" className='p-3' aria-labelledby=\"profile-tab\" visible={this.getSubActiveKey(this, 2, item._id)}>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Collections</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    {item.nonPermitted.collections.map((c, i) => (\r\n                                                        <div>\r\n                                                            <CRow className='mt-2'>\r\n                                                                <CCol className='col-11'>\r\n                                                                    <CFormInput type='text' name='collectionName'\r\n                                                                        onChange={this.changeNonPermittedCollectionName.bind(this, index, i, \"nonPermitted\")} placeholder='Collection Name' value={c.collectionName} />\r\n                                                                </CCol>\r\n                                                                <CCol className='align-self-center'>\r\n                                                                    <span style={fRight}> <button type=\"button\"\r\n                                                                        onClick={this.removeCollection.bind(this, index, i, \"nonPermitted\")}\r\n                                                                        class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            {Object.keys(c.contentData).map((key, keyIndex) => (\r\n                                                                <div>\r\n                                                                    <CRow className='mt-2'>\r\n                                                                        <CCol className='col-11'>\r\n                                                                            <CCard>\r\n                                                                                <CCardBody>\r\n                                                                                    <CRow className='mt-2 pb-2 border-bottom'>\r\n                                                                                        <CCol className='col-9'><CFormInput type='text' placeholder='Content Field'\r\n                                                                                            value={key} onChange={this.changeContentDataKey.bind(this, key, index, i, \"nonPermitted\", keyIndex)} /></CCol>\r\n                                                                                        <CCol className='col-1 align-self-center'>\r\n                                                                                            <button type=\"button\"\r\n                                                                                            onClick={this.removeContentDataKey.bind(this, key, index, i, \"nonPermitted\")}\r\n                                                                                                class=\"btn-close\" aria-label=\"Remove\" />\r\n                                                                                        </CCol>\r\n                                                                                    </CRow>\r\n                                                                                    {this.getContentData(c.contentData[key], key, index, i, \"nonPermitted\")}\r\n                                                                                </CCardBody>\r\n                                                                            </CCard>\r\n                                                                        </CCol>\r\n                                                                    </CRow>\r\n\r\n\r\n                                                                </div>\r\n                                                            ))\r\n                                                            }\r\n\r\n                                                            <CRow className='mt-2 justify-content-center'>\r\n                                                                <CCol className='col-6 text-center'>\r\n                                                                    <CButton onClick={this.addNewContentData.bind(this, index, i, \"nonPermitted\")}><CIcon icon={icon.cilPlus} />Add New Content Data for {c.collectionName}</CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            <CRow className='mt-2 pb-2'>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <CFormInput type='text' name='contentKeys'\r\n                                                                        onChange={this.changeCK.bind(this, index, i, \"nonPermitted\")}\r\n                                                                        placeholder='Content Keys with comma' />\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n\r\n                                                            <CRow className='mt-2'>\r\n                                                                {c.contentKeys.map((val =>\r\n                                                                    <CCol className='col-3'>\r\n                                                                        {this.getContentKeysItems(val, index, i, \"nonPermitted\")}\r\n                                                                    </CCol>\r\n                                                                ))}\r\n                                                            </CRow>\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </CCardBody>\r\n                                                <CCardFooter>\r\n                                                    <CRow className='mt-2 justify-content-center'>\r\n                                                        <CCol className='col-6 text-center'>\r\n                                                            <CButton onClick={this.addNewCollection.bind(this, index, \"nonPermitted\")}><CIcon icon={icon.cilPlus} />Add New Collection for {item.role}</CButton>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                </CCardFooter>\r\n                                            </CCard>\r\n\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Main-Child Collections Relation Permissions</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    {item.nonPermitted.mainSub.map((val, i) => (\r\n                                                        <div>\r\n                                                            <CRow>\r\n                                                                <p><b>Main collectionName :</b></p>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <CFormInput type='text' name='main' onChange={this.mainCollectionChange.bind(this, index, i, \"nonPermitted\")} value={val.main} />\r\n                                                                </CCol>\r\n                                                                <CCol className='align-self-center'>\r\n                                                                    <span style={fRight}> <button type=\"button\"\r\n                                                                        onClick={this.removeMainSub.bind(this, index, i, \"nonPermitted\")}\r\n                                                                        class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            <CRow className='mt-2 pb-2'>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <p><b>Sub collectionNames :</b></p>\r\n                                                                    <CFormInput type='text' name='subCollection'\r\n                                                                        onChange={this.changeSub.bind(this, index, i, \"nonPermitted\")}\r\n                                                                        placeholder='Collection Names with comma' />\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            <CRow className='mt-2'>\r\n                                                                {val.sub.map((s, si) =>\r\n                                                                    <CCol className='col-3'>\r\n                                                                        {this.getMainSubItems(s, index, i, si, \"nonPermitted\")}\r\n                                                                    </CCol>\r\n                                                                )}\r\n                                                            </CRow>\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </CCardBody>\r\n                                                <CCardFooter>\r\n                                                    <CRow className='mt-2 justify-content-center'>\r\n                                                        <CCol className='col-6 text-center'>\r\n                                                            <CButton onClick={this.addNewMainSub.bind(this, index, \"nonPermitted\")}><CIcon icon={icon.cilPlus} />Add Main-Sub Collection Relation for {item.role}</CButton>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                </CCardFooter>\r\n                                            </CCard>\r\n\r\n                                        </CTabPane>\r\n\r\n                                    </CTabContent>\r\n                                </CCardBody>\r\n                            </CCard>\r\n                        ))}\r\n                </CCardBody>\r\n\r\n\r\n            </CCard>\r\n        )\r\n    }\r\n}\r\nexport default CreateRelation","import React, { Component } from 'react';\r\nimport CIcon from '@coreui/icons-react';\r\nimport * as icon from '@coreui/icons';\r\nimport {\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CCard,\r\n    CCardBody,\r\n    CRow,\r\n    CCol,\r\n    CCardTitle,\r\n    CFormInput,\r\n    CButton,\r\n    CFormSelect,\r\n    CModal,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CCardFooter,\r\n    CCardHeader,\r\n} from '@coreui/react'\r\nimport { bool } from 'prop-types';\r\nconst vars = {\r\n    'cursor': \"pointer\",\r\n    \"color\": \"rgb(33, 37, 41)\",\r\n    \"background-color\": \"#fff\"\r\n}\r\nconst activeLink = {\r\n    'cursor': \"pointer\",\r\n    \"background-color\": \"rgb(33, 37, 41)\",\r\n    \"color\": \"#fff\"\r\n}\r\nconst dangerIcon = {\r\n    \"color\": \"#f7f2f2\"\r\n}\r\nconst fRight = {\r\n    \"float\": \"right\"\r\n}\r\nconst cardText = { \"height\": \"620px\", \"overflow-y\": \"scroll\" }\r\nconst arrayLabels = [\"not\", \"in\",\"eq\"]\r\nexport class UpdateCollection extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            collectionCreateRules: [],\r\n            activeKey: 1,\r\n            activeSubKeys: [1, 1, 1, 1, 1],\r\n            subKeys: [],\r\n            changedTypes: [],\r\n            visible: false,\r\n            yesNoVisible: false,\r\n            yesNoQuestion: \"\",\r\n            arguments: [],\r\n            sendType: \"\",\r\n            compare:[\"eq\",\"not\",\"gt\",\"gte\",\"lt\",\"lte\",\"in\"]\r\n           \r\n\r\n        }\r\n    }\r\n\r\n    setSubActiveKey(key, id) {\r\n        const { subKeys } = this.state;\r\n        var index = subKeys.findIndex(x => x.id === id);\r\n        subKeys[index].activeKey = key;\r\n        this.setState({ subKeys });\r\n        return false;\r\n    }\r\n    getSubActiveKey(e, key, id) {\r\n        const { subKeys } = this.state;\r\n        var index = subKeys.findIndex(x => x.id === id);\r\n        return key == subKeys[index].activeKey\r\n    }\r\n    componentDidMount() {\r\n        this.getUpdateCollectionRules();\r\n    }\r\n    async getUpdateCollectionRules() {\r\n        var orgId = localStorage.getItem('orgId')\r\n        var appId = localStorage.getItem('appId')\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            service: this.props.service,\r\n            methodContentType: \"collection\",\r\n            methodType: \"update\"\r\n        }\r\n        var d = { ...this.state.collectionCreateRules };\r\n        d = await this.props.getRules(model);\r\n        var sk = [];\r\n        if (d.length > 0) {\r\n            var rr = d[0];\r\n            rr.roleRules.permissions.map(m => {\r\n                var data = {\r\n                    id: m._id,\r\n                    activeKey: 1\r\n                }\r\n                sk.push(data);\r\n            })\r\n        }\r\n\r\n        this.setState({ collectionCreateRules: d, subKeys: sk });\r\n    }\r\n    getValueType(val) {\r\n        if (Array.isArray(val)) {\r\n            if (val.length > 0) {\r\n                return typeof val[0]\r\n            }\r\n        }\r\n        return typeof val;\r\n    }\r\n    getContentData(item, key, permIndex, collectionIndex, type) {\r\n        return (\r\n            <div>\r\n                {Object.keys(item).length < 1 &&\r\n                    <CRow className='mt-2 justify-content-center'>\r\n                        <CCol className='col-2'>\r\n                            <CButton color='primary' onClick={this.addNewContentDataSub.bind(this, key, permIndex, collectionIndex, type)}><CIcon style={dangerIcon} icon={icon.cilPlus} /></CButton>\r\n                        </CCol>\r\n                    </CRow>\r\n                }\r\n                {typeof item == \"object\" &&\r\n                    Object.keys(item).map((k, i) => {\r\n                        return (\r\n                            <div>\r\n                                <CRow className='mt-2'>\r\n                                    <CCol className='col-3'>\r\n                                        <CFormSelect onChange={this.eqChanged.bind(this, key, k, permIndex, collectionIndex, type, i)}\r\n                                            value={k} name={this.getValueType(item[k])}>\r\n                                            <option value=\"eq\">{'='}</option>\r\n                                            <option value=\"not\">{'!='}</option>\r\n                                            <option value=\"gt\">{'>'}</option>\r\n                                            <option value=\"gte\">{'>='}</option>\r\n                                            <option value=\"lt\">{'<'}</option>\r\n                                            <option value=\"lte\">{'<='}</option>\r\n                                            <option value=\"in\">{'in'}</option>\r\n                                        </CFormSelect>\r\n                                    </CCol>\r\n                                    <CCol className='col-3'>\r\n                                        <CFormInput type='text' name='value' onChange={this.changeContentDataSubKey.bind(this, key, k, permIndex, collectionIndex, type)} placeholder={arrayLabels.indexOf(k) < 0 ? \"value\" : \"values with comma\"} value={arrayLabels.indexOf(k) < 0 ? item[k] : this.value} />\r\n                                    </CCol>\r\n                                    <CCol className='col-3'>\r\n                                        <CFormSelect id={key + \"_\" + k + \"_\" + permIndex + \"_\" + collectionIndex + \"_\" + type}\r\n                                            onChange={this.typeChanged.bind(this, key, k, permIndex, collectionIndex, type, i)}\r\n                                            value={this.getValueType(item[k])} \r\n                                            disabled={item[k].length<1}>\r\n                                            <option value=\"string\">{'String'}</option>\r\n                                            <option value=\"number\">{'Integer'}</option>\r\n                                        </CFormSelect>\r\n                                    </CCol>\r\n                                    <CCol className='col-1 align-self-center'>\r\n                                        <button type=\"button\"                        \r\n                                            onClick={this.removeContentDataSubKey.bind(this, key, k, permIndex, collectionIndex, type)}\r\n                                            class=\"btn-close\" aria-label=\"Remove\"/>\r\n                                    </CCol>\r\n                                   \r\n                                    {Object.keys(item).length - 1 == i &&\r\n                                        <CCol className='col-1'>\r\n                                            <CButton color='primary' onClick={this.addNewContentDataSub.bind(this, key, permIndex, collectionIndex, type)}><CIcon style={dangerIcon} icon={icon.cilPlus} /></CButton>\r\n                                        </CCol>\r\n                                    }\r\n                                </CRow>\r\n                                {arrayLabels.indexOf(k) >= 0 &&\r\n                                    <CRow className='mt-2'>\r\n                                        {item[k].map((val =>\r\n                                            <CCol className='col-3'>\r\n                                                {this.getArrayItems(val, key, k, permIndex, collectionIndex, type)}\r\n                                            </CCol>\r\n                                        ))}\r\n                                    </CRow>\r\n                                }\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n    getArrayItems(val, key, k, permIndex, collectionIndex, type) {\r\n        return (\r\n            <p className=\"p-1 rounded border border-primary text-primary\">{val}\r\n                <span style={fRight}> <button type=\"button\"\r\n                    onClick={this.removeContentDataSubKeyArray.bind(this, key, k, permIndex, collectionIndex, type, val)}\r\n                    class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n            </p>\r\n        )\r\n    }\r\n\r\n    eqChanged(key, k, permIndex, collectionIndex, type, keyIndex, e) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        var newContentData = {}\r\n\r\n        Object.keys(collection.contentData[key]).map((ki, i) => {\r\n            if (keyIndex == i) {\r\n                if (arrayLabels.indexOf(e.target.value) < 0)\r\n                    newContentData[e.target.value] = collection.contentData[key][ki]\r\n                else {\r\n                    var arr = this.getValueAsArrayByType(collection.contentData[key][ki], e.target.name);\r\n                    newContentData[e.target.value] = arr\r\n                }\r\n            } else {\r\n                newContentData[ki] = collection.contentData[key][ki]\r\n            }\r\n        })\r\n        collection.contentData[key] = newContentData;\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    typeChanged(key, k, permIndex, collectionIndex, type, keyIndex, e) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        var newContentData = {}\r\n        Object.keys(collection.contentData[key]).map((ki, i) => {\r\n            if (keyIndex == i) {\r\n                if (arrayLabels.indexOf(k) < 0)\r\n                    newContentData[k] = this.convert(collection.contentData[key][ki], e.target.value);\r\n                else {\r\n                    var arr = this.convert(collection.contentData[key][ki], e.target.value);\r\n                    newContentData[k] = arr\r\n                }\r\n            } else {\r\n                newContentData[ki] = collection.contentData[key][ki]\r\n            }\r\n        })\r\n        collection.contentData[key] = newContentData;\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    removeContentDataSubKey(key, k, permIndex, collectionIndex, type) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        delete collection.contentData[key][k];\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n    removeContentDataSubKeyArray(key, k, permIndex, collectionIndex, type, val) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        const index = collection.contentData[key][k].indexOf(val);\r\n        if (index > -1) {\r\n            collection.contentData[key][k].splice(index, 1);\r\n        }\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n\r\n    changeContentDataSubKey(key, k, permIndex, collectionIndex, type, e) {\r\n        var eleman = document.getElementById(key + \"_\" + k + \"_\" + permIndex + \"_\" + collectionIndex + \"_\" + type)\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex];\r\n        if (arrayLabels.indexOf(k) < 0)\r\n            collection.contentData[key][k] = e.target.value;\r\n        else {\r\n            if (e.target.value.toString().indexOf(\",\") >= 0) {\r\n                var arr = this.getValueAsArrayByType(e.target.value, eleman.value);\r\n                switch (eleman.value) {\r\n                    case \"string\":\r\n                        if (arr[0] && collection.contentData[key][k].indexOf(arr[0]) < 0) {\r\n                            collection.contentData[key][k].push(arr[0]);\r\n                        }\r\n                        break;\r\n                    case \"number\":\r\n                        if (!isNaN(arr[0]) && collection.contentData[key][k].indexOf(arr[0]) < 0) {\r\n                            collection.contentData[key][k].push(arr[0]);\r\n                        }\r\n                        break;\r\n                }\r\n                e.target.value = \"\";\r\n            }\r\n            else if (e.target.value.toString().trim() == \"\") {\r\n                e.target.value = \"\";\r\n            }\r\n        }\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n    addNewContentDataSub(key, permIndex, collectionIndex, type) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        for(var i=0;i<this.state.compare.length;++i){\r\n            if(!(this.state.compare[i] in collection.contentData[key])){\r\n                 if(i>0 && collection.contentData[key][this.state.compare[i-1]].length>0){\r\n                    collection.contentData[key][this.state.compare[i]] = [];\r\n                }else if(i==0){\r\n                    collection.contentData[key][this.state.compare[i]] = [];\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n    removeContentDataKey(key, permIndex, collectionIndex, type) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        delete collection.contentData[key];\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n    changeContentDataKey(key, permIndex, collectionIndex, type, keyIndex, e) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        var newContentData = {}\r\n        Object.keys(collection.contentData).map((k, i) => {\r\n            if (keyIndex == i) {\r\n                newContentData[e.target.value] = collection.contentData[k]\r\n            } else {\r\n                newContentData[k] = collection.contentData[k]\r\n            }\r\n        })\r\n        collection.contentData = newContentData;\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n    changeCollectionName(permIndex, collectionIndex, type, e) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        collection[\"collectionName\"] = e.target.value\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    changeNonPermittedCollectionName(permIndex, collectionIndex, type, e) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        collection[\"collectionName\"] = e.target.value;\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    addNewContentData(permIndex, collectionIndex, type) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        collection.contentData[\"newkey\"] = {};\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    addNewCollection(permIndex, type) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections;\r\n        var model = {\r\n            collectionName: \"collectionName\",\r\n            contentData: {},\r\n            contentKeys: []\r\n        }\r\n        collection.push(model);\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    removeCollection(permIndex, index, type) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections;\r\n        collection.splice(index, 1)\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    changeCK(permIndex, collectionIndex, type, e) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        if (e.target.value.toString().indexOf(\",\") >= 0) {\r\n            var arr = this.getValueAsArrayByType(e.target.value, \"string\");\r\n            if (arr[0] && collection.contentKeys.indexOf(arr[0]) < 0) {\r\n                collection.contentKeys.push(arr[0]);\r\n            }\r\n            e.target.value = \"\";\r\n        }\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    removeContentKeys(val, permIndex, collectionIndex, type, e) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        const index = collection.contentKeys.indexOf(val);\r\n        if (index > -1) {\r\n            collection.contentKeys.splice(index, 1);\r\n        }\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    getContentKeysItems(val, permIndex, collectionIndex, type) {\r\n        return (\r\n            <p className=\"p-1 rounded border border-primary text-primary\">{val}\r\n                <span style={fRight}> <button type=\"button\"\r\n                    onClick={this.removeContentKeys.bind(this, val, permIndex, collectionIndex, type)}\r\n                    class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n            </p>\r\n        )\r\n    }\r\n    getValueAsArray(val) {\r\n        var arr = []\r\n        var d = val.toString();\r\n        var ind = d.indexOf(',');\r\n        if (ind >= 0) {\r\n            arr = val.split(\",\");\r\n        }\r\n        else\r\n            arr.push(val)\r\n\r\n        return arr;\r\n    }\r\n    getValueAsArrayByType(val, type) {\r\n        var arr = []\r\n        var d = val.toString();\r\n        var ind = d.indexOf(',');\r\n        if (ind >= 0) {\r\n            var arrElems = val.split(\",\");\r\n            switch (type) {\r\n                case \"string\":\r\n                    arr = arrElems;\r\n                    break;\r\n                case \"number\":\r\n                    arrElems.map((item) => {\r\n                        arr.push(parseInt(item));\r\n                    });\r\n            }\r\n        }\r\n        else {\r\n            switch (type) {\r\n                case \"string\":\r\n                    if (val) {\r\n                        arr.push(val)\r\n                    }\r\n                    break;\r\n                case \"number\":\r\n                    if (!isNaN(val)) {\r\n                        arr.push(val)\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return arr;\r\n    }\r\n    convert(val, type) {\r\n        if (!Array.isArray(val)) {\r\n            switch (type) {\r\n                case \"string\":\r\n                    return val.toString();\r\n                case \"number\":\r\n                    return parseInt(val);\r\n            }\r\n        } else {\r\n            switch (type) {\r\n                case \"string\":\r\n                    var arr = [];\r\n                    val.map((item) => {\r\n                        arr.push(item.toString());\r\n                    });\r\n                    return arr;\r\n                case \"number\":\r\n                    var arr = [];\r\n                    val.map((item) => {\r\n                        var item = parseInt(item);\r\n                        if (!isNaN(item))\r\n                            arr.push(item);\r\n                    });\r\n                    return arr;\r\n            }\r\n\r\n        }\r\n    }\r\n    async addUpdateRule() {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var rule = collectionCreateRules[0].roleRules;\r\n        var rls = {\r\n            method: rule.method,\r\n            methodType: rule.methodType,\r\n            methodContentType: rule.methodContentType,\r\n            service: rule.service,\r\n            permissions: rule.permissions\r\n        }\r\n        var orgId = localStorage.getItem(\"orgId\");\r\n        var appId = localStorage.getItem(\"appId\");\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            rules: [rls]\r\n        }\r\n        this.props.addUpdateRule(model);\r\n    }\r\n    setVisible(vis) {\r\n        this.setState({ visible: vis });\r\n    }\r\n    async setYesNoVisible(vis, question, sendType, args, send) {\r\n        if (vis)\r\n            this.setState({ yesNoVisible: vis, yesNoQuestion: question, sendType: sendType, arguments: args });\r\n        else {\r\n            if (send) {\r\n                var st = this.state.sendType;\r\n                switch (st) {\r\n                    case \"deleteRole\":\r\n                        await this.deleteRole(this.state.arguments);\r\n                        break;\r\n                    case \"saveAll\":\r\n                        await this.addUpdateRule();\r\n                        break;\r\n                }\r\n            }\r\n            this.setState({ yesNoVisible: vis, yesNoQuestion: \"\", sendType: \"\", arguments: [] });\r\n        }\r\n    }\r\n    async newRuleAdd() {\r\n        var eleman = document.getElementById(\"newrule\");\r\n        if (!eleman.value) {\r\n            this.props.toastShow(\"error\",\"Role Name cannot be null or empty!\");\r\n            return false;\r\n        }\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var orgId = localStorage.getItem(\"orgId\");\r\n        var appId = localStorage.getItem(\"appId\");\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            rules: [\r\n                {\r\n                    method: this.props.method,\r\n                    methodType: \"update\",\r\n                    methodContentType: \"collection\",\r\n                    service: this.props.service,\r\n                    permissions: [{\r\n                        role: eleman.value,\r\n                        permitted: {\r\n                            collections: []\r\n                        },\r\n                        nonPermitted: {\r\n                            collections: []\r\n                        }\r\n                    }]\r\n                }\r\n            ]\r\n        }\r\n        await this.props.newRuleAdd(model);\r\n        this.getUpdateCollectionRules();\r\n       \r\n    }\r\n    async deleteRole(args) {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var id = args[0];\r\n        var index = args[1];\r\n        var orgId = localStorage.getItem('orgId')\r\n        var appId = localStorage.getItem('appId')\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            id: id\r\n        }\r\n        var success = await this.props.deleteRole(model);\r\n       \r\n        if (success) {\r\n            var collectionCreateRules = [...this.state.collectionCreateRules]\r\n            var permissions = collectionCreateRules[0].roleRules.permissions;\r\n            permissions.splice(index, 1);\r\n            this.setState({ collectionCreateRules });\r\n        }\r\n       \r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <CCard>\r\n                <CRow className='m-2 border-bottom d-flex align-items-center'>\r\n                    <CCol className='col-6 pb-2'>\r\n                        <CCardTitle>Add/Update <b>\"Collection Update\"</b> Permissions</CCardTitle>\r\n                    </CCol>\r\n                    <CCol className='col-6 d-grid gap-2 d-md-flex justify-content-md-end pb-2'>\r\n                        <CButton color='secondary' onClick={this.setVisible.bind(this, true)}>Add New Role</CButton>\r\n                        <CButton color='info' style={{\"color\":\"#fff\"}}\r\n                            onClick={this.setYesNoVisible.bind(this, true, \"Are you sure you want to save all?\", \"saveAll\", [this])}>Save All</CButton>\r\n                    </CCol>\r\n\r\n                    <CModal visible={this.state.visible} onClose={this.setVisible.bind(this, false)}>\r\n                        <CModalHeader>\r\n                            <CModalTitle>Add New Role</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalBody>\r\n                            <CFormInput type='text' placeholder='Role Name' name=\"newRule\" id=\"newrule\" />\r\n                        </CModalBody>\r\n                        <CModalFooter>\r\n                            <CButton color=\"secondary\" onClick={this.setVisible.bind(this, false)}>\r\n                                Close\r\n                            </CButton>\r\n                            <CButton color=\"primary\" onClick={this.newRuleAdd.bind(this)}>Create Role</CButton>\r\n                        </CModalFooter>\r\n                    </CModal>\r\n                    <CModal visible={this.state.yesNoVisible} onClose={this.setYesNoVisible.bind(this, false)}>\r\n                        <CModalHeader>\r\n                            <CModalTitle>{this.state.yesNoQuestion}</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalFooter>\r\n                            <CButton color=\"secondary\" onClick={this.setYesNoVisible.bind(this, false, null, null, null, false)}>\r\n                                No\r\n                            </CButton>\r\n                            <CButton color=\"primary\" onClick={this.setYesNoVisible.bind(this, false, null, null, null, true)}>Yes</CButton>\r\n                        </CModalFooter>\r\n                    </CModal>\r\n                </CRow>\r\n                <CCardBody style={cardText}>\r\n\r\n                    {this.state.collectionCreateRules.length > 0 &&\r\n\r\n                        this.state.collectionCreateRules[0].roleRules.permissions.map((item, index) => (\r\n                            <CCard className='mt-1'>\r\n                                <CCardBody>\r\n                                    <CCardTitle><b>\"{item.role}\"</b> Rules  <span style={fRight}>\r\n                                        <CButton color='danger'\r\n                                            onClick={this.setYesNoVisible.bind(this, true, \"Are you sure you want to delete \" + item.role + \" role?\", \"deleteRole\", [item._id, index, this])}\r\n                                            //onClick={this.deleteRole.bind(this,item._id,index)}\r\n                                            style={dangerIcon}>Delete Role</CButton></span></CCardTitle>\r\n                                    <CNav variant=\"tabs\" className='mt-4' role=\"tablist\" style={vars} >\r\n                                        <CNavItem>\r\n                                            <CNavLink\r\n                                                style={vars}\r\n                                                active={this.getSubActiveKey(this, 1, item._id)}\r\n                                                onClick={this.setSubActiveKey.bind(this, 1, item._id)}\r\n                                            >\r\n                                                Permitted\r\n                                            </CNavLink>\r\n                                        </CNavItem>\r\n                                        <CNavItem>\r\n                                            <CNavLink\r\n                                                style={vars}\r\n                                                active={this.getSubActiveKey(this, 2, item._id)}\r\n                                                onClick={this.setSubActiveKey.bind(this, 2, item._id)}\r\n                                            >\r\n                                                Non-Permitted\r\n                                            </CNavLink>\r\n                                        </CNavItem>\r\n\r\n                                    </CNav>\r\n                                    <CTabContent>\r\n                                        <CTabPane role=\"tabpanel\" className='p-3' aria-labelledby=\"home-tab\" visible={this.getSubActiveKey(this, 1, item._id)}>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Collections</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    {item.permitted.collections.map((c, i) => (\r\n                                                        <div>\r\n                                                            <CRow className='mt-2'>\r\n                                                                <CCol className='col-11'>\r\n                                                                    <CFormInput type='text' name='collectionName'\r\n                                                                        onChange={this.changeCollectionName.bind(this, index, i, \"permitted\")}\r\n                                                                        placeholder='Collection Name' value={c.collectionName} />\r\n                                                                </CCol>\r\n                                                                <CCol className='align-self-center'>\r\n                                                                    <span style={fRight}> <button type=\"button\"\r\n                                                                        onClick={this.removeCollection.bind(this, index, i, \"permitted\")}\r\n                                                                        class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            {Object.keys(c.contentData).map((key, keyIndex) => (\r\n                                                                <div>\r\n                                                                    <CRow className='mt-2'>\r\n                                                                        <CCol className='col-11'>\r\n                                                                            <CCard>\r\n                                                                                <CCardBody>\r\n                                                                                    <CRow className='mt-2 pb-2 border-bottom'>\r\n                                                                                        <CCol className='col-9'><CFormInput type='text' placeholder='Content Field'\r\n                                                                                            value={key} onChange={this.changeContentDataKey.bind(this, key, index, i, \"permitted\", keyIndex)} /></CCol>\r\n                                                                                        <CCol className='col-1 align-self-center'>\r\n                                                                                            <button type=\"button\"\r\n                                                                                            onClick={this.removeContentDataKey.bind(this, key, index, i, \"permitted\")}\r\n                                                                                                class=\"btn-close\" aria-label=\"Remove\" />\r\n                                                                                        </CCol>\r\n                                                                                    </CRow>\r\n                                                                                    {this.getContentData(c.contentData[key], key, index, i, \"permitted\")}\r\n                                                                                </CCardBody>\r\n                                                                            </CCard>\r\n                                                                        </CCol>\r\n                                                                    </CRow>\r\n\r\n\r\n                                                                </div>\r\n                                                            ))\r\n                                                            }\r\n\r\n                                                            <CRow className='mt-2 justify-content-center'>\r\n                                                                <CCol className='col-6 text-center'>\r\n                                                                    <CButton onClick={this.addNewContentData.bind(this, index, i, \"permitted\")}><CIcon icon={icon.cilPlus} />Add New Content Data for {c.collectionName}</CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            <CRow className='mt-2 pb-2'>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <CFormInput type='text' name='contentKeys'\r\n                                                                        onChange={this.changeCK.bind(this, index, i, \"permitted\")}\r\n                                                                        placeholder='Content Keys with comma' />\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n\r\n                                                            <CRow className='mt-2'>\r\n                                                                {c.contentKeys.map((val =>\r\n                                                                    <CCol className='col-3'>\r\n                                                                        {this.getContentKeysItems(val, index, i, \"permitted\")}\r\n                                                                    </CCol>\r\n                                                                ))}\r\n                                                            </CRow>\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </CCardBody>\r\n                                                <CCardFooter>\r\n                                                    <CRow className='mt-2 justify-content-center'>\r\n                                                        <CCol className='col-6 text-center'>\r\n                                                            <CButton onClick={this.addNewCollection.bind(this, index, \"permitted\")}><CIcon icon={icon.cilPlus} />Add New Collection for {item.role}</CButton>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                </CCardFooter>\r\n                                            </CCard>\r\n\r\n                                        </CTabPane>\r\n                                        <CTabPane role=\"tabpanel\" className='p-3' aria-labelledby=\"profile-tab\" visible={this.getSubActiveKey(this, 2, item._id)}>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Collections</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    {item.nonPermitted.collections.map((c, i) => (\r\n                                                        <div>\r\n                                                            <CRow className='mt-2'>\r\n                                                                <CCol className='col-11'>\r\n                                                                    <CFormInput type='text' name='collectionName'\r\n                                                                        onChange={this.changeNonPermittedCollectionName.bind(this, index, i, \"nonPermitted\")} placeholder='Collection Name' value={c.collectionName} />\r\n                                                                </CCol>\r\n                                                                <CCol className='align-self-center'>\r\n                                                                    <span style={fRight}> <button type=\"button\"\r\n                                                                        onClick={this.removeCollection.bind(this, index, i, \"nonPermitted\")}\r\n                                                                        class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            {Object.keys(c.contentData).map((key, keyIndex) => (\r\n                                                                <div>\r\n                                                                    <CRow className='mt-2'>\r\n                                                                        <CCol className='col-11'>\r\n                                                                            <CCard>\r\n                                                                                <CCardBody>\r\n                                                                                    <CRow className='mt-2 pb-2 border-bottom'>\r\n                                                                                        <CCol className='col-9'><CFormInput type='text' placeholder='Content Field'\r\n                                                                                            value={key} onChange={this.changeContentDataKey.bind(this, key, index, i, \"nonPermitted\", keyIndex)} /></CCol>\r\n                                                                                        <CCol className='col-1 align-self-center'>\r\n                                                                                            <button type=\"button\"\r\n                                                                                            onClick={this.removeContentDataKey.bind(this, key, index, i, \"nonPermitted\")}\r\n                                                                                                class=\"btn-close\" aria-label=\"Remove\" />\r\n                                                                                        </CCol>\r\n                                                                                    </CRow>\r\n                                                                                    {this.getContentData(c.contentData[key], key, index, i, \"nonPermitted\")}\r\n                                                                                </CCardBody>\r\n                                                                            </CCard>\r\n                                                                        </CCol>\r\n                                                                    </CRow>\r\n\r\n\r\n                                                                </div>\r\n                                                            ))\r\n                                                            }\r\n\r\n                                                            <CRow className='mt-2 justify-content-center'>\r\n                                                                <CCol className='col-6 text-center'>\r\n                                                                    <CButton onClick={this.addNewContentData.bind(this, index, i, \"nonPermitted\")}><CIcon icon={icon.cilPlus} />Add New Content Data for {c.collectionName}</CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            <CRow className='mt-2 pb-2'>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <CFormInput type='text' name='contentKeys'\r\n                                                                        onChange={this.changeCK.bind(this, index, i, \"nonPermitted\")}\r\n                                                                        placeholder='Content Keys with comma' />\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n\r\n                                                            <CRow className='mt-2'>\r\n                                                                {c.contentKeys.map((val =>\r\n                                                                    <CCol className='col-3'>\r\n                                                                        {this.getContentKeysItems(val, index, i, \"nonPermitted\")}\r\n                                                                    </CCol>\r\n                                                                ))}\r\n                                                            </CRow>\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </CCardBody>\r\n                                                <CCardFooter>\r\n                                                    <CRow className='mt-2 justify-content-center'>\r\n                                                        <CCol className='col-6 text-center'>\r\n                                                            <CButton onClick={this.addNewCollection.bind(this, index, \"nonPermitted\")}><CIcon icon={icon.cilPlus} />Add New Collection for {item.role}</CButton>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                </CCardFooter>\r\n                                            </CCard>\r\n\r\n                                        </CTabPane>\r\n\r\n                                    </CTabContent>\r\n                                </CCardBody>\r\n                            </CCard>\r\n                        ))}\r\n                </CCardBody>\r\n\r\n\r\n            </CCard>\r\n        )\r\n    }\r\n}\r\nexport default UpdateCollection","import React, { Component } from 'react';\r\nimport CIcon from '@coreui/icons-react';\r\nimport * as icon from '@coreui/icons';\r\nimport { Link } from 'react-router-dom'\r\nimport { format } from 'date-fns';\r\nimport { ToastContainer, toast,Slide } from 'react-toastify';\r\nimport Popup from '../../../widgets/Popup';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CCard,\r\n    CCardBody,\r\n    CRow,\r\n    CCol,\r\n    CCardTitle,\r\n    CFormInput,\r\n    CButton,\r\n    CFormSelect,\r\n    CModal,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CCardHeader,\r\n    CCardFooter,\r\n} from '@coreui/react'\r\nimport { bool } from 'prop-types';\r\nconst vars = {\r\n    'cursor': \"pointer\",\r\n    \"color\": \"rgb(33, 37, 41)\",\r\n    \"background-color\": \"#fff\"\r\n}\r\nconst activeLink = {\r\n    'cursor': \"pointer\",\r\n    \"background-color\": \"rgb(33, 37, 41)\",\r\n    \"color\": \"#fff\"\r\n}\r\nconst dangerIcon = {\r\n    \"color\": \"#f7f2f2\"\r\n}\r\nconst fRight = {\r\n    \"float\": \"right\"\r\n}\r\nconst cardText = { \"height\": \"620px\", \"overflow-y\": \"scroll\" }\r\nconst arrayLabels = [\"not\", \"in\",\"eq\"]\r\nexport class DeleteCollection extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            collectionCreateRules: [],\r\n            activeKey: 1,\r\n            activeSubKeys: [1, 1, 1, 1, 1],\r\n            subKeys: [],\r\n            changedTypes: [],\r\n            visible: false,\r\n            yesNoVisible: false,\r\n            yesNoQuestion: \"\",\r\n            arguments: [],\r\n            sendType: \"\",\r\n            compare:[\"eq\",\"not\",\"gt\",\"gte\",\"lt\",\"lte\",\"in\"]\r\n\r\n        }\r\n    }\r\n\r\n    setSubActiveKey(key, id) {\r\n        const { subKeys } = this.state;\r\n        var index = subKeys.findIndex(x => x.id === id);\r\n        subKeys[index].activeKey = key;\r\n        this.setState({ subKeys });\r\n        return false;\r\n    }\r\n    getSubActiveKey(e, key, id) {\r\n        const { subKeys } = this.state;\r\n        var index = subKeys.findIndex(x => x.id === id);\r\n        return key == subKeys[index].activeKey\r\n    }\r\n    componentDidMount() {\r\n        this.getDeleteCollectionRules();\r\n    }\r\n    async getDeleteCollectionRules() {\r\n        var orgId = localStorage.getItem('orgId')\r\n        var appId = localStorage.getItem('appId')\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            service: this.props.service,\r\n            methodContentType: \"collection\",\r\n            methodType: \"delete\"\r\n        }\r\n        var d = { ...this.state.collectionCreateRules };\r\n        d = await this.props.getRules(model);\r\n        var sk = [];\r\n        if (d.length > 0) {\r\n            var rr = d[0];\r\n            rr.roleRules.permissions.map(m => {\r\n                var data = {\r\n                    id: m._id,\r\n                    activeKey: 1\r\n                }\r\n                sk.push(data);\r\n            })\r\n        }\r\n\r\n        this.setState({ collectionCreateRules: d, subKeys: sk });\r\n    }\r\n    getValueType(val) {\r\n        if (Array.isArray(val)) {\r\n            if (val.length > 0) {\r\n                return typeof val[0]\r\n            }\r\n        }\r\n        return typeof val;\r\n    }\r\n    getContentData(item, key, permIndex, collectionIndex, type) {\r\n        return (\r\n            <div>\r\n                {Object.keys(item).length < 1 &&\r\n                    <CRow className='mt-2 justify-content-center'>\r\n                        <CCol className='col-2'>\r\n                            <CButton color='primary' onClick={this.addNewContentDataSub.bind(this, key, permIndex, collectionIndex, type)}><CIcon style={dangerIcon} icon={icon.cilPlus} /></CButton>\r\n                        </CCol>\r\n                    </CRow>\r\n                }\r\n                {typeof item == \"object\" &&\r\n                    Object.keys(item).map((k, i) => {\r\n                        return (\r\n                            <div>\r\n                                <CRow className='mt-2'>\r\n                                    <CCol className='col-3'>\r\n                                        <CFormSelect onChange={this.eqChanged.bind(this, key, k, permIndex, collectionIndex, type, i)}\r\n                                            value={k} name={this.getValueType(item[k])}>\r\n                                            <option value=\"eq\">{'='}</option>\r\n                                            <option value=\"not\">{'!='}</option>\r\n                                            <option value=\"gt\">{'>'}</option>\r\n                                            <option value=\"gte\">{'>='}</option>\r\n                                            <option value=\"lt\">{'<'}</option>\r\n                                            <option value=\"lte\">{'<='}</option>\r\n                                            <option value=\"in\">{'in'}</option>\r\n                                        </CFormSelect>\r\n                                    </CCol>\r\n                                    <CCol className='col-3'>\r\n                                        <CFormInput type='text' name='value' onChange={this.changeContentDataSubKey.bind(this, key, k, permIndex, collectionIndex, type)} placeholder={arrayLabels.indexOf(k) < 0 ? \"value\" : \"values with comma\"} value={arrayLabels.indexOf(k) < 0 ? item[k] : this.value} />\r\n                                    </CCol>\r\n                                    <CCol className='col-3'>\r\n                                        <CFormSelect id={key + \"_\" + k + \"_\" + permIndex + \"_\" + collectionIndex + \"_\" + type}\r\n                                            onChange={this.typeChanged.bind(this, key, k, permIndex, collectionIndex, type, i)}\r\n                                            value={this.getValueType(item[k])} \r\n                                            disabled={item[k].length<1}>\r\n                                            <option value=\"string\">{'String'}</option>\r\n                                            <option value=\"number\">{'Integer'}</option>\r\n                                        </CFormSelect>\r\n                                    </CCol>\r\n                                    <CCol className='col-1 align-self-center'>\r\n                                        <button type=\"button\"                        \r\n                                            onClick={this.removeContentDataSubKey.bind(this, key, k, permIndex, collectionIndex, type)}\r\n                                            class=\"btn-close\" aria-label=\"Remove\"/>\r\n                                    </CCol>\r\n                                   \r\n                                    {Object.keys(item).length - 1 == i &&\r\n                                        <CCol className='col-1'>\r\n                                            <CButton color='primary' onClick={this.addNewContentDataSub.bind(this, key, permIndex, collectionIndex, type)}><CIcon style={dangerIcon} icon={icon.cilPlus} /></CButton>\r\n                                        </CCol>\r\n                                    }\r\n                                </CRow>\r\n                                {arrayLabels.indexOf(k) >= 0 &&\r\n                                    <CRow className='mt-2'>\r\n                                        {item[k].map((val =>\r\n                                            <CCol className='col-3'>\r\n                                                {this.getArrayItems(val, key, k, permIndex, collectionIndex, type)}\r\n                                            </CCol>\r\n                                        ))}\r\n                                    </CRow>\r\n                                }\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n    getArrayItems(val, key, k, permIndex, collectionIndex, type) {\r\n        return (\r\n            <p className=\"p-1 rounded border border-primary text-primary\">{val}\r\n                <span style={fRight}> <button type=\"button\"\r\n                    onClick={this.removeContentDataSubKeyArray.bind(this, key, k, permIndex, collectionIndex, type, val)}\r\n                    class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n            </p>\r\n        )\r\n    }\r\n\r\n    eqChanged(key, k, permIndex, collectionIndex, type, keyIndex, e) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        var newContentData = {}\r\n\r\n        Object.keys(collection.contentData[key]).map((ki, i) => {\r\n            if (keyIndex == i) {\r\n                if (arrayLabels.indexOf(e.target.value) < 0)\r\n                    newContentData[e.target.value] = collection.contentData[key][ki]\r\n                else {\r\n                    var arr = this.getValueAsArrayByType(collection.contentData[key][ki], e.target.name);\r\n                    newContentData[e.target.value] = arr\r\n                }\r\n            } else {\r\n                newContentData[ki] = collection.contentData[key][ki]\r\n            }\r\n        })\r\n        collection.contentData[key] = newContentData;\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    typeChanged(key, k, permIndex, collectionIndex, type, keyIndex, e) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        var newContentData = {}\r\n        Object.keys(collection.contentData[key]).map((ki, i) => {\r\n            if (keyIndex == i) {\r\n                if (arrayLabels.indexOf(k) < 0)\r\n                    newContentData[k] = this.convert(collection.contentData[key][ki], e.target.value);\r\n                else {\r\n                    var arr = this.convert(collection.contentData[key][ki], e.target.value);\r\n                    newContentData[k] = arr\r\n                }\r\n            } else {\r\n                newContentData[ki] = collection.contentData[key][ki]\r\n            }\r\n        })\r\n        collection.contentData[key] = newContentData;\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    removeContentDataSubKey(key, k, permIndex, collectionIndex, type) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        delete collection.contentData[key][k];\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n    removeContentDataSubKeyArray(key, k, permIndex, collectionIndex, type, val) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        const index = collection.contentData[key][k].indexOf(val);\r\n        if (index > -1) {\r\n            collection.contentData[key][k].splice(index, 1);\r\n        }\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n\r\n    changeContentDataSubKey(key, k, permIndex, collectionIndex, type, e) {\r\n        var eleman = document.getElementById(key + \"_\" + k + \"_\" + permIndex + \"_\" + collectionIndex + \"_\" + type)\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex];\r\n        if (arrayLabels.indexOf(k) < 0)\r\n            collection.contentData[key][k] = e.target.value;\r\n        else {\r\n            if (e.target.value.toString().indexOf(\",\") >= 0) {\r\n                var arr = this.getValueAsArrayByType(e.target.value, eleman.value);\r\n                switch (eleman.value) {\r\n                    case \"string\":\r\n                        if (arr[0] && collection.contentData[key][k].indexOf(arr[0]) < 0) {\r\n                            collection.contentData[key][k].push(arr[0]);\r\n                        }\r\n                        break;\r\n                    case \"number\":\r\n                        if (!isNaN(arr[0]) && collection.contentData[key][k].indexOf(arr[0]) < 0) {\r\n                            collection.contentData[key][k].push(arr[0]);\r\n                        }\r\n                        break;\r\n                }\r\n                e.target.value = \"\";\r\n            }\r\n            else if (e.target.value.toString().trim() == \"\") {\r\n                e.target.value = \"\";\r\n            }\r\n        }\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n    addNewContentDataSub(key, permIndex, collectionIndex, type) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        for(var i=0;i<this.state.compare.length;++i){\r\n            if(!(this.state.compare[i] in collection.contentData[key])){\r\n                 if(i>0 && collection.contentData[key][this.state.compare[i-1]].length>0){\r\n                    collection.contentData[key][this.state.compare[i]] = [];\r\n                }else if(i==0){\r\n                    collection.contentData[key][this.state.compare[i]] = [];\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n    removeContentDataKey(key, permIndex, collectionIndex, type) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        delete collection.contentData[key];\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n    changeContentDataKey(key, permIndex, collectionIndex, type, keyIndex, e) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        var newContentData = {}\r\n        Object.keys(collection.contentData).map((k, i) => {\r\n            if (keyIndex == i) {\r\n                newContentData[e.target.value] = collection.contentData[k]\r\n            } else {\r\n                newContentData[k] = collection.contentData[k]\r\n            }\r\n        })\r\n        collection.contentData = newContentData;\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n    changeCollectionName(permIndex, collectionIndex, type, e) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        collection[\"collectionName\"] = e.target.value\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    changeNonPermittedCollectionName(permIndex, collectionIndex, type, e) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        collection[\"collectionName\"] = e.target.value\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    addNewContentData(permIndex, collectionIndex, type) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        collection.contentData[\"newkey\"] = {};\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    addNewCollection(permIndex, type) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections;\r\n        var model = {\r\n            collectionName: \"collectionName\",\r\n            contentData: {},\r\n            contentKeys: []\r\n        }\r\n        collection.push(model);\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    removeCollection(permIndex, index, type) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections;\r\n        collection.splice(index, 1)\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    changeCK(permIndex, collectionIndex, type, e) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        if (e.target.value.toString().indexOf(\",\") >= 0) {\r\n            var arr = this.getValueAsArrayByType(e.target.value, \"string\");\r\n            if (arr[0] && collection.contentKeys.indexOf(arr[0]) < 0) {\r\n                collection.contentKeys.push(arr[0]);\r\n            }\r\n            e.target.value = \"\";\r\n        }\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    removeContentKeys(val, permIndex, collectionIndex, type, e) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        const index = collection.contentKeys.indexOf(val);\r\n        if (index > -1) {\r\n            collection.contentKeys.splice(index, 1);\r\n        }\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    getContentKeysItems(val, permIndex, collectionIndex, type) {\r\n        return (\r\n            <p className=\"p-1 rounded border border-primary text-primary\">{val}\r\n                <span style={fRight}> <button type=\"button\"\r\n                    onClick={this.removeContentKeys.bind(this, val, permIndex, collectionIndex, type)}\r\n                    class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n            </p>\r\n        )\r\n    }\r\n    getValueAsArray(val) {\r\n        var arr = []\r\n        var d = val.toString();\r\n        var ind = d.indexOf(',');\r\n        if (ind >= 0) {\r\n            arr = val.split(\",\");\r\n        }\r\n        else\r\n            arr.push(val)\r\n\r\n        return arr;\r\n    }\r\n    getValueAsArrayByType(val, type) {\r\n        var arr = []\r\n        var d = val.toString();\r\n        var ind = d.indexOf(',');\r\n        if (ind >= 0) {\r\n            var arrElems = val.split(\",\");\r\n            switch (type) {\r\n                case \"string\":\r\n                    arr = arrElems;\r\n                    break;\r\n                case \"number\":\r\n                    arrElems.map((item) => {\r\n                        arr.push(parseInt(item));\r\n                    });\r\n            }\r\n        }\r\n        else {\r\n            switch (type) {\r\n                case \"string\":\r\n                    if (val) {\r\n                        arr.push(val)\r\n                    }\r\n                    break;\r\n                case \"number\":\r\n                    if (!isNaN(val)) {\r\n                        arr.push(val)\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return arr;\r\n    }\r\n    convert(val, type) {\r\n        if (!Array.isArray(val)) {\r\n            switch (type) {\r\n                case \"string\":\r\n                    return val.toString();\r\n                case \"number\":\r\n                    return parseInt(val);\r\n            }\r\n        } else {\r\n            switch (type) {\r\n                case \"string\":\r\n                    var arr = [];\r\n                    val.map((item) => {\r\n                        arr.push(item.toString());\r\n                    });\r\n                    return arr;\r\n                case \"number\":\r\n                    var arr = [];\r\n                    val.map((item) => {\r\n                        var item = parseInt(item);\r\n                        if (!isNaN(item))\r\n                            arr.push(item);\r\n                    });\r\n                    return arr;\r\n            }\r\n\r\n        }\r\n    }\r\n    async addUpdateRule() {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var rule = collectionCreateRules[0].roleRules;\r\n        var rls = {\r\n            method: rule.method,\r\n            methodType: rule.methodType,\r\n            methodContentType: rule.methodContentType,\r\n            service: rule.service,\r\n            permissions: rule.permissions\r\n        }\r\n        var orgId = localStorage.getItem(\"orgId\");\r\n        var appId = localStorage.getItem(\"appId\");\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            rules: [rls]\r\n        }\r\n        this.props.addUpdateRule(model);\r\n    }\r\n    setVisible(vis) {\r\n        this.setState({ visible: vis });\r\n    }\r\n    async setYesNoVisible(vis, question, sendType, args, send) {\r\n        if (vis)\r\n            this.setState({ yesNoVisible: vis, yesNoQuestion: question, sendType: sendType, arguments: args });\r\n        else {\r\n            if (send) {\r\n                var st = this.state.sendType;\r\n                switch (st) {\r\n                    case \"deleteRole\":\r\n                        await this.deleteRole(this.state.arguments);\r\n                        break;\r\n                    case \"saveAll\":\r\n                        await this.addUpdateRule();\r\n                        break;\r\n                }\r\n            }\r\n            this.setState({ yesNoVisible: vis, yesNoQuestion: \"\", sendType: \"\", arguments: [] });\r\n        }\r\n    }\r\n    async newRuleAdd() {\r\n        var eleman = document.getElementById(\"newrule\");\r\n        if (!eleman.value) {\r\n            this.props.toastShow(\"error\",\"Role Name cannot be null or empty!\");\r\n            return false;\r\n        }\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var orgId = localStorage.getItem(\"orgId\");\r\n        var appId = localStorage.getItem(\"appId\");\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            rules: [\r\n                {\r\n                    method: this.props.method,\r\n                    methodType: \"delete\",\r\n                    methodContentType: \"collection\",\r\n                    service: this.props.service,\r\n                    permissions: [{\r\n                        role: eleman.value,\r\n                        permitted: {\r\n                            collections: []\r\n                        },\r\n                        nonPermitted: {\r\n                            collections: []\r\n                        }\r\n                    }]\r\n                }\r\n            ]\r\n        }\r\n        await this.props.newRuleAdd(model);\r\n        this.getDeleteCollectionRules();\r\n    }\r\n    async deleteRole(args) {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing...\");\r\n        var id = args[0];\r\n        var index = args[1];\r\n        var orgId = localStorage.getItem('orgId')\r\n        var appId = localStorage.getItem('appId')\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            id: id\r\n        }\r\n        var success = await this.props.deleteRole(model);\r\n        if (success) {\r\n            var collectionCreateRules = [...this.state.collectionCreateRules]\r\n            var permissions = collectionCreateRules[0].roleRules.permissions;\r\n            permissions.splice(index, 1);\r\n            this.setState({ collectionCreateRules });\r\n        }\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <CCard>\r\n                <CRow className='m-2 border-bottom d-flex align-items-center'>\r\n                    <CCol className='col-6 pb-2'>\r\n                        <CCardTitle>Add/Update <b>\"Collection Delete\"</b> Permissions</CCardTitle>\r\n                    </CCol>\r\n                    <CCol className='col-6 d-grid gap-2 d-md-flex justify-content-md-end pb-2'>\r\n                        <CButton color='secondary' onClick={this.setVisible.bind(this, true)}>Add New Role</CButton>\r\n                        <CButton color='info' style={{\"color\":\"#fff\"}}\r\n                            onClick={this.setYesNoVisible.bind(this, true, \"Are you sure you want to save all?\", \"saveAll\", [this])}>Save All</CButton>\r\n                    </CCol>\r\n\r\n                    <CModal visible={this.state.visible} onClose={this.setVisible.bind(this, false)}>\r\n                        <CModalHeader>\r\n                            <CModalTitle>Add New Role</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalBody>\r\n                            <CFormInput type='text' placeholder='Role Name' name=\"newRule\" id=\"newrule\" />\r\n                        </CModalBody>\r\n                        <CModalFooter>\r\n                            <CButton color=\"secondary\" onClick={this.setVisible.bind(this, false)}>\r\n                                Close\r\n                            </CButton>\r\n                            <CButton color=\"primary\" onClick={this.newRuleAdd.bind(this)}>Create Role</CButton>\r\n                        </CModalFooter>\r\n                    </CModal>\r\n                    <CModal visible={this.state.yesNoVisible} onClose={this.setYesNoVisible.bind(this, false)}>\r\n                        <CModalHeader>\r\n                            <CModalTitle>{this.state.yesNoQuestion}</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalFooter>\r\n                            <CButton color=\"secondary\" onClick={this.setYesNoVisible.bind(this, false, null, null, null, false)}>\r\n                                No\r\n                            </CButton>\r\n                            <CButton color=\"primary\" onClick={this.setYesNoVisible.bind(this, false, null, null, null, true)}>Yes</CButton>\r\n                        </CModalFooter>\r\n                    </CModal>\r\n                </CRow>\r\n                <CCardBody style={cardText}>\r\n\r\n                    {this.state.collectionCreateRules.length > 0 &&\r\n\r\n                        this.state.collectionCreateRules[0].roleRules.permissions.map((item, index) => (\r\n                            <CCard className='mt-1'>\r\n                                <CCardBody>\r\n                                    <CCardTitle><b>\"{item.role}\"</b> Rules  <span style={fRight}>\r\n                                        <CButton color='danger'\r\n                                            onClick={this.setYesNoVisible.bind(this, true, \"Are you sure you want to delete \" + item.role + \" role?\", \"deleteRole\", [item._id, index, this])}\r\n                                            //onClick={this.deleteRole.bind(this,item._id,index)}\r\n                                            style={dangerIcon}>Delete Role</CButton></span></CCardTitle>\r\n                                    <CNav variant=\"tabs\" className='mt-4' role=\"tablist\" style={vars} >\r\n                                        <CNavItem>\r\n                                            <CNavLink\r\n                                                style={vars}\r\n                                                active={this.getSubActiveKey(this, 1, item._id)}\r\n                                                onClick={this.setSubActiveKey.bind(this, 1, item._id)}\r\n                                            >\r\n                                                Permitted\r\n                                            </CNavLink>\r\n                                        </CNavItem>\r\n                                        <CNavItem>\r\n                                            <CNavLink\r\n                                                style={vars}\r\n                                                active={this.getSubActiveKey(this, 2, item._id)}\r\n                                                onClick={this.setSubActiveKey.bind(this, 2, item._id)}\r\n                                            >\r\n                                                Non-Permitted\r\n                                            </CNavLink>\r\n                                        </CNavItem>\r\n\r\n                                    </CNav>\r\n                                    <CTabContent>\r\n                                        <CTabPane role=\"tabpanel\" className='p-3' aria-labelledby=\"home-tab\" visible={this.getSubActiveKey(this, 1, item._id)}>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Collections</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    {item.permitted.collections.map((c, i) => (\r\n                                                        <div>\r\n                                                            <CRow className='mt-2'>\r\n                                                                <CCol className='col-11'>\r\n                                                                    <CFormInput type='text' name='collectionName'\r\n                                                                        onChange={this.changeCollectionName.bind(this, index, i, \"permitted\")}\r\n                                                                        placeholder='Collection Name' value={c.collectionName} />\r\n                                                                </CCol>\r\n                                                                <CCol className='align-self-center'>\r\n                                                                    <span style={fRight}> <button type=\"button\"\r\n                                                                        onClick={this.removeCollection.bind(this, index, i, \"permitted\")}\r\n                                                                        class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            {Object.keys(c.contentData).map((key, keyIndex) => (\r\n                                                                <div>\r\n                                                                    <CRow className='mt-2'>\r\n                                                                        <CCol className='col-11'>\r\n                                                                            <CCard>\r\n                                                                                <CCardBody>\r\n                                                                                    <CRow className='mt-2 pb-2 border-bottom'>\r\n                                                                                        <CCol className='col-9'><CFormInput type='text' placeholder='Content Field'\r\n                                                                                            value={key} onChange={this.changeContentDataKey.bind(this, key, index, i, \"permitted\", keyIndex)} /></CCol>\r\n                                                                                        <CCol className='col-1 align-self-center'>\r\n                                                                                            <button type=\"button\"\r\n                                                                                            onClick={this.removeContentDataKey.bind(this, key, index, i, \"permitted\")}\r\n                                                                                                class=\"btn-close\" aria-label=\"Remove\" />\r\n                                                                                        </CCol>\r\n                                                                                    </CRow>\r\n                                                                                    {this.getContentData(c.contentData[key], key, index, i, \"permitted\")}\r\n                                                                                </CCardBody>\r\n                                                                            </CCard>\r\n                                                                        </CCol>\r\n                                                                    </CRow>\r\n\r\n\r\n                                                                </div>\r\n                                                            ))\r\n                                                            }\r\n\r\n                                                            <CRow className='mt-2 justify-content-center'>\r\n                                                                <CCol className='col-6 text-center'>\r\n                                                                    <CButton onClick={this.addNewContentData.bind(this, index, i, \"permitted\")}><CIcon icon={icon.cilPlus} />Add New Content Data for {c.collectionName}</CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </CCardBody>\r\n                                                <CCardFooter>\r\n                                                    <CRow className='mt-2 justify-content-center'>\r\n                                                        <CCol className='col-6 text-center'>\r\n                                                            <CButton onClick={this.addNewCollection.bind(this, index, \"permitted\")}><CIcon icon={icon.cilPlus} />Add New Collection for {item.role}</CButton>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                </CCardFooter>\r\n                                            </CCard>\r\n\r\n                                        </CTabPane>\r\n                                        <CTabPane role=\"tabpanel\" className='p-3' aria-labelledby=\"profile-tab\" visible={this.getSubActiveKey(this, 2, item._id)}>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Collections</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    {item.nonPermitted.collections.map((c, i) => (\r\n                                                        <div>\r\n                                                            <CRow className='mt-2'>\r\n                                                                <CCol className='col-11'>\r\n                                                                    <CFormInput type='text' name='collectionName'\r\n                                                                        onChange={this.changeNonPermittedCollectionName.bind(this, index, i, \"nonPermitted\")} placeholder='Collection Name' value={c.collectionName} />\r\n                                                                </CCol>\r\n                                                                <CCol className='align-self-center'>\r\n                                                                    <span style={fRight}> <button type=\"button\"\r\n                                                                       onClick={this.removeCollection.bind(this, index, i, \"nonPermitted\")}\r\n                                                                        class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            {Object.keys(c.contentData).map((key, keyIndex) => (\r\n                                                                <div>\r\n                                                                    <CRow className='mt-2'>\r\n                                                                        <CCol className='col-11'>\r\n                                                                            <CCard>\r\n                                                                                <CCardBody>\r\n                                                                                    <CRow className='mt-2 pb-2 border-bottom'>\r\n                                                                                        <CCol className='col-9'><CFormInput type='text' placeholder='Content Field'\r\n                                                                                            value={key} onChange={this.changeContentDataKey.bind(this, key, index, i, \"nonPermitted\", keyIndex)} /></CCol>\r\n                                                                                        <CCol className='col-1 align-self-center'>\r\n                                                                                            <button type=\"button\"\r\n                                                                                            onClick={this.removeContentDataKey.bind(this, key, index, i, \"nonPermitted\")}\r\n                                                                                                class=\"btn-close\" aria-label=\"Remove\" />\r\n                                                                                        </CCol>\r\n                                                                                    </CRow>\r\n                                                                                    {this.getContentData(c.contentData[key], key, index, i, \"nonPermitted\")}\r\n                                                                                </CCardBody>\r\n                                                                            </CCard>\r\n                                                                        </CCol>\r\n                                                                    </CRow>\r\n\r\n\r\n                                                                </div>\r\n                                                            ))\r\n                                                            }\r\n\r\n                                                            <CRow className='mt-2 justify-content-center'>\r\n                                                                <CCol className='col-6 text-center'>\r\n                                                                    <CButton onClick={this.addNewContentData.bind(this, index, i, \"nonPermitted\")}><CIcon icon={icon.cilPlus} />Add New Content Data for {c.collectionName}</CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </CCardBody>\r\n                                                <CCardFooter>\r\n                                                    <CRow className='mt-2 justify-content-center'>\r\n                                                        <CCol className='col-6 text-center'>\r\n                                                            <CButton onClick={this.addNewCollection.bind(this, index, \"nonPermitted\")}><CIcon icon={icon.cilPlus} />Add New Collection for {item.role}</CButton>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                </CCardFooter>\r\n                                            </CCard>\r\n                                        </CTabPane>\r\n\r\n                                    </CTabContent>\r\n                                </CCardBody>\r\n                            </CCard>\r\n                        ))}\r\n                </CCardBody>\r\n\r\n\r\n            </CCard>\r\n        )\r\n    }\r\n}\r\nexport default DeleteCollection","import React, { Component } from 'react';\r\nimport CIcon from '@coreui/icons-react';\r\nimport * as icon from '@coreui/icons';\r\nimport { Link } from 'react-router-dom'\r\nimport { format } from 'date-fns';\r\nimport { ToastContainer, toast,Slide } from 'react-toastify';\r\nimport Popup from '../../../widgets/Popup';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CCard,\r\n    CCardBody,\r\n    CRow,\r\n    CCol,\r\n    CCardTitle,\r\n    CFormInput,\r\n    CButton,\r\n    CFormSelect,\r\n    CModal,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CCardFooter,\r\n    CCardHeader,\r\n} from '@coreui/react'\r\nimport { bool } from 'prop-types';\r\nconst vars = {\r\n    'cursor': \"pointer\",\r\n    \"color\": \"rgb(33, 37, 41)\",\r\n    \"background-color\": \"#fff\"\r\n}\r\nconst activeLink = {\r\n    'cursor': \"pointer\",\r\n    \"background-color\": \"rgb(33, 37, 41)\",\r\n    \"color\": \"#fff\"\r\n}\r\nconst dangerIcon = {\r\n    \"color\": \"#f7f2f2\"\r\n}\r\nconst fRight = {\r\n    \"float\": \"right\"\r\n}\r\nconst cardText = { \"height\": \"620px\", \"overflow-y\": \"scroll\" }\r\nconst arrayLabels = [\"not\", \"in\", \"eq\"]\r\nexport class DeleteRelation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            relationDeleteRules: [],\r\n            activeKey: 1,\r\n            activeSubKeys: [1, 1, 1, 1, 1],\r\n            subKeys: [],\r\n            changedTypes: [],\r\n            visible: false,\r\n            yesNoVisible: false,\r\n            yesNoQuestion: \"\",\r\n            arguments: [],\r\n            sendType: \"\",\r\n            compare:[\"eq\",\"not\",\"gt\",\"gte\",\"lt\",\"lte\",\"in\"]\r\n\r\n        }\r\n    }\r\n\r\n    setSubActiveKey(key, id) {\r\n        const { subKeys } = this.state;\r\n        var index = subKeys.findIndex(x => x.id === id);\r\n        subKeys[index].activeKey = key;\r\n        this.setState({ subKeys });\r\n        return false;\r\n    }\r\n    getSubActiveKey(e, key, id) {\r\n        const { subKeys } = this.state;\r\n        var index = subKeys.findIndex(x => x.id === id);\r\n        return key == subKeys[index].activeKey\r\n    }\r\n    componentDidMount() {\r\n        this.getDeleteRelationRules();\r\n    }\r\n    async getDeleteRelationRules() {\r\n        var orgId = localStorage.getItem('orgId')\r\n        var appId = localStorage.getItem('appId')\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            service: \"dataservice\",\r\n            methodContentType: \"relation\",\r\n            methodType: \"delete\"\r\n        }\r\n        var d = { ...this.state.relationDeleteRules };\r\n        d = await this.props.getRules(model);\r\n        var sk = [];\r\n        if (d.length > 0) {\r\n            var rr = d[0];\r\n            rr.roleRules.permissions.map(m => {\r\n                var data = {\r\n                    id: m._id,\r\n                    activeKey: 1\r\n                }\r\n                sk.push(data);\r\n            })\r\n        }\r\n\r\n        this.setState({ relationDeleteRules: d, subKeys: sk });\r\n    }\r\n    getValueType(val) {\r\n        if (Array.isArray(val)) {\r\n            if (val.length > 0) {\r\n                return typeof val[0]\r\n            }\r\n        }\r\n        return typeof val;\r\n    }\r\n    getContentData(item, key, permIndex, collectionIndex, type) {\r\n        return (\r\n            <div>\r\n                {Object.keys(item).length < 1 &&\r\n                    <CRow className='mt-2 justify-content-center'>\r\n                        <CCol className='col-2'>\r\n                            <CButton color='primary' onClick={this.addNewContentDataSub.bind(this, key, permIndex, collectionIndex, type)}><CIcon style={dangerIcon} icon={icon.cilPlus} /></CButton>\r\n                        </CCol>\r\n                    </CRow>\r\n                }\r\n                {typeof item == \"object\" &&\r\n                    Object.keys(item).map((k, i) => {\r\n                        return (\r\n                            <div>\r\n                                <CRow className='mt-2'>\r\n                                    <CCol className='col-3'>\r\n                                        <CFormSelect onChange={this.eqChanged.bind(this, key, k, permIndex, collectionIndex, type, i)}\r\n                                            value={k} name={this.getValueType(item[k])}>\r\n                                            <option value=\"eq\">{'='}</option>\r\n                                            <option value=\"not\">{'!='}</option>\r\n                                            <option value=\"gt\">{'>'}</option>\r\n                                            <option value=\"gte\">{'>='}</option>\r\n                                            <option value=\"lt\">{'<'}</option>\r\n                                            <option value=\"lte\">{'<='}</option>\r\n                                            <option value=\"in\">{'in'}</option>\r\n                                        </CFormSelect>\r\n                                    </CCol>\r\n                                    <CCol className='col-3'>\r\n                                        <CFormInput type='text' name='value' onChange={this.changeContentDataSubKey.bind(this, key, k, permIndex, collectionIndex, type)} placeholder={arrayLabels.indexOf(k) < 0 ? \"value\" : \"values with comma\"} value={arrayLabels.indexOf(k) < 0 ? item[k] : this.value} />\r\n                                    </CCol>\r\n                                    <CCol className='col-3'>\r\n                                        <CFormSelect id={key + \"_\" + k + \"_\" + permIndex + \"_\" + collectionIndex + \"_\" + type}\r\n                                            onChange={this.typeChanged.bind(this, key, k, permIndex, collectionIndex, type, i)}\r\n                                            value={this.getValueType(item[k])}\r\n                                            disabled={item[k].length<1} >\r\n                                            <option value=\"string\">{'String'}</option>\r\n                                            <option value=\"number\">{'Integer'}</option>\r\n                                        </CFormSelect>\r\n                                    </CCol>\r\n                                    <CCol className='col-1 align-self-center'>\r\n                                        <button type=\"button\"                        \r\n                                            onClick={this.removeContentDataSubKey.bind(this, key, k, permIndex, collectionIndex, type)}\r\n                                            class=\"btn-close\" aria-label=\"Remove\"/>\r\n                                    </CCol>\r\n                                    \r\n                                    {Object.keys(item).length - 1 == i &&\r\n                                        <CCol className='col-1'>\r\n                                            <CButton color='primary' onClick={this.addNewContentDataSub.bind(this, key, permIndex, collectionIndex, type)}><CIcon style={dangerIcon} icon={icon.cilPlus} /></CButton>\r\n                                        </CCol>\r\n                                    }\r\n                                </CRow>\r\n                                {arrayLabels.indexOf(k) >= 0 &&\r\n                                    <CRow className='mt-2'>\r\n                                        {item[k].map((val =>\r\n                                            <CCol className='col-3'>\r\n                                                {this.getArrayItems(val, key, k, permIndex, collectionIndex, type)}\r\n                                            </CCol>\r\n                                        ))}\r\n                                    </CRow>\r\n                                }\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n    getArrayItems(val, key, k, permIndex, collectionIndex, type) {\r\n        return (\r\n            <p className=\"p-1 rounded border border-primary text-primary\">{val}\r\n                <span style={fRight}> <button type=\"button\"\r\n                    onClick={this.removeContentDataSubKeyArray.bind(this, key, k, permIndex, collectionIndex, type, val)}\r\n                    class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n            </p>\r\n        )\r\n    }\r\n\r\n    eqChanged(key, k, permIndex, collectionIndex, type, keyIndex, e) {\r\n        var relationDeleteRules = [...this.state.relationDeleteRules]\r\n        var collection = relationDeleteRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        var newContentData = {}\r\n\r\n        Object.keys(collection.contentData[key]).map((ki, i) => {\r\n            if (keyIndex == i) {\r\n                if (arrayLabels.indexOf(e.target.value) < 0)\r\n                    newContentData[e.target.value] = collection.contentData[key][ki]\r\n                else {\r\n                    var arr = this.getValueAsArrayByType(collection.contentData[key][ki], e.target.name);\r\n                    newContentData[e.target.value] = arr\r\n                }\r\n            } else {\r\n                newContentData[ki] = collection.contentData[key][ki]\r\n            }\r\n        })\r\n        collection.contentData[key] = newContentData;\r\n        this.setState({ relationDeleteRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    typeChanged(key, k, permIndex, collectionIndex, type, keyIndex, e) {\r\n        var relationDeleteRules = [...this.state.relationDeleteRules]\r\n        var collection = relationDeleteRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        var newContentData = {}\r\n        Object.keys(collection.contentData[key]).map((ki, i) => {\r\n            if (keyIndex == i) {\r\n                if (arrayLabels.indexOf(k) < 0)\r\n                    newContentData[k] = this.convert(collection.contentData[key][ki], e.target.value);\r\n                else {\r\n                    var arr = this.convert(collection.contentData[key][ki], e.target.value);\r\n                    newContentData[k] = arr\r\n                }\r\n            } else {\r\n                newContentData[ki] = collection.contentData[key][ki]\r\n            }\r\n        })\r\n        collection.contentData[key] = newContentData;\r\n        this.setState({ relationDeleteRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    removeContentDataSubKey(key, k, permIndex, collectionIndex, type) {\r\n        var relationDeleteRules = [...this.state.relationDeleteRules]\r\n        var collection = relationDeleteRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        delete collection.contentData[key][k];\r\n        this.setState({ relationDeleteRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n    removeContentDataSubKeyArray(key, k, permIndex, collectionIndex, type, val) {\r\n        var relationDeleteRules = [...this.state.relationDeleteRules]\r\n        var collection = relationDeleteRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        const index = collection.contentData[key][k].indexOf(val);\r\n        if (index > -1) {\r\n            collection.contentData[key][k].splice(index, 1);\r\n        }\r\n        this.setState({ relationDeleteRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n\r\n    changeContentDataSubKey(key, k, permIndex, collectionIndex, type, e) {\r\n        var eleman = document.getElementById(key + \"_\" + k + \"_\" + permIndex + \"_\" + collectionIndex + \"_\" + type)\r\n        var relationDeleteRules = [...this.state.relationDeleteRules]\r\n        var collection = relationDeleteRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex];\r\n        if (arrayLabels.indexOf(k) < 0)\r\n            collection.contentData[key][k] = e.target.value;\r\n        else {\r\n            if (e.target.value.toString().indexOf(\",\") >= 0) {\r\n                var arr = this.getValueAsArrayByType(e.target.value, eleman.value);\r\n                switch (eleman.value) {\r\n                    case \"string\":\r\n                        if (arr[0] && collection.contentData[key][k].indexOf(arr[0]) < 0) {\r\n                            collection.contentData[key][k].push(arr[0]);\r\n                        }\r\n                        break;\r\n                    case \"number\":\r\n                        if (!isNaN(arr[0]) && collection.contentData[key][k].indexOf(arr[0]) < 0) {\r\n                            collection.contentData[key][k].push(arr[0]);\r\n                        }\r\n                        break;\r\n                }\r\n                e.target.value = \"\";\r\n            }\r\n            else if (e.target.value.toString().trim() == \"\") {\r\n                e.target.value = \"\";\r\n            }\r\n        }\r\n        this.setState({ relationDeleteRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n    addNewContentDataSub(key, permIndex, collectionIndex, type) {\r\n        var relationDeleteRules = [...this.state.relationDeleteRules]\r\n        var collection = relationDeleteRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        for(var i=0;i<this.state.compare.length;++i){\r\n            if(!(this.state.compare[i] in collection.contentData[key])){\r\n                 if(i>0 && collection.contentData[key][this.state.compare[i-1]].length>0){\r\n                    collection.contentData[key][this.state.compare[i]] = [];\r\n                }else if(i==0){\r\n                    collection.contentData[key][this.state.compare[i]] = [];\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        this.setState({ relationDeleteRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n    removeContentDataKey(key, permIndex, collectionIndex, type) {\r\n        var relationDeleteRules = [...this.state.relationDeleteRules]\r\n        var collection = relationDeleteRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        delete collection.contentData[key];\r\n        this.setState({ relationDeleteRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n    changeContentDataKey(key, permIndex, collectionIndex, type, keyIndex, e) {\r\n        var relationDeleteRules = [...this.state.relationDeleteRules]\r\n        var collection = relationDeleteRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        var newContentData = {}\r\n        Object.keys(collection.contentData).map((k, i) => {\r\n            if (keyIndex == i) {\r\n                newContentData[e.target.value] = collection.contentData[k]\r\n            } else {\r\n                newContentData[k] = collection.contentData[k]\r\n            }\r\n        })\r\n        collection.contentData = newContentData;\r\n        this.setState({ relationDeleteRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n    changeCollectionName(permIndex, collectionIndex, type, e) {\r\n        var relationDeleteRules = [...this.state.relationDeleteRules]\r\n        var collection = relationDeleteRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        collection[\"collectionName\"] = e.target.value\r\n        this.setState({ relationDeleteRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    changeNonPermittedCollectionName(permIndex, collectionIndex, type, e) {\r\n        var relationDeleteRules = [...this.state.relationDeleteRules]\r\n        var collection = relationDeleteRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        var arr = this.getValueAsArray(e.target.value);\r\n        collection[\"collectionName\"] = arr;\r\n        this.setState({ relationDeleteRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    addNewContentData(permIndex, collectionIndex, type) {\r\n        var relationDeleteRules = [...this.state.relationDeleteRules]\r\n        var collection = relationDeleteRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        collection.contentData[\"newkey\"] = {};\r\n        this.setState({ relationDeleteRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    addNewCollection(permIndex, type) {\r\n        var relationDeleteRules = [...this.state.relationDeleteRules]\r\n        var collection = relationDeleteRules[0].roleRules.permissions[permIndex][type].collections;\r\n        var model = {\r\n            collectionName: \"collectionName\",\r\n            contentData: {},\r\n            contentKeys: []\r\n        }\r\n        collection.push(model);\r\n        this.setState({ relationDeleteRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n\r\n    removeCollection(permIndex, index, type) {\r\n        var relationDeleteRules = [...this.state.relationDeleteRules]\r\n        var collection = relationDeleteRules[0].roleRules.permissions[permIndex][type].collections;\r\n        collection.splice(index, 1)\r\n        this.setState({ relationDeleteRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    changeCK(permIndex, collectionIndex, type, e) {\r\n        var relationDeleteRules = [...this.state.relationDeleteRules]\r\n        var collection = relationDeleteRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        if (e.target.value.toString().indexOf(\",\") >= 0) {\r\n            var arr = this.getValueAsArrayByType(e.target.value, \"string\");\r\n            if (arr[0] && collection.contentKeys.indexOf(arr[0]) < 0) {\r\n                collection.contentKeys.push(arr[0]);\r\n            }\r\n            e.target.value = \"\";\r\n        }\r\n        this.setState({ relationDeleteRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    removeContentKeys(val, permIndex, collectionIndex, type, e) {\r\n        var relationDeleteRules = [...this.state.relationDeleteRules]\r\n        var collection = relationDeleteRules[0].roleRules.permissions[permIndex][type].collections[collectionIndex]\r\n        const index = collection.contentKeys.indexOf(val);\r\n        if (index > -1) {\r\n            collection.contentKeys.splice(index, 1);\r\n        }\r\n        this.setState({ relationDeleteRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    getContentKeysItems(val, permIndex, collectionIndex, type) {\r\n        return (\r\n            <p className=\"p-1 rounded border border-primary text-primary\">{val}\r\n                <span style={fRight}> <button type=\"button\"\r\n                    onClick={this.removeContentKeys.bind(this, val, permIndex, collectionIndex, type)}\r\n                    class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n            </p>\r\n        )\r\n    }\r\n    addNewMainSub(permIndex, type) {\r\n        var relationDeleteRules = [...this.state.relationDeleteRules]\r\n        var collection = relationDeleteRules[0].roleRules.permissions[permIndex][type].mainSub;\r\n        var model = {\r\n            main: \"mainCollectionName\",\r\n            sub: []\r\n        }\r\n        collection.push(model);\r\n        this.setState({ relationDeleteRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    removeMainSub(permIndex, index, type) {\r\n        var relationDeleteRules = [...this.state.relationDeleteRules]\r\n        var collection = relationDeleteRules[0].roleRules.permissions[permIndex][type].mainSub;\r\n        collection.splice(index, 1)\r\n        this.setState({ relationDeleteRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    mainCollectionChange(permIndex, mainSubIndex, type, e) {\r\n        var relationDeleteRules = [...this.state.relationDeleteRules]\r\n        var collection = relationDeleteRules[0].roleRules.permissions[permIndex][type].mainSub[mainSubIndex]\r\n        collection.main = e.target.value;\r\n        this.setState({ relationDeleteRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    changeSub(permIndex, mainSubIndex, type, e) {\r\n        var relationDeleteRules = [...this.state.relationDeleteRules]\r\n        var collection = relationDeleteRules[0].roleRules.permissions[permIndex][type].mainSub[mainSubIndex]\r\n        if (e.target.value.toString().indexOf(\",\") >= 0) {\r\n            var arr = this.getValueAsArrayByType(e.target.value, \"string\");\r\n            if (arr[0] && collection.sub.indexOf(arr[0]) < 0) {\r\n                collection.sub.push(arr[0]);\r\n            }\r\n            e.target.value = \"\";\r\n        }\r\n        this.setState({ relationDeleteRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    getMainSubItems(val, permIndex, mainSubIndex, valIndex, type) {\r\n        return (\r\n            <p className=\"p-1 rounded border border-primary text-primary\">{val}\r\n                <span style={fRight}> <button type=\"button\"\r\n                    onClick={this.removeSub.bind(this, permIndex, mainSubIndex, valIndex, type)}\r\n                    class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n            </p>\r\n        )\r\n    }\r\n    removeSub(permIndex, mainSubIndex, valIndex, type, e) {\r\n        var relationDeleteRules = [...this.state.relationDeleteRules]\r\n        var collection = relationDeleteRules[0].roleRules.permissions[permIndex][type].mainSub[mainSubIndex]\r\n        collection.sub.splice(valIndex, 1);\r\n        this.setState({ relationDeleteRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    getValueAsArray(val) {\r\n        var arr = []\r\n        var d = val.toString();\r\n        var ind = d.indexOf(',');\r\n        if (ind >= 0) {\r\n            arr = val.split(\",\");\r\n        }\r\n        else\r\n            arr.push(val)\r\n\r\n        return arr;\r\n    }\r\n    getValueAsArrayByType(val, type) {\r\n        var arr = []\r\n        var d = val.toString();\r\n        var ind = d.indexOf(',');\r\n        if (ind >= 0) {\r\n            var arrElems = val.split(\",\");\r\n            switch (type) {\r\n                case \"string\":\r\n                    arr = arrElems;\r\n                    break;\r\n                case \"number\":\r\n                    arrElems.map((item) => {\r\n                        arr.push(parseInt(item));\r\n                    });\r\n            }\r\n        }\r\n        else {\r\n            switch (type) {\r\n                case \"string\":\r\n                    if (val) {\r\n                        arr.push(val)\r\n                    }\r\n                    break;\r\n                case \"number\":\r\n                    if (!isNaN(val)) {\r\n                        arr.push(val)\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return arr;\r\n    }\r\n    convert(val, type) {\r\n        if (!Array.isArray(val)) {\r\n            switch (type) {\r\n                case \"string\":\r\n                    return val.toString();\r\n                case \"number\":\r\n                    return parseInt(val);\r\n            }\r\n        } else {\r\n            switch (type) {\r\n                case \"string\":\r\n                    var arr = [];\r\n                    val.map((item) => {\r\n                        arr.push(item.toString());\r\n                    });\r\n                    return arr;\r\n                case \"number\":\r\n                    var arr = [];\r\n                    val.map((item) => {\r\n                        var item = parseInt(item);\r\n                        if (!isNaN(item))\r\n                            arr.push(item);\r\n                    });\r\n                    return arr;\r\n            }\r\n\r\n        }\r\n    }\r\n    async addUpdateRule() {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var relationDeleteRules = [...this.state.relationDeleteRules]\r\n        var rule = relationDeleteRules[0].roleRules;\r\n        var rls = {\r\n            method: rule.method,\r\n            methodType: rule.methodType,\r\n            methodContentType: rule.methodContentType,\r\n            service: rule.service,\r\n            permissions: rule.permissions\r\n        }\r\n        var orgId = localStorage.getItem(\"orgId\");\r\n        var appId = localStorage.getItem(\"appId\");\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            rules: [rls]\r\n        }\r\n        this.props.addUpdateRule(model);\r\n    }\r\n    setVisible(vis) {\r\n        this.setState({ visible: vis });\r\n    }\r\n    async setYesNoVisible(vis, question, sendType, args, send) {\r\n        if (vis)\r\n            this.setState({ yesNoVisible: vis, yesNoQuestion: question, sendType: sendType, arguments: args });\r\n        else {\r\n            if (send) {\r\n                var st = this.state.sendType;\r\n                switch (st) {\r\n                    case \"deleteRole\":\r\n                        await this.deleteRole(this.state.arguments);\r\n                        break;\r\n                    case \"saveAll\":\r\n                        await this.addUpdateRule();\r\n                        break;\r\n                }\r\n            }\r\n            this.setState({ yesNoVisible: vis, yesNoQuestion: \"\", sendType: \"\", arguments: [] });\r\n        }\r\n    }\r\n    async newRuleAdd() {\r\n        var eleman = document.getElementById(\"newrule\");\r\n        if (!eleman.value) {\r\n            this.props.toastShow(\"error\",\"Role Name cannot be null or empty!\")\r\n            return false;\r\n        }\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var orgId = localStorage.getItem(\"orgId\");\r\n        var appId = localStorage.getItem(\"appId\");\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            rules: [\r\n                {\r\n                    method: \"/dataservice/delete/relation\",\r\n                    methodType: \"delete\",\r\n                    methodContentType: \"relation\",\r\n                    service: \"dataservice\",\r\n                    permissions: [{\r\n                        role: eleman.value,\r\n                        permitted: {\r\n                            collections: [],\r\n                            mainSub: []\r\n                        },\r\n                        nonPermitted: {\r\n                            collections: [],\r\n                            mainSub: []\r\n                        }\r\n                    }]\r\n                }\r\n            ]\r\n        }\r\n        await this.props.newRuleAdd(model);\r\n        eleman.value = \"\";\r\n        this.getDeleteRelationRules();\r\n    }\r\n    async deleteRole(args) {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var id = args[0];\r\n        var index = args[1];\r\n        var orgId = localStorage.getItem('orgId')\r\n        var appId = localStorage.getItem('appId')\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            id: id\r\n        }\r\n        var success = this.props.deleteRole(model);\r\n        if (success) {\r\n            var relationDeleteRules = [...this.state.relationDeleteRules]\r\n            var permissions = relationDeleteRules[0].roleRules.permissions;\r\n            permissions.splice(index, 1);\r\n            this.setState({ relationDeleteRules });\r\n        }\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <CCard>\r\n                <CRow className='m-2 border-bottom d-flex align-items-center'>\r\n                    <CCol className='col-6 pb-2'>\r\n                        <CCardTitle>Add/Update <b>\"Relation Delete\"</b> Permissions</CCardTitle>\r\n                    </CCol>\r\n                    <CCol className='col-6 d-grid gap-2 d-md-flex justify-content-md-end pb-2'>\r\n                        <CButton color='secondary' onClick={this.setVisible.bind(this, true)}>Add New Role</CButton>\r\n                        <CButton color='info' style={{\"color\":\"#fff\"}}\r\n                            onClick={this.setYesNoVisible.bind(this, true, \"Are you sure you want to save all?\", \"saveAll\", [this])}>Save All</CButton>\r\n                    </CCol>\r\n\r\n                    <CModal visible={this.state.visible} onClose={this.setVisible.bind(this, false)}>\r\n                        <CModalHeader>\r\n                            <CModalTitle>Add New Role</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalBody>\r\n                            <CFormInput type='text' placeholder='Role Name' name=\"newRule\" id=\"newrule\" />\r\n                        </CModalBody>\r\n                        <CModalFooter>\r\n                            <CButton color=\"secondary\" onClick={this.setVisible.bind(this, false)}>\r\n                                Close\r\n                            </CButton>\r\n                            <CButton color=\"primary\" onClick={this.newRuleAdd.bind(this)}>Create Role</CButton>\r\n                        </CModalFooter>\r\n                    </CModal>\r\n                    <CModal visible={this.state.yesNoVisible} onClose={this.setYesNoVisible.bind(this, false)}>\r\n                        <CModalHeader>\r\n                            <CModalTitle>{this.state.yesNoQuestion}</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalFooter>\r\n                            <CButton color=\"secondary\" onClick={this.setYesNoVisible.bind(this, false, null, null, null, false)}>\r\n                                No\r\n                            </CButton>\r\n                            <CButton color=\"primary\" onClick={this.setYesNoVisible.bind(this, false, null, null, null, true)}>Yes</CButton>\r\n                        </CModalFooter>\r\n                    </CModal>\r\n                </CRow>\r\n                <CCardBody style={cardText}>\r\n\r\n                    {this.state.relationDeleteRules.length > 0 &&\r\n\r\n                        this.state.relationDeleteRules[0].roleRules.permissions.map((item, index) => (\r\n                            <CCard className='mt-1'>\r\n                                <CCardBody>\r\n                                    <CCardTitle><b>\"{item.role}\"</b> Rules  <span style={fRight}>\r\n                                        <CButton color='danger'\r\n                                            onClick={this.setYesNoVisible.bind(this, true, \"Are you sure you want to delete \" + item.role + \" role?\", \"deleteRole\", [item._id, index, this])}\r\n                                            //onClick={this.deleteRole.bind(this,item._id,index)}\r\n                                            style={dangerIcon}>Delete Role</CButton></span></CCardTitle>\r\n                                    <CNav variant=\"tabs\" className='mt-4' role=\"tablist\" style={vars} >\r\n                                        <CNavItem>\r\n                                            <CNavLink\r\n                                                style={vars}\r\n                                                active={this.getSubActiveKey(this, 1, item._id)}\r\n                                                onClick={this.setSubActiveKey.bind(this, 1, item._id)}\r\n                                            >\r\n                                                Permitted\r\n                                            </CNavLink>\r\n                                        </CNavItem>\r\n                                        <CNavItem>\r\n                                            <CNavLink\r\n                                                style={vars}\r\n                                                active={this.getSubActiveKey(this, 2, item._id)}\r\n                                                onClick={this.setSubActiveKey.bind(this, 2, item._id)}\r\n                                            >\r\n                                                Non-Permitted\r\n                                            </CNavLink>\r\n                                        </CNavItem>\r\n\r\n                                    </CNav>\r\n                                    <CTabContent>\r\n                                        <CTabPane role=\"tabpanel\" className='p-3' aria-labelledby=\"home-tab\" visible={this.getSubActiveKey(this, 1, item._id)}>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Child Collections</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    {item.permitted.collections.map((c, i) => (\r\n                                                        <div>\r\n                                                            <CRow className='mt-2'>\r\n                                                                <CCol className='col-11'>\r\n                                                                    <CFormInput type='text' name='collectionName'\r\n                                                                        onChange={this.changeCollectionName.bind(this, index, i, \"permitted\")}\r\n                                                                        placeholder='Collection Name' value={c.collectionName} />\r\n                                                                </CCol>\r\n                                                                <CCol className='align-self-center'>\r\n                                                                    <span style={fRight}> <button type=\"button\"\r\n                                                                        onClick={this.removeCollection.bind(this, index, i, \"permitted\")}\r\n                                                                        class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            {Object.keys(c.contentData).map((key, keyIndex) => (\r\n                                                                <div>\r\n                                                                    <CRow className='mt-2'>\r\n                                                                        <CCol className='col-11'>\r\n                                                                            <CCard>\r\n                                                                                <CCardBody>\r\n                                                                                    <CRow className='mt-2 pb-2 border-bottom'>\r\n                                                                                        <CCol className='col-9'><CFormInput type='text' placeholder='Content Field'\r\n                                                                                            value={key} onChange={this.changeContentDataKey.bind(this, key, index, i, \"permitted\", keyIndex)} /></CCol>\r\n                                                                                        <CCol className='col-1 align-self-center'>\r\n                                                                                            <button type=\"button\"\r\n                                                                                            onClick={this.removeContentDataKey.bind(this, key, index, i, \"permitted\")}\r\n                                                                                                class=\"btn-close\" aria-label=\"Remove\" />\r\n                                                                                        </CCol>\r\n                                                                                    </CRow>\r\n                                                                                    {this.getContentData(c.contentData[key], key, index, i, \"permitted\")}\r\n                                                                                </CCardBody>\r\n                                                                            </CCard>\r\n                                                                        </CCol>\r\n                                                                    </CRow>\r\n\r\n\r\n                                                                </div>\r\n                                                            ))\r\n                                                            }\r\n\r\n                                                            <CRow className='mt-2 justify-content-center'>\r\n                                                                <CCol className='col-6 text-center'>\r\n                                                                    <CButton onClick={this.addNewContentData.bind(this, index, i, \"permitted\")}><CIcon icon={icon.cilPlus} />Add New Content Data for {c.collectionName}</CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            {/* <CRow className='mt-2 pb-2'>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <CFormInput type='text' name='contentKeys'\r\n                                                                        onChange={this.changeCK.bind(this, index, i, \"permitted\")}\r\n                                                                        placeholder='Content Keys with comma' />\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n\r\n                                                            <CRow className='mt-2'>\r\n                                                                {c.contentKeys.map((val =>\r\n                                                                    <CCol className='col-3'>\r\n                                                                        {this.getContentKeysItems(val, index, i, \"permitted\")}\r\n                                                                    </CCol>\r\n                                                                ))}\r\n                                                            </CRow> */}\r\n\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </CCardBody>\r\n                                                <CCardFooter>\r\n                                                    <CRow className='mt-2 justify-content-center'>\r\n                                                        <CCol className='col-6 text-center'>\r\n                                                            <CButton onClick={this.addNewCollection.bind(this, index, \"permitted\")}><CIcon icon={icon.cilPlus} />Add New Collection for {item.role}</CButton>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                </CCardFooter>\r\n                                            </CCard>\r\n\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Main-Child Collections Relation Permissions</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    {item.permitted.mainSub.map((val, i) => (\r\n                                                        <div>\r\n                                                            <CRow>\r\n                                                                <p><b>Main collectionName :</b></p>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <CFormInput type='text' name='main' onChange={this.mainCollectionChange.bind(this, index, i, \"permitted\")} value={val.main} />\r\n                                                                </CCol>\r\n                                                                <CCol className='align-self-center'>\r\n                                                                    <span style={fRight}> <button type=\"button\"\r\n                                                                        onClick={this.removeMainSub.bind(this, index, i, \"permitted\")}\r\n                                                                        class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            <CRow className='mt-2 pb-2'>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <p><b>Sub collectionNames :</b></p>\r\n                                                                    <CFormInput type='text' name='subCollection'\r\n                                                                        onChange={this.changeSub.bind(this, index, i, \"permitted\")}\r\n                                                                        placeholder='Collection Names with comma' />\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            <CRow className='mt-2'>\r\n                                                                {val.sub.map((s, si) =>\r\n                                                                    <CCol className='col-3'>\r\n                                                                        {this.getMainSubItems(s, index, i, si, \"permitted\")}\r\n                                                                    </CCol>\r\n                                                                )}\r\n                                                            </CRow>\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </CCardBody>\r\n                                                <CCardFooter>\r\n                                                    <CRow className='mt-2 justify-content-center'>\r\n                                                        <CCol className='col-6 text-center'>\r\n                                                            <CButton onClick={this.addNewMainSub.bind(this, index, \"permitted\")}><CIcon icon={icon.cilPlus} />Add Main-Sub Collection Relation for {item.role}</CButton>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                </CCardFooter>\r\n                                            </CCard>\r\n\r\n                                        </CTabPane>\r\n                                        <CTabPane role=\"tabpanel\" className='p-3' aria-labelledby=\"profile-tab\" visible={this.getSubActiveKey(this, 2, item._id)}>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Child Collections</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    {item.nonPermitted.collections.map((c, i) => (\r\n                                                        <div>\r\n                                                            <CRow className='mt-2'>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <CFormInput type='text' name='collectionName'\r\n                                                                        onChange={this.changeNonPermittedCollectionName.bind(this, index, i, \"nonPermitted\")} placeholder='Collection Name' value={c.collectionName} />\r\n                                                                </CCol>\r\n                                                                <CCol className='align-self-center'>\r\n                                                                    <span style={fRight}> <button type=\"button\"\r\n                                                                        onClick={this.removeCollection.bind(this, index, i, \"nonPermitted\")}\r\n                                                                        class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            {Object.keys(c.contentData).map((key, keyIndex) => (\r\n                                                                <div>\r\n                                                                    <CRow className='mt-2'>\r\n                                                                        <CCol className='col-11'>\r\n                                                                            <CCard>\r\n                                                                                <CCardBody>\r\n                                                                                    <CRow className='mt-2 pb-2 border-bottom'>\r\n                                                                                        <CCol className='col-9'><CFormInput type='text' placeholder='Content Field'\r\n                                                                                            value={key} onChange={this.changeContentDataKey.bind(this, key, index, i, \"nonPermitted\", keyIndex)} /></CCol>\r\n                                                                                        <CCol className='col-1 align-self-center'>\r\n                                                                                            <button type=\"button\"\r\n                                                                                            onClick={this.removeContentDataKey.bind(this, key, index, i, \"nonPermitted\")}\r\n                                                                                                class=\"btn-close\" aria-label=\"Remove\" />\r\n                                                                                        </CCol>\r\n                                                                                    </CRow>\r\n                                                                                    {this.getContentData(c.contentData[key], key, index, i, \"nonPermitted\")}\r\n                                                                                </CCardBody>\r\n                                                                            </CCard>\r\n                                                                        </CCol>\r\n                                                                    </CRow>\r\n\r\n\r\n                                                                </div>\r\n                                                            ))\r\n                                                            }\r\n\r\n                                                            <CRow className='mt-2 justify-content-center'>\r\n                                                                <CCol className='col-6 text-center'>\r\n                                                                    <CButton onClick={this.addNewContentData.bind(this, index, i, \"nonPermitted\")}><CIcon icon={icon.cilPlus} />Add New Content Data for {c.collectionName}</CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            {/* <CRow className='mt-2 pb-2'>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <CFormInput type='text' name='contentKeys'\r\n                                                                        onChange={this.changeCK.bind(this, index, i, \"nonPermitted\")}\r\n                                                                        placeholder='Content Keys with comma' />\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n\r\n                                                            <CRow className='mt-2'>\r\n                                                                {c.contentKeys.map((val =>\r\n                                                                    <CCol className='col-3'>\r\n                                                                        {this.getContentKeysItems(val, index, i, \"nonPermitted\")}\r\n                                                                    </CCol>\r\n                                                                ))}\r\n                                                            </CRow> */}\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </CCardBody>\r\n                                                <CCardFooter>\r\n                                                    <CRow className='mt-2 justify-content-center'>\r\n                                                        <CCol className='col-6 text-center'>\r\n                                                            <CButton onClick={this.addNewCollection.bind(this, index, \"nonPermitted\")}><CIcon icon={icon.cilPlus} />Add New Collection for {item.role}</CButton>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                </CCardFooter>\r\n                                            </CCard>\r\n\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Main-Child Collections Relation Permissions</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    {item.nonPermitted.mainSub.map((val, i) => (\r\n                                                        <div>\r\n                                                            <CRow>\r\n                                                                <p><b>Main collectionName :</b></p>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <CFormInput type='text' name='main' onChange={this.mainCollectionChange.bind(this, index, i, \"nonPermitted\")} value={val.main} />\r\n                                                                </CCol>\r\n                                                                <CCol className='align-self-center'>\r\n                                                                    <span style={fRight}> <button type=\"button\"\r\n                                                                        onClick={this.removeMainSub.bind(this, index, i, \"nonPermitted\")}\r\n                                                                        class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            <CRow className='mt-2 pb-2'>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <p><b>Sub collectionNames :</b></p>\r\n                                                                    <CFormInput type='text' name='subCollection'\r\n                                                                        onChange={this.changeSub.bind(this, index, i, \"nonPermitted\")}\r\n                                                                        placeholder='Collection Names with comma' />\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            <CRow className='mt-2'>\r\n                                                                {val.sub.map((s, si) =>\r\n                                                                    <CCol className='col-3'>\r\n                                                                        {this.getMainSubItems(s, index, i, si, \"nonPermitted\")}\r\n                                                                    </CCol>\r\n                                                                )}\r\n                                                            </CRow>\r\n\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </CCardBody>\r\n                                                <CCardFooter>\r\n                                                    <CRow className='mt-2 justify-content-center'>\r\n                                                        <CCol className='col-6 text-center'>\r\n                                                            <CButton onClick={this.addNewMainSub.bind(this, index, \"nonPermitted\")}><CIcon icon={icon.cilPlus} />Add Main-Sub Collection Relation for {item.role}</CButton>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                </CCardFooter>\r\n                                            </CCard>\r\n\r\n                                        </CTabPane>\r\n\r\n                                    </CTabContent>\r\n                                </CCardBody>\r\n                            </CCard>\r\n                        ))}\r\n                </CCardBody>\r\n\r\n\r\n            </CCard>\r\n        )\r\n    }\r\n}\r\nexport default DeleteRelation","import React, { Component } from 'react';\r\nimport CIcon from '@coreui/icons-react';\r\nimport * as icon from '@coreui/icons';\r\nimport { Link } from 'react-router-dom'\r\nimport { format } from 'date-fns';\r\nimport { ToastContainer, toast,Slide } from 'react-toastify';\r\nimport Popup from '../../../widgets/Popup';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CCard,\r\n    CCardBody,\r\n    CRow,\r\n    CCol,\r\n    CCardTitle,\r\n    CFormInput,\r\n    CButton,\r\n    CFormSelect,\r\n    CModal,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CFormCheck,\r\n    CCardHeader,\r\n} from '@coreui/react'\r\nimport { bool } from 'prop-types';\r\nconst vars = {\r\n    'cursor': \"pointer\",\r\n    \"color\": \"rgb(33, 37, 41)\",\r\n    \"background-color\": \"#fff\"\r\n}\r\nconst activeLink = {\r\n    'cursor': \"pointer\",\r\n    \"background-color\": \"rgb(33, 37, 41)\",\r\n    \"color\": \"#fff\"\r\n}\r\nconst dangerIcon = {\r\n    \"color\": \"#f7f2f2\"\r\n}\r\nconst fRight = {\r\n    \"float\": \"right\"\r\n}\r\nconst cardText = { \"height\": \"620px\", \"overflow-y\": \"scroll\" }\r\nconst arrayLabels = [\"not\", \"in\"]\r\nexport class Execute extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            executeRules: [],\r\n            activeKey: 1,\r\n            activeSubKeys: [1, 1, 1, 1, 1],\r\n            subKeys: [],\r\n            changedTypes: [],\r\n            visible: false,\r\n            yesNoVisible: false,\r\n            yesNoQuestion: \"\",\r\n            arguments: [],\r\n            sendType: \"\"\r\n\r\n        }\r\n    }\r\n\r\n    setSubActiveKey(key, id) {\r\n        const { subKeys } = this.state;\r\n        var index = subKeys.findIndex(x => x.id === id);\r\n        subKeys[index].activeKey = key;\r\n        this.setState({ subKeys });\r\n        return false;\r\n    }\r\n    getSubActiveKey(e, key, id) {\r\n        const { subKeys } = this.state;\r\n        var index = subKeys.findIndex(x => x.id === id);\r\n        return key == subKeys[index].activeKey\r\n    }\r\n    componentDidMount() {\r\n        this.getDataServiceRules();\r\n    }\r\n    async getDataServiceRules() {\r\n        var orgId = localStorage.getItem('orgId')\r\n        var appId = localStorage.getItem('appId')\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            service: \"dataService\",\r\n            methodContentType: \"other\",\r\n            methodType: \"execute\"\r\n        }\r\n        var d = { ...this.state.executeRules };\r\n        d = await this.props.getRules(model);\r\n        \r\n        var sk = [];\r\n        if (d.length > 0) {\r\n            var rr = d[0];\r\n            rr.roleRules.permissions.map(m => {\r\n                var data = {\r\n                    id: m._id,\r\n                    activeKey: 1\r\n                }\r\n                sk.push(data);\r\n            })\r\n        }\r\n\r\n        this.setState({ executeRules: d, subKeys: sk });\r\n    }\r\n    setVisible(vis) {\r\n        this.setState({ visible: vis });\r\n    }\r\n    async setYesNoVisible(vis, question, sendType, args, send) {\r\n        if (vis)\r\n            this.setState({ yesNoVisible: vis, yesNoQuestion: question, sendType: sendType, arguments: args });\r\n        else {\r\n            if (send) {\r\n                var st = this.state.sendType;\r\n                switch (st) {\r\n                    case \"deleteRole\":\r\n                        await this.deleteRole(this.state.arguments);\r\n                        break;\r\n                    case \"saveAll\":\r\n                        await this.addUpdateRule();\r\n                        break;\r\n                }\r\n            }\r\n            this.setState({ yesNoVisible: vis, yesNoQuestion: \"\", sendType: \"\", arguments: [] });\r\n        }\r\n    }\r\n    async newRuleAdd() {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var eleman = document.getElementById(\"newrule\");\r\n        if (!eleman.value) {\r\n            this.props.toastShow(\"error\", \"Role Name cannot be null or empty!\");\r\n        \r\n            return false;\r\n        }\r\n        var orgId = localStorage.getItem(\"orgId\");\r\n        var appId = localStorage.getItem(\"appId\");\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            rules: [\r\n                {\r\n                    method: \"/dataservice/execute\",\r\n                    methodType: \"execute\",\r\n                    methodContentType: \"other\",\r\n                    service: \"dataService\",\r\n                    permissions: [{\r\n                        role: eleman.value,\r\n                        permitted: {\r\n                            select: false,\r\n                            update: false,\r\n                            delete: false,\r\n                            insert: false,\r\n                            with : false,\r\n                            upsert: false,\r\n                            drop : false\r\n                        },\r\n                        nonPermitted: {\r\n                            select: false,\r\n                            update: false,\r\n                            delete: false,\r\n                            insert: false,\r\n                            with : false,\r\n                            upsert: false,\r\n                            drop :false\r\n                        }\r\n                    }]\r\n                }\r\n            ]\r\n        }\r\n        await this.props.newRuleAdd(model);\r\n        this.getDataServiceRules();\r\n    }\r\n    async addUpdateRule() {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var executeRules = [...this.state.executeRules]\r\n        var rule = executeRules[0].roleRules;\r\n        var rls = {\r\n            method: rule.method,\r\n            methodType: rule.methodType,\r\n            methodContentType: rule.methodContentType,\r\n            service: rule.service,\r\n            permissions: rule.permissions\r\n        }\r\n        var orgId = localStorage.getItem(\"orgId\");\r\n        var appId = localStorage.getItem(\"appId\");\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            rules: [rls]\r\n        }\r\n        this.props.addUpdateRule(model);\r\n    }\r\n    async deleteRole(args) {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var id = args[0];\r\n        var index = args[1];\r\n        var orgId = localStorage.getItem('orgId')\r\n        var appId = localStorage.getItem('appId')\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            id: id\r\n        }\r\n        var success = await this.props.deleteRole(model);\r\n       \r\n        if (success) {\r\n            var executeRules = [...this.state.executeRules]\r\n            var permissions = executeRules[0].roleRules.permissions;\r\n            permissions.splice(index, 1);\r\n            this.setState({ executeRules });\r\n        }\r\n    }\r\n    changed(permIndex, type, e) {\r\n        var executeRules = [...this.state.executeRules]\r\n        var collection = executeRules[0].roleRules.permissions[permIndex][type][e.target.name] = e.target.checked;\r\n        this.setState({ executeRules });\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <CCard>\r\n               \r\n                <CRow className='m-2 border-bottom d-flex align-items-center'>\r\n                    <CCol className='col-6 pb-2'>\r\n                        <CCardTitle>Add/Update <b>\"Execute SQL\"</b> Permissions</CCardTitle>\r\n                    </CCol>\r\n                    <CCol className='col-6 d-grid gap-2 d-md-flex justify-content-md-end pb-2'>\r\n                        <CButton color='secondary' onClick={this.setVisible.bind(this, true)}>Add New Role</CButton>\r\n                        <CButton color='info' style={{\"color\":\"#fff\"}}\r\n                            onClick={this.setYesNoVisible.bind(this, true, \"Are you sure you want to save all?\", \"saveAll\", [this])}>Save All</CButton>\r\n                    </CCol>\r\n\r\n                    <CModal visible={this.state.visible} onClose={this.setVisible.bind(this, false)}>\r\n                        <CModalHeader>\r\n                            <CModalTitle>Add New Role</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalBody>\r\n                            <CFormInput type='text' placeholder='Role Name' name=\"newRule\" id=\"newrule\" />\r\n                        </CModalBody>\r\n                        <CModalFooter>\r\n                            <CButton color=\"secondary\" onClick={this.setVisible.bind(this, false)}>\r\n                                Close\r\n                            </CButton>\r\n                            <CButton color=\"primary\" onClick={this.newRuleAdd.bind(this)}>Create Role</CButton>\r\n                        </CModalFooter>\r\n                    </CModal>\r\n                    <CModal visible={this.state.yesNoVisible} onClose={this.setYesNoVisible.bind(this, false)}>\r\n                        <CModalHeader>\r\n                            <CModalTitle>{this.state.yesNoQuestion}</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalFooter>\r\n                            <CButton color=\"secondary\" onClick={this.setYesNoVisible.bind(this, false, null, null, null, false)}>\r\n                                No\r\n                            </CButton>\r\n                            <CButton color=\"primary\" onClick={this.setYesNoVisible.bind(this, false, null, null, null, true)}>Yes</CButton>\r\n                        </CModalFooter>\r\n                    </CModal>\r\n                </CRow>\r\n                <CCardBody style={cardText}>\r\n\r\n                    {this.state.executeRules.length > 0 &&\r\n\r\n                        this.state.executeRules[0].roleRules.permissions.map((item, index) => (\r\n                            <CCard className='mt-1'>\r\n                                <CCardBody>\r\n                                    <CCardTitle><b>\"{item.role}\"</b> Rules  <span style={fRight}>\r\n                                        <CButton color='danger'\r\n                                            onClick={this.setYesNoVisible.bind(this, true, \"Are you sure you want to delete \" + item.role + \" role?\", \"deleteRole\", [item._id, index, this])}\r\n                                            //onClick={this.deleteRole.bind(this,item._id,index)}\r\n                                            style={dangerIcon}>Delete Role</CButton></span></CCardTitle>\r\n                                    <CNav variant=\"tabs\" className='mt-4' role=\"tablist\" style={vars} >\r\n                                        <CNavItem>\r\n                                            <CNavLink\r\n                                                style={vars}\r\n                                                active={this.getSubActiveKey(this, 1, item._id)}\r\n                                                onClick={this.setSubActiveKey.bind(this, 1, item._id)}\r\n                                            >\r\n                                                Permitted\r\n                                            </CNavLink>\r\n                                        </CNavItem>\r\n                                        <CNavItem>\r\n                                            <CNavLink\r\n                                                style={vars}\r\n                                                active={this.getSubActiveKey(this, 2, item._id)}\r\n                                                onClick={this.setSubActiveKey.bind(this, 2, item._id)}\r\n                                            >\r\n                                                Non-Permitted\r\n                                            </CNavLink>\r\n                                        </CNavItem>\r\n\r\n                                    </CNav>\r\n                                    <CTabContent>\r\n                                        <CTabPane role=\"tabpanel\" className='p-3' aria-labelledby=\"home-tab\" visible={this.getSubActiveKey(this, 1, item._id)}>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Choose permitted notification types</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    {Object.keys(item.permitted).map((c, i) => (\r\n                                                        <CFormCheck onChange={this.changed.bind(this, index, \"permitted\")} label={c.charAt(0).toUpperCase() + c.slice(1)} name={c} checked={item.permitted[c]} />\r\n                                                    ))}\r\n                                                </CCardBody>\r\n                                            </CCard>\r\n                                        </CTabPane>\r\n                                        <CTabPane role=\"tabpanel\" className='p-3' aria-labelledby=\"profile-tab\" visible={this.getSubActiveKey(this, 2, item._id)}>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Choose non-permitted notification types</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    {Object.keys(item.nonPermitted).map((c, i) => (\r\n                                                        <CFormCheck onChange={this.changed.bind(this, index, \"nonPermitted\")} label={c.charAt(0).toUpperCase() + c.slice(1)} name={c} checked={item.nonPermitted[c]} />\r\n                                                    ))}\r\n                                                </CCardBody>\r\n                                            </CCard>\r\n                                        </CTabPane>\r\n\r\n                                    </CTabContent>\r\n                                </CCardBody>\r\n                            </CCard>\r\n                        ))}\r\n                </CCardBody>\r\n\r\n\r\n            </CCard>\r\n        )\r\n    }\r\n}\r\nexport default Execute","import React, { Component } from 'react';\r\nimport CIcon from '@coreui/icons-react';\r\nimport * as icon from '@coreui/icons';\r\nimport { Link } from 'react-router-dom'\r\nimport { format } from 'date-fns';\r\nimport { ToastContainer, toast, Slide } from 'react-toastify';\r\nimport Popup from '../../../widgets/Popup';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CCard,\r\n    CCardBody,\r\n    CRow,\r\n    CCol,\r\n    CCardTitle,\r\n    CFormInput,\r\n    CButton,\r\n    CFormSelect,\r\n    CModal,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CCardHeader,\r\n    CCardFooter,\r\n} from '@coreui/react'\r\nimport { bool } from 'prop-types';\r\nconst vars = {\r\n    'cursor': \"pointer\",\r\n    \"color\": \"rgb(33, 37, 41)\",\r\n    \"background-color\": \"#fff\"\r\n}\r\nconst activeLink = {\r\n    'cursor': \"pointer\",\r\n    \"background-color\": \"rgb(33, 37, 41)\",\r\n    \"color\": \"#fff\"\r\n}\r\nconst dangerIcon = {\r\n    \"color\": \"#f7f2f2\"\r\n}\r\nconst fRight = {\r\n    \"float\": \"right\"\r\n}\r\nconst cardText = { \"height\": \"620px\", \"overflow-y\": \"scroll\" }\r\nconst arrayLabels = [\"not\", \"in\", \"eq\"]\r\nexport class GetCollections extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            collectionCreateRules: [],\r\n            activeKey: 1,\r\n            activeSubKeys: [1, 1, 1, 1, 1],\r\n            subKeys: [],\r\n            changedTypes: [],\r\n            visible: false,\r\n            yesNoVisible: false,\r\n            yesNoQuestion: \"\",\r\n            arguments: [],\r\n            sendType: \"\",\r\n            compare:[\"eq\",\"not\",\"gt\",\"gte\",\"lt\",\"lte\",\"in\"]\r\n\r\n        }\r\n    }\r\n\r\n    setSubActiveKey(key, id) {\r\n        const { subKeys } = this.state;\r\n        var index = subKeys.findIndex(x => x.id === id);\r\n        subKeys[index].activeKey = key;\r\n        this.setState({ subKeys });\r\n        return false;\r\n    }\r\n    getSubActiveKey(e, key, id) {\r\n        const { subKeys } = this.state;\r\n        var index = subKeys.findIndex(x => x.id === id);\r\n        return key == subKeys[index].activeKey\r\n    }\r\n    componentDidMount() {\r\n        this.getCollectionRules();\r\n    }\r\n    setSubKey(d) {\r\n        var sk = [];\r\n        if (d.length > 0) {\r\n            var rr = d[0];\r\n            rr.roleRules.permissions.map(m => {\r\n                var data = {\r\n                    id: m._id,\r\n                    activeKey: 1\r\n                }\r\n                sk.push(data);\r\n            })\r\n        }\r\n\r\n        this.setState({ collectionCreateRules: d, subKeys: sk });\r\n    }\r\n    async getCollectionRules() {\r\n        var orgId = localStorage.getItem('orgId')\r\n        var appId = localStorage.getItem('appId')\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            service: this.props.service,\r\n            methodContentType: \"collection\",\r\n            methodType: \"read\"\r\n        }\r\n        var d = { ...this.state.collectionCreateRules };\r\n        d = await this.props.getRules(model);\r\n\r\n        this.setSubKey(d);\r\n    }\r\n    getValueType(val) {\r\n        if (Array.isArray(val)) {\r\n            if (val.length > 0) {\r\n                return typeof val[0]\r\n            }\r\n        }\r\n        return typeof val;\r\n    }\r\n    getContentData(item, key, permIndex, type) {\r\n        return (\r\n            <div>\r\n                {Object.keys(item).length < 1 &&\r\n                    <CRow className='mt-2 justify-content-center'>\r\n                        <CCol className='col-2'>\r\n                            <CButton color='primary' onClick={this.addNewContentDataSub.bind(this, key, permIndex, type)}><CIcon style={dangerIcon} icon={icon.cilPlus} /></CButton>\r\n                        </CCol>\r\n                    </CRow>\r\n                }\r\n                {typeof item == \"object\" &&\r\n                    Object.keys(item).map((k, i) => {\r\n                        return (\r\n                            <div>\r\n                                <CRow className='mt-2'>\r\n                                    <CCol className='col-3'>\r\n                                        <CFormSelect onChange={this.eqChanged.bind(this, key, k, permIndex, type, i)}\r\n                                            value={k} name={this.getValueType(item[k])}>\r\n                                            <option value=\"eq\">{'='}</option>\r\n                                            <option value=\"not\">{'!='}</option>\r\n                                            <option value=\"gt\">{'>'}</option>\r\n                                            <option value=\"gte\">{'>='}</option>\r\n                                            <option value=\"lt\">{'<'}</option>\r\n                                            <option value=\"lte\">{'<='}</option>\r\n                                            <option value=\"in\">{'in'}</option>\r\n                                        </CFormSelect>\r\n                                    </CCol>\r\n                                    <CCol className='col-3'>\r\n                                        <CFormInput type='text' name='value' onChange={this.changeContentDataSubKey.bind(this, key, k, permIndex, type)} placeholder={arrayLabels.indexOf(k) < 0 ? \"value\" : \"values with comma\"} value={arrayLabels.indexOf(k) < 0 ? item[k] : this.value} />\r\n                                    </CCol>\r\n                                    <CCol className='col-3'>\r\n                                        <CFormSelect id={key + \"_\" + k + \"_\" + permIndex + \"_\" + type}\r\n                                            onChange={this.typeChanged.bind(this, key, k, permIndex, type, i)}\r\n                                            value={this.getValueType(item[k])}\r\n                                            disabled={item[k].length<1} >\r\n                                            <option value=\"string\">{'String'}</option>\r\n                                            <option value=\"number\">{'Integer'}</option>\r\n                                        </CFormSelect>\r\n                                    </CCol>\r\n                                    <CCol className='col-1 align-self-center'>\r\n                                        <button type=\"button\"\r\n                                            onClick={this.removeContentDataSubKey.bind(this, key, k, permIndex, type)}\r\n                                            class=\"btn-close\" aria-label=\"Remove\" />\r\n                                    </CCol>\r\n\r\n                                    {Object.keys(item).length - 1 == i &&\r\n                                        <CCol className='col-1'>\r\n                                            <CButton color='primary' onClick={this.addNewContentDataSub.bind(this, key, permIndex, type)}><CIcon style={dangerIcon} icon={icon.cilPlus} /></CButton>\r\n                                        </CCol>\r\n                                    }\r\n                                </CRow>\r\n                                {arrayLabels.indexOf(k) >= 0 &&\r\n                                    <CRow className='mt-2'>\r\n                                        {item[k].map((val =>\r\n                                            <CCol className='col-3'>\r\n                                                {this.getArrayItems(val, key, k, permIndex, type)}\r\n                                            </CCol>\r\n                                        ))}\r\n                                    </CRow>\r\n                                }\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n    getArrayItems(val, key, k, permIndex, type) {\r\n        return (\r\n            <p className=\"p-1 rounded border border-primary text-primary\">{val}\r\n                <span style={fRight}> <button type=\"button\"\r\n                    onClick={this.removeContentDataSubKeyArray.bind(this, key, k, permIndex, type, val)}\r\n                    class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n            </p>\r\n        )\r\n    }\r\n\r\n    eqChanged(key, k, permIndex, type, keyIndex, e) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type];\r\n        var newContentData = {}\r\n\r\n        Object.keys(collection.contentData[key]).map((ki, i) => {\r\n            if (keyIndex == i) {\r\n                if (arrayLabels.indexOf(e.target.value) < 0)\r\n                    newContentData[e.target.value] = collection.contentData[key][ki]\r\n                else {\r\n                    var arr = this.getValueAsArrayByType(collection.contentData[key][ki], e.target.name);\r\n                    newContentData[e.target.value] = arr\r\n                }\r\n            } else {\r\n                newContentData[ki] = collection.contentData[key][ki]\r\n            }\r\n        })\r\n        collection.contentData[key] = newContentData;\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    typeChanged(key, k, permIndex, type, keyIndex, e) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type];\r\n        var newContentData = {}\r\n        Object.keys(collection.contentData[key]).map((ki, i) => {\r\n            if (keyIndex == i) {\r\n                if (arrayLabels.indexOf(k) < 0)\r\n                    newContentData[k] = this.convert(collection.contentData[key][ki], e.target.value);\r\n                else {\r\n                    var arr = this.convert(collection.contentData[key][ki], e.target.value);\r\n                    newContentData[k] = arr\r\n                }\r\n            } else {\r\n                newContentData[ki] = collection.contentData[key][ki]\r\n            }\r\n        })\r\n        collection.contentData[key] = newContentData;\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    removeContentDataSubKey(key, k, permIndex, type) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type];\r\n        delete collection.contentData[key][k];\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n    removeContentDataSubKeyArray(key, k, permIndex, type, val) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type];\r\n        const index = collection.contentData[key][k].indexOf(val);\r\n        if (index > -1) {\r\n            collection.contentData[key][k].splice(index, 1);\r\n        }\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n\r\n    changeContentDataSubKey(key, k, permIndex, type, e) {\r\n        var eleman = document.getElementById(key + \"_\" + k + \"_\" + permIndex + \"_\" + type)\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type];\r\n        if (arrayLabels.indexOf(k) < 0)\r\n            collection.contentData[key][k] = e.target.value;\r\n        else {\r\n            if (e.target.value.toString().indexOf(\",\") >= 0) {\r\n                var arr = this.getValueAsArrayByType(e.target.value, eleman.value);\r\n                switch (eleman.value) {\r\n                    case \"string\":\r\n                        if (arr[0] && collection.contentData[key][k].indexOf(arr[0]) < 0) {\r\n                            collection.contentData[key][k].push(arr[0]);\r\n                        }\r\n                        break;\r\n                    case \"number\":\r\n                        if (!isNaN(arr[0]) && collection.contentData[key][k].indexOf(arr[0]) < 0) {\r\n                            collection.contentData[key][k].push(arr[0]);\r\n                        }\r\n                        break;\r\n                }\r\n                e.target.value = \"\";\r\n            }\r\n            else if (e.target.value.toString().trim() == \"\") {\r\n                e.target.value = \"\";\r\n            }\r\n        }\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n    addNewContentDataSub(key, permIndex, type) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type];\r\n        for(var i=0;i<this.state.compare.length;++i){\r\n            if(!(this.state.compare[i] in collection.contentData[key])){\r\n                 if(i>0 && collection.contentData[key][this.state.compare[i-1]].length>0){\r\n                    collection.contentData[key][this.state.compare[i]] = [];\r\n                }else if(i==0){\r\n                    collection.contentData[key][this.state.compare[i]] = [];\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n    removeContentDataKey(key, permIndex, type) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type];\r\n        delete collection.contentData[key];\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n    changeContentDataKey(key, permIndex, type, keyIndex, e) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type]\r\n        var newContentData = {}\r\n        Object.keys(collection.contentData).map((k, i) => {\r\n            if (keyIndex == i) {\r\n                newContentData[e.target.value] = collection.contentData[k]\r\n            } else {\r\n                newContentData[k] = collection.contentData[k]\r\n            }\r\n        })\r\n        collection.contentData = newContentData;\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n\r\n    addNewContentData(permIndex, type) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type];\r\n        collection.contentData[\"newkey\"] = {};\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n\r\n    getValueAsArrayByType(val, type) {\r\n        var arr = []\r\n        var d = val.toString();\r\n        var ind = d.indexOf(',');\r\n        if (ind >= 0) {\r\n            var arrElems = val.split(\",\");\r\n            switch (type) {\r\n                case \"string\":\r\n                    arr = arrElems;\r\n                    break;\r\n                case \"number\":\r\n                    arrElems.map((item) => {\r\n                        arr.push(parseInt(item));\r\n                    });\r\n            }\r\n        }\r\n        else {\r\n            switch (type) {\r\n                case \"string\":\r\n                    if (val) {\r\n                        arr.push(val)\r\n                    }\r\n                    break;\r\n                case \"number\":\r\n                    if (!isNaN(val)) {\r\n                        arr.push(val)\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return arr;\r\n    }\r\n    convert(val, type) {\r\n        if (!Array.isArray(val)) {\r\n            switch (type) {\r\n                case \"string\":\r\n                    return val.toString();\r\n                case \"number\":\r\n                    return parseInt(val);\r\n            }\r\n        } else {\r\n            switch (type) {\r\n                case \"string\":\r\n                    var arr = [];\r\n                    val.map((item) => {\r\n                        arr.push(item.toString());\r\n                    });\r\n                    return arr;\r\n                case \"number\":\r\n                    var arr = [];\r\n                    val.map((item) => {\r\n                        var item = parseInt(item);\r\n                        if (!isNaN(item))\r\n                            arr.push(item);\r\n                    });\r\n                    return arr;\r\n            }\r\n\r\n        }\r\n    }\r\n    async addUpdateRule() {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var rule = collectionCreateRules[0].roleRules;\r\n        var rls = {\r\n            method: rule.method,\r\n            methodType: rule.methodType,\r\n            methodContentType: rule.methodContentType,\r\n            service: rule.service,\r\n            permissions: rule.permissions\r\n        }\r\n        var orgId = localStorage.getItem(\"orgId\");\r\n        var appId = localStorage.getItem(\"appId\");\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            rules: [rls]\r\n        }\r\n        this.props.addUpdateRule(model);\r\n    }\r\n    setVisible(vis) {\r\n        this.setState({ visible: vis });\r\n    }\r\n    async setYesNoVisible(vis, question, sendType, args, send) {\r\n        if (vis)\r\n            this.setState({ yesNoVisible: vis, yesNoQuestion: question, sendType: sendType, arguments: args });\r\n        else {\r\n            if (send) {\r\n                var st = this.state.sendType;\r\n                switch (st) {\r\n                    case \"deleteRole\":\r\n                        await this.deleteRole(this.state.arguments);\r\n                        break;\r\n                    case \"saveAll\":\r\n                        await this.addUpdateRule();\r\n                        break;\r\n                }\r\n            }\r\n            this.setState({ yesNoVisible: vis, yesNoQuestion: \"\", sendType: \"\", arguments: [] });\r\n        }\r\n    }\r\n    async newRuleAdd() {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var rule = collectionCreateRules[0].roleRules;\r\n        var eleman = document.getElementById(\"newrule\");\r\n        if (!eleman.value) {\r\n            this.props.toastShow(\"error\", \"Role Name cannot be null or empty!\");\r\n            return false;\r\n        }\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var orgId = localStorage.getItem(\"orgId\");\r\n        var appId = localStorage.getItem(\"appId\");\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            rules: [\r\n                {\r\n                    method: rule.method,\r\n                    methodType: \"read\",\r\n                    methodContentType: \"collection\",\r\n                    service: this.props.service,\r\n                    permissions: [{\r\n                        role: eleman.value,\r\n                        permitted: {\r\n                            collectionNames: [\r\n                            ],\r\n                            contentData: {},\r\n                            contentKeys: [\r\n                            ]\r\n                        },\r\n                        nonPermitted: {\r\n                            collectionNames: [\r\n                            ],\r\n                            contentData: {},\r\n                            contentKeys: [\r\n                            ]\r\n                        }\r\n                    }]\r\n                }\r\n            ]\r\n        }\r\n        await this.props.newRuleAdd(model);\r\n        this.getCollectionRules();\r\n    }\r\n    async deleteRole(args) {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing...\");\r\n        var id = args[0];\r\n        var index = args[1];\r\n        var orgId = localStorage.getItem('orgId')\r\n        var appId = localStorage.getItem('appId')\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            id: id\r\n        }\r\n        var success = await this.props.deleteRole(model);\r\n        if (success) {\r\n            var collectionCreateRules = [...this.state.collectionCreateRules]\r\n            var permissions = collectionCreateRules[0].roleRules.permissions;\r\n            permissions.splice(index, 1);\r\n            this.setState({ collectionCreateRules });\r\n        }\r\n    }\r\n    addExt(permIndex, type, item, e) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type][item];\r\n        if (e.target.value.toString().indexOf(\",\") >= 0) {\r\n            var arr = this.getValueAsArrayByType(e.target.value, \"string\");\r\n            if (arr[0] && collection.indexOf(arr[0]) < 0) {\r\n                collection.push(arr[0]);\r\n            }\r\n            e.target.value = \"\";\r\n        }\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    getExt(val, permIndex, collectionNameIndex, type, item) {\r\n        return (\r\n            <CCol md={3}>\r\n                <p className=\"p-1 rounded border border-primary text-primary\">{val}\r\n                    <span style={fRight}> <button type=\"button\"\r\n                        onClick={this.removeExt.bind(this, permIndex, collectionNameIndex, type, item)}\r\n                        class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n                </p>\r\n            </CCol>\r\n        )\r\n    }\r\n    removeExt(permIndex, collectionNameIndex, type, item, e) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type][item]\r\n        collection.splice(collectionNameIndex, 1);\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <CCard>\r\n                <CRow className='m-2 border-bottom d-flex align-items-center'>\r\n                    <CCol className='col-6 pb-2'>\r\n                        <CCardTitle>Add/Update <b>\"Get Collection\"</b> Permissions</CCardTitle>\r\n                    </CCol>\r\n                    <CCol className='col-6 d-grid gap-2 d-md-flex justify-content-md-end pb-2'>\r\n                        <CButton color='secondary' onClick={this.setVisible.bind(this, true)}>Add New Role</CButton>\r\n                        <CButton color='info' style={{ \"color\": \"#fff\" }}\r\n                            onClick={this.setYesNoVisible.bind(this, true, \"Are you sure you want to save all?\", \"saveAll\", [this])}>Save All</CButton>\r\n                    </CCol>\r\n\r\n                    <CModal visible={this.state.visible} onClose={this.setVisible.bind(this, false)}>\r\n                        <CModalHeader>\r\n                            <CModalTitle>Add New Role</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalBody>\r\n                            <CFormInput type='text' placeholder='Role Name' name=\"newRule\" id=\"newrule\" />\r\n                        </CModalBody>\r\n                        <CModalFooter>\r\n                            <CButton color=\"secondary\" onClick={this.setVisible.bind(this, false)}>\r\n                                Close\r\n                            </CButton>\r\n                            <CButton color=\"primary\" onClick={this.newRuleAdd.bind(this)}>Create Role</CButton>\r\n                        </CModalFooter>\r\n                    </CModal>\r\n                    <CModal visible={this.state.yesNoVisible} onClose={this.setYesNoVisible.bind(this, false)}>\r\n                        <CModalHeader>\r\n                            <CModalTitle>{this.state.yesNoQuestion}</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalFooter>\r\n                            <CButton color=\"secondary\" onClick={this.setYesNoVisible.bind(this, false, null, null, null, false)}>\r\n                                No\r\n                            </CButton>\r\n                            <CButton color=\"primary\" onClick={this.setYesNoVisible.bind(this, false, null, null, null, true)}>Yes</CButton>\r\n                        </CModalFooter>\r\n                    </CModal>\r\n                </CRow>\r\n                <CCardBody style={cardText}>\r\n\r\n                    {this.state.collectionCreateRules.length > 0 &&\r\n\r\n                        this.state.collectionCreateRules[0].roleRules.permissions.map((item, index) => (\r\n                            <CCard className='mt-1'>\r\n                                <CCardBody>\r\n                                    <CCardTitle><b>\"{item.role}\"</b> Rules  <span style={fRight}>\r\n                                        <CButton color='danger'\r\n                                            onClick={this.setYesNoVisible.bind(this, true, \"Are you sure you want to delete \" + item.role + \" role?\", \"deleteRole\", [item._id, index, this])}\r\n                                            style={dangerIcon}>Delete Role</CButton></span></CCardTitle>\r\n                                    <CNav variant=\"tabs\" className='mt-4' role=\"tablist\" style={vars} >\r\n                                        <CNavItem>\r\n                                            <CNavLink\r\n                                                style={vars}\r\n                                                active={this.getSubActiveKey(this, 1, item._id)}\r\n                                                onClick={this.setSubActiveKey.bind(this, 1, item._id)}\r\n                                            >\r\n                                                Permitted\r\n                                            </CNavLink>\r\n                                        </CNavItem>\r\n                                        <CNavItem>\r\n                                            <CNavLink\r\n                                                style={vars}\r\n                                                active={this.getSubActiveKey(this, 2, item._id)}\r\n                                                onClick={this.setSubActiveKey.bind(this, 2, item._id)}\r\n                                            >\r\n                                                Non-Permitted\r\n                                            </CNavLink>\r\n                                        </CNavItem>\r\n\r\n                                    </CNav>\r\n                                    <CTabContent>\r\n                                        <CTabPane role=\"tabpanel\" className='p-3' aria-labelledby=\"home-tab\" visible={this.getSubActiveKey(this, 1, item._id)}>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>CollectionNames</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    <CRow className='mt-2 pb-2'>\r\n                                                        <CCol className='col-9'>\r\n                                                            <CFormInput type='text' name='collectionNames'\r\n                                                                onChange={this.addExt.bind(this, index, \"permitted\", \"collectionNames\")}\r\n                                                                placeholder='collectionNames with comma' />\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                    <CRow>\r\n                                                        {item.permitted.collectionNames.map((c, i) => (\r\n                                                            this.getExt(c, index, i, \"permitted\", \"collectionNames\")\r\n                                                        ))}\r\n                                                    </CRow>\r\n                                                </CCardBody>\r\n                                            </CCard>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Content Data</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    {Object.keys(item.permitted.contentData).map((key, keyIndex) => (\r\n                                                        <div>\r\n                                                            <CRow className='mt-2'>\r\n                                                                <CCol className='col-11'>\r\n                                                                    <CCard>\r\n                                                                        <CCardBody>\r\n                                                                            <CRow className='mt-2 pb-2 border-bottom'>\r\n                                                                                <CCol className='col-9'><CFormInput type='text' placeholder='Content Field'\r\n                                                                                    value={key} onChange={this.changeContentDataKey.bind(this, key, index, \"permitted\", keyIndex)} /></CCol>\r\n                                                                                <CCol className='col-1 align-self-center'>\r\n                                                                                    <button type=\"button\"\r\n                                                                                        onClick={this.removeContentDataKey.bind(this, key, index, \"permitted\")}\r\n                                                                                        class=\"btn-close\" aria-label=\"Remove\" />\r\n                                                                                </CCol>\r\n                                                                            </CRow>\r\n                                                                            {this.getContentData(item.permitted.contentData[key], key, index, \"permitted\")}\r\n                                                                        </CCardBody>\r\n                                                                    </CCard>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n\r\n\r\n                                                        </div>\r\n                                                    ))\r\n                                                    }\r\n\r\n                                                    <CRow className='mt-2 justify-content-center'>\r\n                                                        <CCol className='col-6 text-center'>\r\n                                                            <CButton onClick={this.addNewContentData.bind(this, index, \"permitted\")}><CIcon icon={icon.cilPlus} />Add New Content Data</CButton>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                </CCardBody>\r\n                                            </CCard>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Content Keys</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    <CRow className='mt-2 pb-2'>\r\n                                                        <CCol className='col-9'>\r\n                                                            <CFormInput type='text' name='contentKeys'\r\n                                                                onChange={this.addExt.bind(this, index, \"permitted\", \"contentKeys\")}\r\n                                                                placeholder='Content Keys with comma' />\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                    <CRow>\r\n                                                        {item.permitted.contentKeys.map((c, i) => (\r\n                                                            this.getExt(c, index, i, \"permitted\", \"contentKeys\")\r\n                                                        ))}\r\n                                                    </CRow>\r\n                                                </CCardBody>\r\n                                            </CCard>\r\n                                        </CTabPane>\r\n                                        <CTabPane role=\"tabpanel\" className='p-3' aria-labelledby=\"profile-tab\" visible={this.getSubActiveKey(this, 2, item._id)}>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>CollectionNames</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    <CRow className='mt-2 pb-2'>\r\n                                                        <CCol className='col-9'>\r\n                                                            <CFormInput type='text' name='collectionNames'\r\n                                                                onChange={this.addExt.bind(this, index, \"nonPermitted\", \"collectionNames\")}\r\n                                                                placeholder='collectionNames with comma' />\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                    <CRow>\r\n                                                        {item.nonPermitted.collectionNames.map((c, i) => (\r\n                                                            this.getExt(c, index, i, \"nonPermitted\", \"collectionNames\")\r\n                                                        ))}\r\n                                                    </CRow>\r\n                                                </CCardBody>\r\n                                            </CCard>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Content Data</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    {Object.keys(item.nonPermitted.contentData).map((key, keyIndex) => (\r\n                                                        <div>\r\n                                                            <CRow className='mt-2'>\r\n                                                                <CCol className='col-11'>\r\n                                                                    <CCard>\r\n                                                                        <CCardBody>\r\n                                                                            <CRow className='mt-2 pb-2 border-bottom'>\r\n                                                                                <CCol className='col-9'><CFormInput type='text' placeholder='Content Field'\r\n                                                                                    value={key} onChange={this.changeContentDataKey.bind(this, key, index, \"nonPermitted\", keyIndex)} /></CCol>\r\n                                                                                <CCol className='col-1 align-self-center'>\r\n                                                                                    <button type=\"button\"\r\n                                                                                        onClick={this.removeContentDataKey.bind(this, key, index, \"nonPermitted\")}\r\n                                                                                        class=\"btn-close\" aria-label=\"Remove\" />\r\n                                                                                </CCol>\r\n                                                                            </CRow>\r\n                                                                            {this.getContentData(item.nonPermitted.contentData[key], key, index, \"nonPermitted\")}\r\n                                                                        </CCardBody>\r\n                                                                    </CCard>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n\r\n\r\n                                                        </div>\r\n                                                    ))\r\n                                                    }\r\n\r\n                                                    <CRow className='mt-2 justify-content-center'>\r\n                                                        <CCol className='col-6 text-center'>\r\n                                                            <CButton onClick={this.addNewContentData.bind(this, index, \"nonPermitted\")}><CIcon icon={icon.cilPlus} />Add New Content Data</CButton>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                </CCardBody>\r\n                                            </CCard>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Content Keys</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    <CRow className='mt-2 pb-2'>\r\n                                                        <CCol className='col-9'>\r\n                                                            <CFormInput type='text' name='contentKeys'\r\n                                                                onChange={this.addExt.bind(this, index, \"nonPermitted\", \"contentKeys\")}\r\n                                                                placeholder='Content Keys with comma' />\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                    <CRow>\r\n                                                        {item.nonPermitted.contentKeys.map((c, i) => (\r\n                                                            this.getExt(c, index, i, \"nonPermitted\", \"contentKeys\")\r\n                                                        ))}\r\n                                                    </CRow>\r\n                                                </CCardBody>\r\n                                            </CCard>\r\n                                        </CTabPane>\r\n\r\n                                    </CTabContent>\r\n                                </CCardBody>\r\n                            </CCard>\r\n                        ))}\r\n                </CCardBody>\r\n\r\n\r\n            </CCard>\r\n        )\r\n    }\r\n}\r\nexport default GetCollections","import React, { Component } from 'react';\r\nimport CIcon from '@coreui/icons-react';\r\nimport * as icon from '@coreui/icons';\r\nimport { Link } from 'react-router-dom'\r\nimport { format } from 'date-fns';\r\nimport { ToastContainer, toast, Slide } from 'react-toastify';\r\nimport Popup from '../../../widgets/Popup';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CCard,\r\n    CCardBody,\r\n    CRow,\r\n    CCol,\r\n    CCardTitle,\r\n    CFormInput,\r\n    CButton,\r\n    CFormSelect,\r\n    CModal,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CCardHeader,\r\n    CCardFooter,\r\n} from '@coreui/react'\r\nimport { bool } from 'prop-types';\r\nconst vars = {\r\n    'cursor': \"pointer\",\r\n    \"color\": \"rgb(33, 37, 41)\",\r\n    \"background-color\": \"#fff\"\r\n}\r\nconst activeLink = {\r\n    'cursor': \"pointer\",\r\n    \"background-color\": \"rgb(33, 37, 41)\",\r\n    \"color\": \"#fff\"\r\n}\r\nconst dangerIcon = {\r\n    \"color\": \"#f7f2f2\"\r\n}\r\nconst fRight = {\r\n    \"float\": \"right\"\r\n}\r\nconst cardText = { \"height\": \"620px\", \"overflow-y\": \"scroll\" }\r\nconst arrayLabels = [\"not\", \"in\", \"eq\"]\r\nexport class GetRelations extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            collectionCreateRules: [],\r\n            activeKey: 1,\r\n            activeSubKeys: [1, 1, 1, 1, 1],\r\n            subKeys: [],\r\n            changedTypes: [],\r\n            visible: false,\r\n            yesNoVisible: false,\r\n            yesNoQuestion: \"\",\r\n            arguments: [],\r\n            sendType: \"\",\r\n            compare:[\"eq\",\"not\",\"gt\",\"gte\",\"lt\",\"lte\",\"in\"]\r\n\r\n        }\r\n    }\r\n\r\n    setSubActiveKey(key, id) {\r\n        const { subKeys } = this.state;\r\n        var index = subKeys.findIndex(x => x.id === id);\r\n        subKeys[index].activeKey = key;\r\n        this.setState({ subKeys });\r\n        return false;\r\n    }\r\n    getSubActiveKey(e, key, id) {\r\n        const { subKeys } = this.state;\r\n        var index = subKeys.findIndex(x => x.id === id);\r\n        return key == subKeys[index].activeKey\r\n    }\r\n    componentDidMount() {\r\n        this.getRelationsRules();\r\n    }\r\n    async getRelationsRules() {\r\n        var orgId = localStorage.getItem('orgId')\r\n        var appId = localStorage.getItem('appId')\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            service: this.props.service,\r\n            methodContentType: \"relation\",\r\n            methodType: \"read\"\r\n        }\r\n        var d = { ...this.state.collectionCreateRules };\r\n        d = await this.props.getRules(model);\r\n        var sk = [];\r\n        if (d.length > 0) {\r\n            var rr = d[0];\r\n            rr.roleRules.permissions.map(m => {\r\n                var data = {\r\n                    id: m._id,\r\n                    activeKey: 1\r\n                }\r\n                sk.push(data);\r\n            })\r\n        }\r\n\r\n        this.setState({ collectionCreateRules: d, subKeys: sk });\r\n    }\r\n    getValueType(val) {\r\n        if (Array.isArray(val)) {\r\n            if (val.length > 0) {\r\n                return typeof val[0]\r\n            }\r\n        }\r\n        return typeof val;\r\n    }\r\n    getContentData(item, key, permIndex, type) {\r\n        return (\r\n            <div>\r\n                {Object.keys(item).length < 1 &&\r\n                    <CRow className='mt-2 justify-content-center'>\r\n                        <CCol className='col-2'>\r\n                            <CButton color='primary' onClick={this.addNewContentDataSub.bind(this, key, permIndex, type)}><CIcon style={dangerIcon} icon={icon.cilPlus} /></CButton>\r\n                        </CCol>\r\n                    </CRow>\r\n                }\r\n                {typeof item == \"object\" &&\r\n                    Object.keys(item).map((k, i) => {\r\n                        return (\r\n                            <div>\r\n                                <CRow className='mt-2'>\r\n                                    <CCol className='col-3'>\r\n                                        <CFormSelect onChange={this.eqChanged.bind(this, key, k, permIndex, type, i)}\r\n                                            value={k} name={this.getValueType(item[k])}>\r\n                                            <option value=\"eq\">{'='}</option>\r\n                                            <option value=\"not\">{'!='}</option>\r\n                                            <option value=\"gt\">{'>'}</option>\r\n                                            <option value=\"gte\">{'>='}</option>\r\n                                            <option value=\"lt\">{'<'}</option>\r\n                                            <option value=\"lte\">{'<='}</option>\r\n                                            <option value=\"in\">{'in'}</option>\r\n                                        </CFormSelect>\r\n                                    </CCol>\r\n                                    <CCol className='col-3'>\r\n                                        <CFormInput type='text' name='value' onChange={this.changeContentDataSubKey.bind(this, key, k, permIndex, type)} placeholder={arrayLabels.indexOf(k) < 0 ? \"value\" : \"values with comma\"} value={arrayLabels.indexOf(k) < 0 ? item[k] : this.value} />\r\n                                    </CCol>\r\n                                    <CCol className='col-3'>\r\n                                        <CFormSelect id={key + \"_\" + k + \"_\" + permIndex + \"_\" + type}\r\n                                            onChange={this.typeChanged.bind(this, key, k, permIndex, type, i)}\r\n                                            value={this.getValueType(item[k])}\r\n                                            disabled={item[k].length<1} >\r\n                                            <option value=\"string\">{'String'}</option>\r\n                                            <option value=\"number\">{'Integer'}</option>\r\n                                        </CFormSelect>\r\n                                    </CCol>\r\n                                    <CCol className='col-1 align-self-center'>\r\n                                        <button type=\"button\"\r\n                                            onClick={this.removeContentDataSubKey.bind(this, key, k, permIndex, type)}\r\n                                            class=\"btn-close\" aria-label=\"Remove\" />\r\n                                    </CCol>\r\n\r\n                                    {Object.keys(item).length - 1 == i &&\r\n                                        <CCol className='col-1'>\r\n                                            <CButton color='primary' onClick={this.addNewContentDataSub.bind(this, key, permIndex, type)}><CIcon style={dangerIcon} icon={icon.cilPlus} /></CButton>\r\n                                        </CCol>\r\n                                    }\r\n                                </CRow>\r\n                                {arrayLabels.indexOf(k) >= 0 &&\r\n                                    <CRow className='mt-2'>\r\n                                        {item[k].map((val =>\r\n                                            <CCol className='col-3'>\r\n                                                {this.getArrayItems(val, key, k, permIndex, type)}\r\n                                            </CCol>\r\n                                        ))}\r\n                                    </CRow>\r\n                                }\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n    getArrayItems(val, key, k, permIndex, type) {\r\n        return (\r\n            <p className=\"p-1 rounded border border-primary text-primary\">{val}\r\n                <span style={fRight}> <button type=\"button\"\r\n                    onClick={this.removeContentDataSubKeyArray.bind(this, key, k, permIndex, type, val)}\r\n                    class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n            </p>\r\n        )\r\n    }\r\n\r\n    eqChanged(key, k, permIndex, type, keyIndex, e) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type];\r\n        var newContentData = {}\r\n\r\n        Object.keys(collection.contentData[key]).map((ki, i) => {\r\n            if (keyIndex == i) {\r\n                if (arrayLabels.indexOf(e.target.value) < 0)\r\n                    newContentData[e.target.value] = collection.contentData[key][ki]\r\n                else {\r\n                    var arr = this.getValueAsArrayByType(collection.contentData[key][ki], e.target.name);\r\n                    newContentData[e.target.value] = arr\r\n                }\r\n            } else {\r\n                newContentData[ki] = collection.contentData[key][ki]\r\n            }\r\n        })\r\n        collection.contentData[key] = newContentData;\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    typeChanged(key, k, permIndex, type, keyIndex, e) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type];\r\n        var newContentData = {}\r\n        Object.keys(collection.contentData[key]).map((ki, i) => {\r\n            if (keyIndex == i) {\r\n                if (arrayLabels.indexOf(k) < 0)\r\n                    newContentData[k] = this.convert(collection.contentData[key][ki], e.target.value);\r\n                else {\r\n                    var arr = this.convert(collection.contentData[key][ki], e.target.value);\r\n                    newContentData[k] = arr\r\n                }\r\n            } else {\r\n                newContentData[ki] = collection.contentData[key][ki]\r\n            }\r\n        })\r\n        collection.contentData[key] = newContentData;\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    removeContentDataSubKey(key, k, permIndex, type) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type];\r\n        delete collection.contentData[key][k];\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    removeContentDataSubKeyArray(key, k, permIndex, type, val) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type];\r\n        const index = collection.contentData[key][k].indexOf(val);\r\n        if (index > -1) {\r\n            collection.contentData[key][k].splice(index, 1);\r\n        }\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n\r\n    changeContentDataSubKey(key, k, permIndex, type, e) {\r\n        var eleman = document.getElementById(key + \"_\" + k + \"_\" + permIndex + \"_\" + type)\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type];\r\n        if (arrayLabels.indexOf(k) < 0)\r\n            collection.contentData[key][k] = e.target.value;\r\n        else {\r\n            if (e.target.value.toString().indexOf(\",\") >= 0) {\r\n                var arr = this.getValueAsArrayByType(e.target.value, eleman.value);\r\n                switch (eleman.value) {\r\n                    case \"string\":\r\n                        if (arr[0] && collection.contentData[key][k].indexOf(arr[0]) < 0) {\r\n                            collection.contentData[key][k].push(arr[0]);\r\n                        }\r\n                        break;\r\n                    case \"number\":\r\n                        if (!isNaN(arr[0]) && collection.contentData[key][k].indexOf(arr[0]) < 0) {\r\n                            collection.contentData[key][k].push(arr[0]);\r\n                        }\r\n                        break;\r\n                }\r\n                e.target.value = \"\";\r\n            }\r\n            else if (e.target.value.toString().trim() == \"\") {\r\n                e.target.value = \"\";\r\n            }\r\n        }\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n\r\n    }\r\n    addNewContentDataSub(key, permIndex, type) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type];\r\n        for(var i=0;i<this.state.compare.length;++i){\r\n            if(!(this.state.compare[i] in collection.contentData[key])){\r\n                 if(i>0 && collection.contentData[key][this.state.compare[i-1]].length>0){\r\n                    collection.contentData[key][this.state.compare[i]] = [];\r\n                }else if(i==0){\r\n                    collection.contentData[key][this.state.compare[i]] = [];\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    removeContentDataKey(key, permIndex, type) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type];\r\n        delete collection.contentData[key];\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    changeContentDataKey(key, permIndex, type, keyIndex, e) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type]\r\n        var newContentData = {}\r\n        Object.keys(collection.contentData).map((k, i) => {\r\n            if (keyIndex == i) {\r\n                newContentData[e.target.value] = collection.contentData[k]\r\n            } else {\r\n                newContentData[k] = collection.contentData[k]\r\n            }\r\n        })\r\n        collection.contentData = newContentData;\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    \r\n    addNewContentData(permIndex, type) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type];\r\n        collection.contentData[\"newkey\"] = {};\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n   \r\n    getValueAsArrayByType(val, type) {\r\n        var arr = []\r\n        var d = val.toString();\r\n        var ind = d.indexOf(',');\r\n        if (ind >= 0) {\r\n            var arrElems = val.split(\",\");\r\n            switch (type) {\r\n                case \"string\":\r\n                    arr = arrElems;\r\n                    break;\r\n                case \"number\":\r\n                    arrElems.map((item) => {\r\n                        arr.push(parseInt(item));\r\n                    });\r\n            }\r\n        }\r\n        else {\r\n            switch (type) {\r\n                case \"string\":\r\n                    if (val) {\r\n                        arr.push(val)\r\n                    }\r\n                    break;\r\n                case \"number\":\r\n                    if (!isNaN(val)) {\r\n                        arr.push(val)\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return arr;\r\n    }\r\n    convert(val, type) {\r\n        if (!Array.isArray(val)) {\r\n            switch (type) {\r\n                case \"string\":\r\n                    return val.toString();\r\n                case \"number\":\r\n                    return parseInt(val);\r\n            }\r\n        } else {\r\n            switch (type) {\r\n                case \"string\":\r\n                    var arr = [];\r\n                    val.map((item) => {\r\n                        arr.push(item.toString());\r\n                    });\r\n                    return arr;\r\n                case \"number\":\r\n                    var arr = [];\r\n                    val.map((item) => {\r\n                        var item = parseInt(item);\r\n                        if (!isNaN(item))\r\n                            arr.push(item);\r\n                    });\r\n                    return arr;\r\n            }\r\n\r\n        }\r\n    }\r\n    async addUpdateRule() {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var rule = collectionCreateRules[0].roleRules;\r\n        var rls = {\r\n            method: rule.method,\r\n            methodType: rule.methodType,\r\n            methodContentType: rule.methodContentType,\r\n            service: rule.service,\r\n            permissions: rule.permissions\r\n        }\r\n        var orgId = localStorage.getItem(\"orgId\");\r\n        var appId = localStorage.getItem(\"appId\");\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            rules: [rls]\r\n        }\r\n        this.props.addUpdateRule(model);\r\n    }\r\n    setVisible(vis) {\r\n        this.setState({ visible: vis });\r\n    }\r\n    async setYesNoVisible(vis, question, sendType, args, send) {\r\n        if (vis)\r\n            this.setState({ yesNoVisible: vis, yesNoQuestion: question, sendType: sendType, arguments: args });\r\n        else {\r\n            if (send) {\r\n                var st = this.state.sendType;\r\n                switch (st) {\r\n                    case \"deleteRole\":\r\n                        await this.deleteRole(this.state.arguments);\r\n                        break;\r\n                    case \"saveAll\":\r\n                        await this.addUpdateRule();\r\n                        break;\r\n                }\r\n            }\r\n            this.setState({ yesNoVisible: vis, yesNoQuestion: \"\", sendType: \"\", arguments: [] });\r\n        }\r\n    }\r\n    async newRuleAdd() {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var rule = collectionCreateRules[0].roleRules;\r\n        var eleman = document.getElementById(\"newrule\");\r\n        if (!eleman.value) {\r\n            this.props.toastShow(\"error\", \"Role Name cannot be null or empty!\");\r\n            return false;\r\n        }\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var orgId = localStorage.getItem(\"orgId\");\r\n        var appId = localStorage.getItem(\"appId\");\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            rules: [\r\n                {\r\n                    method: rule.method,\r\n                    methodType: \"read\",\r\n                    methodContentType: \"relation\",\r\n                    service: this.props.service,\r\n                    permissions: [{\r\n                        role: eleman.value,\r\n                        permitted: {\r\n                            relationNames:[],\r\n                            collectionNames: [\r\n                            ],\r\n                            contentData: {},\r\n                            contentKeys: [\r\n                            ]\r\n                        },\r\n                        nonPermitted: {\r\n                            relationNames:[],\r\n                            collectionNames: [\r\n                            ],\r\n                            contentData: {},\r\n                            contentKeys: [\r\n                            ]\r\n                        }\r\n                    }]\r\n                }\r\n            ]\r\n        }\r\n        await this.props.newRuleAdd(model);\r\n        this.getRelationsRules();\r\n    }\r\n    async deleteRole(args) {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing...\");\r\n        var id = args[0];\r\n        var index = args[1];\r\n        var orgId = localStorage.getItem('orgId')\r\n        var appId = localStorage.getItem('appId')\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            id: id\r\n        }\r\n        var success = await this.props.deleteRole(model);\r\n        if (success) {\r\n            var collectionCreateRules = [...this.state.collectionCreateRules]\r\n            var permissions = collectionCreateRules[0].roleRules.permissions;\r\n            permissions.splice(index, 1);\r\n            this.setState({ collectionCreateRules });\r\n\r\n        }\r\n    }\r\n    addExt(permIndex, type,item, e) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type][item];\r\n        if (e.target.value.toString().indexOf(\",\") >= 0) {\r\n            var arr = this.getValueAsArrayByType(e.target.value, \"string\");\r\n            if (arr[0] && collection.indexOf(arr[0]) < 0) {\r\n                collection.push(arr[0]);\r\n            }\r\n            e.target.value = \"\";\r\n        }\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    getExt(val, permIndex, collectionNameIndex, type,item) {\r\n        return (\r\n            <CCol md={3}>\r\n                <p className=\"p-1 rounded border border-primary text-primary\">{val}\r\n                    <span style={fRight}> <button type=\"button\"\r\n                        onClick={this.removeExt.bind(this, permIndex, collectionNameIndex, type,item)}\r\n                        class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n                </p>\r\n            </CCol>\r\n        )\r\n    }\r\n    removeExt(permIndex, collectionNameIndex, type,item, e) {\r\n        var collectionCreateRules = [...this.state.collectionCreateRules]\r\n        var collection = collectionCreateRules[0].roleRules.permissions[permIndex][type][item]\r\n        collection.splice(collectionNameIndex, 1);\r\n        this.setState({ collectionCreateRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <CCard>\r\n                <CRow className='m-2 border-bottom d-flex align-items-center'>\r\n                    <CCol className='col-6 pb-2'>\r\n                        <CCardTitle>Add/Update <b>\"Get Relation\"</b> Permissions</CCardTitle>\r\n                    </CCol>\r\n                    <CCol className='col-6 d-grid gap-2 d-md-flex justify-content-md-end pb-2'>\r\n                        <CButton color='secondary' onClick={this.setVisible.bind(this, true)}>Add New Role</CButton>\r\n                        <CButton color='info' style={{ \"color\": \"#fff\" }}\r\n                            onClick={this.setYesNoVisible.bind(this, true, \"Are you sure you want to save all?\", \"saveAll\", [this])}>Save All</CButton>\r\n                    </CCol>\r\n\r\n                    <CModal visible={this.state.visible} onClose={this.setVisible.bind(this, false)}>\r\n                        <CModalHeader>\r\n                            <CModalTitle>Add New Role</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalBody>\r\n                            <CFormInput type='text' placeholder='Role Name' name=\"newRule\" id=\"newrule\" />\r\n                        </CModalBody>\r\n                        <CModalFooter>\r\n                            <CButton color=\"secondary\" onClick={this.setVisible.bind(this, false)}>\r\n                                Close\r\n                            </CButton>\r\n                            <CButton color=\"primary\" onClick={this.newRuleAdd.bind(this)}>Create Role</CButton>\r\n                        </CModalFooter>\r\n                    </CModal>\r\n                    <CModal visible={this.state.yesNoVisible} onClose={this.setYesNoVisible.bind(this, false)}>\r\n                        <CModalHeader>\r\n                            <CModalTitle>{this.state.yesNoQuestion}</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalFooter>\r\n                            <CButton color=\"secondary\" onClick={this.setYesNoVisible.bind(this, false, null, null, null, false)}>\r\n                                No\r\n                            </CButton>\r\n                            <CButton color=\"primary\" onClick={this.setYesNoVisible.bind(this, false, null, null, null, true)}>Yes</CButton>\r\n                        </CModalFooter>\r\n                    </CModal>\r\n                </CRow>\r\n                <CCardBody style={cardText}>\r\n\r\n                    {this.state.collectionCreateRules.length > 0 &&\r\n\r\n                        this.state.collectionCreateRules[0].roleRules.permissions.map((item, index) => (\r\n                            <CCard className='mt-1'>\r\n                                <CCardBody>\r\n                                    <CCardTitle><b>\"{item.role}\"</b> Rules  <span style={fRight}>\r\n                                        <CButton color='danger'\r\n                                            onClick={this.setYesNoVisible.bind(this, true, \"Are you sure you want to delete \" + item.role + \" role?\", \"deleteRole\", [item._id, index, this])}\r\n                                            //onClick={this.deleteRole.bind(this,item._id,index)}\r\n                                            style={dangerIcon}>Delete Role</CButton></span></CCardTitle>\r\n                                    <CNav variant=\"tabs\" className='mt-4' role=\"tablist\" style={vars} >\r\n                                        <CNavItem>\r\n                                            <CNavLink\r\n                                                style={vars}\r\n                                                active={this.getSubActiveKey(this, 1, item._id)}\r\n                                                onClick={this.setSubActiveKey.bind(this, 1, item._id)}\r\n                                            >\r\n                                                Permitted\r\n                                            </CNavLink>\r\n                                        </CNavItem>\r\n                                        <CNavItem>\r\n                                            <CNavLink\r\n                                                style={vars}\r\n                                                active={this.getSubActiveKey(this, 2, item._id)}\r\n                                                onClick={this.setSubActiveKey.bind(this, 2, item._id)}\r\n                                            >\r\n                                                Non-Permitted\r\n                                            </CNavLink>\r\n                                        </CNavItem>\r\n\r\n                                    </CNav>\r\n                                    <CTabContent>\r\n                                        <CTabPane role=\"tabpanel\" className='p-3' aria-labelledby=\"home-tab\" visible={this.getSubActiveKey(this, 1, item._id)}>\r\n                                        <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>RelationNames</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    <CRow className='mt-2 pb-2'>\r\n                                                        <CCol className='col-9'>\r\n                                                            <CFormInput type='text' name='relationNames'\r\n                                                                onChange={this.addExt.bind(this, index, \"permitted\",\"relationNames\")}\r\n                                                                placeholder='relationNames with comma' />\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                    <CRow>\r\n                                                        {item.permitted.relationNames.map((c, i) => (\r\n                                                            this.getExt(c, index, i, \"permitted\",\"relationNames\")\r\n                                                        ))}\r\n                                                    </CRow>\r\n                                                </CCardBody>\r\n                                            </CCard>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>CollectionNames</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    <CRow className='mt-2 pb-2'>\r\n                                                        <CCol className='col-9'>\r\n                                                            <CFormInput type='text' name='collectionNames'\r\n                                                                onChange={this.addExt.bind(this, index, \"permitted\",\"collectionNames\")}\r\n                                                                placeholder='collectionNames with comma' />\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                    <CRow>\r\n                                                        {item.permitted.collectionNames.map((c, i) => (\r\n                                                            this.getExt(c, index, i, \"permitted\",\"collectionNames\")\r\n                                                        ))}\r\n                                                    </CRow>\r\n                                                </CCardBody>\r\n                                            </CCard>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Content Data</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    {Object.keys(item.permitted.contentData).map((key, keyIndex) => (\r\n                                                        <div>\r\n                                                            <CRow className='mt-2'>\r\n                                                                <CCol className='col-11'>\r\n                                                                    <CCard>\r\n                                                                        <CCardBody>\r\n                                                                            <CRow className='mt-2 pb-2 border-bottom'>\r\n                                                                                <CCol className='col-9'><CFormInput type='text' placeholder='Content Field'\r\n                                                                                    value={key} onChange={this.changeContentDataKey.bind(this, key, index, \"permitted\", keyIndex)} /></CCol>\r\n                                                                                <CCol className='col-1 align-self-center'>\r\n                                                                                    <button type=\"button\"\r\n                                                                                        onClick={this.removeContentDataKey.bind(this, key, index, \"permitted\")}\r\n                                                                                        class=\"btn-close\" aria-label=\"Remove\" />\r\n                                                                                </CCol>\r\n                                                                            </CRow>\r\n                                                                            {this.getContentData(item.permitted.contentData[key], key, index, \"permitted\")}\r\n                                                                        </CCardBody>\r\n                                                                    </CCard>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n\r\n\r\n                                                        </div>\r\n                                                    ))\r\n                                                    }\r\n\r\n                                                    <CRow className='mt-2 justify-content-center'>\r\n                                                        <CCol className='col-6 text-center'>\r\n                                                            <CButton onClick={this.addNewContentData.bind(this, index, \"permitted\")}><CIcon icon={icon.cilPlus} />Add New Content Data</CButton>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                </CCardBody>\r\n                                            </CCard>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Content Keys</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    <CRow className='mt-2 pb-2'>\r\n                                                        <CCol className='col-9'>\r\n                                                            <CFormInput type='text' name='contentKeys'\r\n                                                                onChange={this.addExt.bind(this, index, \"permitted\",\"contentKeys\")}\r\n                                                                placeholder='Content Keys with comma' />\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                    <CRow>\r\n                                                        {item.permitted.contentKeys.map((c, i) => (\r\n                                                            this.getExt(c, index, i, \"permitted\",\"contentKeys\")\r\n                                                        ))}\r\n                                                    </CRow>\r\n                                                </CCardBody>\r\n                                            </CCard>\r\n                                        </CTabPane>\r\n                                        <CTabPane role=\"tabpanel\" className='p-3' aria-labelledby=\"profile-tab\" visible={this.getSubActiveKey(this, 2, item._id)}>\r\n                                        <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>RelationNames</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    <CRow className='mt-2 pb-2'>\r\n                                                        <CCol className='col-9'>\r\n                                                            <CFormInput type='text' name='relationNames'\r\n                                                                onChange={this.addExt.bind(this, index, \"nonPermitted\",\"relationNames\")}\r\n                                                                placeholder='relationNames with comma' />\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                    <CRow>\r\n                                                        {item.nonPermitted.relationNames.map((c, i) => (\r\n                                                            this.getExt(c, index, i, \"nonPermitted\",\"relationNames\")\r\n                                                        ))}\r\n                                                    </CRow>\r\n                                                </CCardBody>\r\n                                            </CCard>\r\n                                        <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>CollectionNames</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    <CRow className='mt-2 pb-2'>\r\n                                                        <CCol className='col-9'>\r\n                                                            <CFormInput type='text' name='collectionNames'\r\n                                                                onChange={this.addExt.bind(this, index, \"nonPermitted\",\"collectionNames\")}\r\n                                                                placeholder='collectionNames with comma' />\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                    <CRow>\r\n                                                        {item.nonPermitted.collectionNames.map((c, i) => (\r\n                                                            this.getExt(c, index, i, \"nonPermitted\",\"collectionNames\")\r\n                                                        ))}\r\n                                                    </CRow>\r\n                                                </CCardBody>\r\n                                            </CCard>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Content Data</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    {Object.keys(item.nonPermitted.contentData).map((key, keyIndex) => (\r\n                                                        <div>\r\n                                                            <CRow className='mt-2'>\r\n                                                                <CCol className='col-11'>\r\n                                                                    <CCard>\r\n                                                                        <CCardBody>\r\n                                                                            <CRow className='mt-2 pb-2 border-bottom'>\r\n                                                                                <CCol className='col-9'><CFormInput type='text' placeholder='Content Field'\r\n                                                                                    value={key} onChange={this.changeContentDataKey.bind(this, key, index, \"nonPermitted\", keyIndex)} /></CCol>\r\n                                                                                <CCol className='col-1 align-self-center'>\r\n                                                                                    <button type=\"button\"\r\n                                                                                        onClick={this.removeContentDataKey.bind(this, key, index, \"nonPermitted\")}\r\n                                                                                        class=\"btn-close\" aria-label=\"Remove\" />\r\n                                                                                </CCol>\r\n                                                                            </CRow>\r\n                                                                            {this.getContentData(item.nonPermitted.contentData[key], key, index, \"nonPermitted\")}\r\n                                                                        </CCardBody>\r\n                                                                    </CCard>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n\r\n\r\n                                                        </div>\r\n                                                    ))\r\n                                                    }\r\n\r\n                                                    <CRow className='mt-2 justify-content-center'>\r\n                                                        <CCol className='col-6 text-center'>\r\n                                                            <CButton onClick={this.addNewContentData.bind(this, index, \"nonPermitted\")}><CIcon icon={icon.cilPlus} />Add New Content Data</CButton>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                </CCardBody>\r\n                                            </CCard>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Content Keys</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    <CRow className='mt-2 pb-2'>\r\n                                                        <CCol className='col-9'>\r\n                                                            <CFormInput type='text' name='contentKeys'\r\n                                                                onChange={this.addExt.bind(this, index, \"nonPermitted\",\"contentKeys\")}\r\n                                                                placeholder='Content Keys with comma' />\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                    <CRow>\r\n                                                        {item.nonPermitted.contentKeys.map((c, i) => (\r\n                                                            this.getExt(c, index, i, \"nonPermitted\",\"contentKeys\")\r\n                                                        ))}\r\n                                                    </CRow>\r\n                                                </CCardBody>\r\n                                            </CCard>\r\n                                        </CTabPane>\r\n\r\n                                    </CTabContent>\r\n                                </CCardBody>\r\n                            </CCard>\r\n                        ))}\r\n                </CCardBody>\r\n\r\n\r\n            </CCard>\r\n        )\r\n    }\r\n}\r\nexport default GetRelations","import React, { Component } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { format } from 'date-fns';\r\nimport CreateCollection from './createCollection';\r\nimport CreateRelation from './createRelation';\r\nimport UpdateCollection from './updateCollection';\r\nimport DeleteCollection from './deleteCollection';\r\nimport DeleteRelation from './deleteRelation';\r\nimport Execute from './execute';\r\nimport { ToastContainer, toast,Slide } from 'react-toastify';\r\nimport Popup from '../../../widgets/Popup';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Methods, get, postWithSavedToken } from \"../../../../genetousApi\"\r\nimport {\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CCard,\r\n    CCardBody,\r\n    CRow,\r\n    CCol,\r\n    CCardText,\r\n    CCardTitle,\r\n    CContainer,\r\n    CFormInput,\r\n    CListGroup,\r\n    CListGroupItem,\r\n    CButton,\r\n    CFormSelect,\r\n    CModal,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CModalFooter\r\n} from '@coreui/react'\r\nimport { bool } from 'prop-types';\r\nimport GetCollections from './getCollections';\r\nimport GetRelations from './getRelations';\r\nconst vars = {\r\n    'cursor': \"pointer\",\r\n    \"color\": \"rgba(33, 37, 41,0.8)\",\r\n    \"background-color\": \"#fff\"\r\n}\r\nconst activeLink = {\r\n    'cursor': \"pointer\",\r\n    \"background-color\": \"rgba(33, 37, 41,0.8)\",\r\n    \"color\": \"#fff\"\r\n}\r\nconst dangerIcon = {\r\n    \"color\": \"#c6c6c6\"\r\n}\r\nvar status = -1;\r\nvar message = \"Unexpected Error Occured!\";\r\nvar error = false;\r\nexport class Dataservice extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            permissionItems: [\"Create Collection\", \"Update Collection\", \"Delete Collection\",\r\n                \"Create Relation\", \"Delete Relation\",\"Get Collections\",\"Get Relations\",\"Execute SQL\"],\r\n            collectionCreateRules: [],\r\n            activeKey: 1,\r\n            activeSubKeys: [1, 1, 1, 1, 1],\r\n            subKeys: [],\r\n            redirect: false,\r\n            error: false,\r\n            errroText: \"\",\r\n            sendApp:false,\r\n            error: false,\r\n            status: -1,\r\n            message: \"\",\r\n            lists:[false,false,false,false,false,false,false],\r\n            visible: false,\r\n            yesNoVisible: false,\r\n            yesNoQuestion: \"\",\r\n            arguments: [],\r\n            sendType: \"\"\r\n        };\r\n\r\n        this.handleRedirect = this.handleRedirect.bind(this);\r\n        this.toastShow = this.toastShow.bind(this);\r\n        this.newRuleAdd = this.newRuleAdd.bind(this);\r\n        this.deleteRole = this.deleteRole.bind(this);\r\n        this.addUpdateRule = this.addUpdateRule.bind(this);\r\n        this.getRules = this.getRules.bind(this);\r\n        this.setData=this.setData.bind(this);\r\n\r\n    }\r\n    setActiveKey(key) {\r\n        var l = { ...this.state.lists };\r\n        if(l[this.state.activeKey-1]==false){\r\n            this.setState({ activeKey: key });\r\n        }else{\r\n            this.setYesNoVisible(true, \"Are you sure you want to discard all changes?\", \"cancel\", [key,this.state.activeKey]);\r\n        }\r\n        return false;\r\n    }\r\n    async setData(position,data){\r\n        var l = { ...this.state.lists };\r\n        l[position-1]=data;\r\n        this.setState({lists:l})\r\n    }\r\n    async setYesNoVisible(vis, question, sendType, args, send) {\r\n        if (vis)\r\n            this.setState({ yesNoVisible: vis, yesNoQuestion: question, sendType: sendType, arguments: args });\r\n        else {\r\n            if (send) {\r\n                var st = this.state.sendType;\r\n                switch (st) {\r\n                    case \"cancel\":\r\n                        var l = { ...this.state.lists };\r\n                        l[this.state.arguments[1]-1]=false;\r\n                        await this.setState({ activeKey: this.state.arguments[0],lists:l });\r\n                        break;\r\n                }\r\n            }\r\n            this.setState({ yesNoVisible: vis, yesNoQuestion: \"\", sendType: \"\", arguments: [] });\r\n        }\r\n    }\r\n    handleRedirectApp() {\r\n        if (!this.state.sendApp)\r\n            this.setState({ sendApp: true })\r\n    }\r\n    componentDidMount(){\r\n        var arr=[\"clientId\",\"organizationId\",\"applicationId\"]\r\n        for(var i=0;i<arr.length;++i){\r\n            var key=arr[i];\r\n            if(localStorage.getItem(key)== null || localStorage.getItem(key)==\"\"){\r\n                this.handleRedirect();\r\n                return;\r\n             }\r\n        }\r\n        var arr2=[\"appId\",\"orgId\"]\r\n        for(var i=0;i<arr2.length;++i){\r\n            var key=arr2[i];\r\n            if(localStorage.getItem(key)== null || localStorage.getItem(key)==\"\"){\r\n                this.handleRedirectApp();\r\n                return;\r\n             }\r\n        }\r\n        var now=Date.now()/1000;\r\n        var time=localStorage.getItem(\"timeout\")/1000;\r\n        if((now-time)>3600){\r\n            localStorage.setItem(\"token\",\"\");\r\n            this.handleRedirect();\r\n        }\r\n    }\r\n    toastShow(type, message) {\r\n        switch(type){\r\n            case \"success\":\r\n                toast.success(message, {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 1000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: false,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme: \"dark\",\r\n                    transition: Slide\r\n                });\r\n                break;\r\n            case \"error\":\r\n                toast.error(message, {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 1000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: false,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme: \"dark\",\r\n                    transition: Slide\r\n                });\r\n                break;\r\n            case \"info\":\r\n                toast.info(message, {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 1000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: false,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme: \"dark\",\r\n                    transition: Slide\r\n                });\r\n        }\r\n    }\r\n    handleRedirect(e) {\r\n        if (!this.state.redirect)\r\n            this.setState({ redirect: true })\r\n    }\r\n   \r\n\r\n    \r\n    async newRuleAdd(model) {\r\n        var eleman = document.getElementById(\"newrule\");\r\n        if (!eleman.value) {\r\n            this.toastShow(\"error\",\"Role Name cannot be null or empty!\")\r\n            return false;\r\n        }\r\n        \r\n        var success=true;\r\n        await postWithSavedToken(model, Methods.AddUpdateRules).then(function (result) {\r\n            success=result.success;\r\n            if (result.success == true) {\r\n                message=\"Role Rule Created!\"\r\n            } else {\r\n                message=result.message;\r\n               \r\n            }\r\n        }, err => {\r\n            if (err.status == 401) {\r\n                this.handleRedirect();\r\n            } else {\r\n                success=false;\r\n                message = err.message;\r\n            }\r\n        });\r\n        var type=success?\"success\":\"error\";\r\n        this.toastShow(type, message);\r\n        eleman.value = \"\";\r\n        return true;\r\n    }\r\n    async deleteRole(model) {\r\n        var success = false;\r\n        var message = \"\";\r\n        await postWithSavedToken(model, Methods.DeleteRule).then(function (result) {\r\n            success=result.success\r\n            if (result.success == true) {\r\n                message = \"Role Deleted\"\r\n            } else {\r\n                message = result.message;\r\n            }\r\n        }, err => {\r\n            if (err.status == 401) {\r\n                this.handleRedirect();\r\n            } else {\r\n                success=false;\r\n                message = err.message;\r\n            }\r\n        });\r\n        var type=success?\"success\":\"error\";\r\n        this.toastShow(type, message);\r\n        if (success) {\r\n           return true\r\n        }else{\r\n            return false;\r\n        }\r\n       \r\n    }\r\n    async addUpdateRule(model) {\r\n        console.log(model);\r\n        var message = \"\";\r\n        var success = true;\r\n        await postWithSavedToken(model, Methods.AddUpdateRules).then(function (result) {\r\n            success=result.success;\r\n            if (result.success == true) {\r\n                message = \"Saved!\"\r\n            } else {\r\n                message = result.message;\r\n            }\r\n        }, err => {\r\n            if (err.status == 401) {\r\n                this.handleRedirect();\r\n            } else {\r\n                success=false;\r\n                message = err.message;\r\n            }\r\n        });\r\n        var type=success?\"success\":\"error\";\r\n        this.toastShow(type, message);\r\n    }\r\n    async getRules(model) {\r\n        var data=[]\r\n        var success=true;\r\n        await postWithSavedToken(model, Methods.GetRules).then(function (result) {\r\n            if (result.length > 0 && result[0].hasOwnProperty('roleRules')) {\r\n                data = result;\r\n            }\r\n        }, err => {\r\n            if (err.status == 401) {\r\n                this.handleRedirect();\r\n            } else {\r\n                success=false;\r\n                message = err.message;\r\n            }\r\n        });\r\n        return data;\r\n       \r\n    }\r\n    //////\r\n    render() {\r\n        const { redirect } = this.state;\r\n        const { sendApp } = this.state;\r\n\r\n        if (redirect) {\r\n            return <Redirect to='/login' />;\r\n        }else if(sendApp){\r\n            return <Redirect to='/applications' />;\r\n        }\r\n        return (\r\n            <CContainer className='p-5'>\r\n                <CModal visible={this.state.yesNoVisible} onClose={this.setYesNoVisible.bind(this, false)}>\r\n                        <CModalHeader>\r\n                            <CModalTitle>{this.state.yesNoQuestion}</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalFooter>\r\n                            <CButton color=\"secondary\" onClick={this.setYesNoVisible.bind(this, false, null, null, null, false)}>\r\n                                No\r\n                            </CButton>\r\n                            <CButton color=\"primary\" onClick={this.setYesNoVisible.bind(this, false, null, null, null, true)}>Yes</CButton>\r\n                        </CModalFooter>\r\n                    </CModal>\r\n                <ToastContainer />\r\n                <CRow>\r\n                    <CCol className='col-2'>\r\n                        <CNav className='flex-column' role=\"tablist\" style={vars} >\r\n                            {this.state.permissionItems.map((item, index) => (\r\n                                <CNavItem>\r\n                                    <CNavLink\r\n                                        style={this.state.activeKey === index + 1 ? activeLink : vars}\r\n                                        active={this.state.activeKey === index + 1}\r\n                                        onClick={this.setActiveKey.bind(this, index + 1)}\r\n                                    >\r\n                                        {item}\r\n                                    </CNavLink>\r\n                                </CNavItem>\r\n                            ))}\r\n                        </CNav>\r\n\r\n                    </CCol>\r\n                    <CCol className='col-10 justify-content-center'>\r\n                        <CTabContent>\r\n                            <CTabPane role=\"tabpanel\" aria-labelledby=\"home-tab\" visible={this.state.activeKey === 1}>\r\n                                {this.state.activeKey === 1 &&\r\n                                <CreateCollection service=\"dataservice\"\r\n                                    handleRedirect={this.handleRedirect}\r\n                                    toastShow={this.toastShow}\r\n                                    newRuleAdd={this.newRuleAdd}\r\n                                    deleteRole={this.deleteRole}\r\n                                    addUpdateRule={this.addUpdateRule}\r\n                                    getRules={this.getRules}\r\n                                    method=\"/dataservice/add/collection\"\r\n                                    setData={this.setData}\r\n                                    position={1} />\r\n                                }\r\n                            </CTabPane>\r\n                            <CTabPane role=\"tabpanel\" aria-labelledby=\"profile-tab\" visible={this.state.activeKey === 2}>\r\n                            {this.state.activeKey === 2 &&\r\n                                <UpdateCollection service=\"dataservice\"\r\n                                    handleRedirect={this.handleRedirect}\r\n                                    toastShow={this.toastShow}\r\n                                    newRuleAdd={this.newRuleAdd}\r\n                                    deleteRole={this.deleteRole}\r\n                                    addUpdateRule={this.addUpdateRule}\r\n                                    getRules={this.getRules}\r\n                                    method=\"/dataservice/update/collection\"\r\n                                    setData={this.setData}\r\n                                    position={2} />\r\n                            }\r\n                            </CTabPane>\r\n                            <CTabPane role=\"tabpanel\" aria-labelledby=\"contact-tab\" visible={this.state.activeKey === 3}>\r\n                            {this.state.activeKey === 3 &&\r\n                                <DeleteCollection service=\"dataservice\"\r\n                                    handleRedirect={this.handleRedirect}\r\n                                    toastShow={this.toastShow}\r\n                                    newRuleAdd={this.newRuleAdd}\r\n                                    deleteRole={this.deleteRole}\r\n                                    addUpdateRule={this.addUpdateRule}\r\n                                    getRules={this.getRules}\r\n                                    method=\"/dataservice/delete/collection\"\r\n                                    setData={this.setData}\r\n                                    position={3} />\r\n                            }\r\n                            </CTabPane>\r\n\r\n                            <CTabPane role=\"tabpanel\" aria-labelledby=\"contact-tab\" visible={this.state.activeKey === 4}>\r\n                            {this.state.activeKey === 4 &&\r\n                                <CreateRelation\r\n                                    handleRedirect={this.handleRedirect}\r\n                                    toastShow={this.toastShow}\r\n                                    newRuleAdd={this.newRuleAdd}\r\n                                    deleteRole={this.deleteRole}\r\n                                    addUpdateRule={this.addUpdateRule}\r\n                                    getRules={this.getRules}\r\n                                    setData={this.setData}\r\n                                    position={4}  />\r\n                            }\r\n                            </CTabPane>\r\n                            <CTabPane role=\"tabpanel\" aria-labelledby=\"contact-tab\" visible={this.state.activeKey === 5}>\r\n                            {this.state.activeKey === 5 &&\r\n                                <DeleteRelation\r\n                                    handleRedirect={this.handleRedirect}\r\n                                    toastShow={this.toastShow}\r\n                                    newRuleAdd={this.newRuleAdd}\r\n                                    deleteRole={this.deleteRole}\r\n                                    addUpdateRule={this.addUpdateRule}\r\n                                    getRules={this.getRules}\r\n                                    setData={this.setData}\r\n                                    position={5}   />\r\n                            }\r\n                            </CTabPane>\r\n                            <CTabPane role=\"tabpanel\" aria-labelledby=\"contact-tab\" visible={this.state.activeKey === 6}>\r\n                            {this.state.activeKey === 6 &&\r\n                                <GetCollections\r\n                                    handleRedirect={this.handleRedirect}\r\n                                    toastShow={this.toastShow}\r\n                                    newRuleAdd={this.newRuleAdd}\r\n                                    deleteRole={this.deleteRole}\r\n                                    addUpdateRule={this.addUpdateRule}\r\n                                    getRules={this.getRules}\r\n                                    setData={this.setData}\r\n                                    position={6}\r\n                                    data={this.state.lists[5]}  />\r\n                            }\r\n                            </CTabPane>\r\n                            <CTabPane role=\"tabpanel\" aria-labelledby=\"contact-tab\" visible={this.state.activeKey === 7}>\r\n                            {this.state.activeKey === 7 &&\r\n                                <GetRelations\r\n                                    handleRedirect={this.handleRedirect}\r\n                                    toastShow={this.toastShow}\r\n                                    newRuleAdd={this.newRuleAdd}\r\n                                    deleteRole={this.deleteRole}\r\n                                    addUpdateRule={this.addUpdateRule}\r\n                                    getRules={this.getRules}\r\n                                    setData={this.setData}\r\n                                    position={7}  />\r\n                            }\r\n                            </CTabPane>\r\n                            <CTabPane role=\"tabpanel\" aria-labelledby=\"contact-tab\" visible={this.state.activeKey === 8}>\r\n                            {this.state.activeKey === 8 &&\r\n                                <Execute\r\n                                    handleRedirect={this.handleRedirect}\r\n                                    toastShow={this.toastShow}\r\n                                    newRuleAdd={this.newRuleAdd}\r\n                                    deleteRole={this.deleteRole}\r\n                                    addUpdateRule={this.addUpdateRule}\r\n                                    getRules={this.getRules}\r\n                                    setData={this.setData}\r\n                                    position={8}  />\r\n                            }\r\n                            </CTabPane>\r\n                        </CTabContent>\r\n                    </CCol>\r\n                </CRow>\r\n\r\n            </CContainer>\r\n        )\r\n    }\r\n}\r\nexport default Dataservice","export const cilPlus = [\"512 512\",\"<polygon fill='var(--ci-primary-color, currentColor)' points='440 240 272 240 272 72 240 72 240 240 72 240 72 272 240 272 240 440 272 440 272 272 440 272 440 240' class='ci-primary'/>\"]"],"names":["vars","dangerIcon","fRight","cardText","arrayLabels","CreateCollection","Component","constructor","props","super","this","state","collectionCreateRules","activeKey","activeSubKeys","subKeys","changedTypes","visible","yesNoVisible","yesNoQuestion","arguments","sendType","addRoleSpinner","compare","setSubActiveKey","key","id","index","findIndex","x","setState","getSubActiveKey","e","componentDidMount","getCreateCollectionRules","async","model","organizationId","localStorage","getItem","applicationId","service","methodContentType","methodType","d","getRules","sk","length","roleRules","permissions","map","m","data","_id","push","getValueType","val","Array","isArray","getContentData","item","permIndex","collectionIndex","type","_jsxs","children","Object","keys","_jsx","CRow","className","CCol","CButton","color","onClick","addNewContentDataSub","bind","CIcon","style","icon","k","i","CFormSelect","onChange","eqChanged","value","name","CFormInput","changeContentDataSubKey","placeholder","indexOf","typeChanged","disabled","removeContentDataSubKey","class","getArrayItems","removeContentDataSubKeyArray","keyIndex","collection","collections","newContentData","contentData","ki","target","arr","getValueAsArrayByType","setData","position","convert","splice","eleman","document","getElementById","toString","isNaN","trim","removeContentDataKey","changeContentDataKey","changeCollectionName","changeNonPermittedCollectionName","addNewContentData","addNewCollection","collectionName","contentKeys","removeCollection","changeCK","removeContentKeys","getContentKeysItems","getValueAsArray","split","arrElems","parseInt","toastShow","rule","rls","method","rules","addUpdateRule","vis","question","args","send","setVisible","deleteRole","role","permitted","nonPermitted","newRuleAdd","render","CCard","CCardTitle","setYesNoVisible","CModal","onClose","CModalHeader","CModalTitle","CModalBody","CModalFooter","CSpinner","component","size","variant","hidden","CCardBody","CNav","CNavItem","CNavLink","active","CTabContent","CTabPane","CCardHeader","c","CCardFooter","CreateRelation","relationCreateRules","getCreateRelationRules","addNewMainSub","mainSub","main","sub","removeMainSub","mainCollectionChange","mainSubIndex","changeSub","getMainSubItems","valIndex","removeSub","s","si","UpdateCollection","getUpdateCollectionRules","DeleteCollection","getDeleteCollectionRules","DeleteRelation","relationDeleteRules","getDeleteRelationRules","Execute","executeRules","getDataServiceRules","select","update","delete","insert","with","upsert","drop","changed","checked","CFormCheck","label","charAt","toUpperCase","slice","GetCollections","getCollectionRules","setSubKey","collectionNames","addExt","getExt","collectionNameIndex","md","removeExt","GetRelations","getRelationsRules","relationNames","activeLink","message","Dataservice","permissionItems","redirect","error","errroText","sendApp","status","lists","handleRedirect","setActiveKey","l","handleRedirectApp","arr2","Date","now","setItem","toast","success","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","theme","transition","Slide","info","postWithSavedToken","Methods","AddUpdateRules","then","result","err","DeleteRule","console","log","GetRules","hasOwnProperty","Redirect","to","CContainer","ToastContainer","cilPlus"],"sourceRoot":""}