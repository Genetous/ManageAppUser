{"version":3,"file":"static/js/129.302ea9fc.chunk.js","mappings":"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","sources":["views/others/rules/oss/upload.js","views/others/rules/oss/secureDownload.js","views/others/rules/oss/osService.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport CIcon from '@coreui/icons-react';\r\nimport * as icon from '@coreui/icons';\r\nimport { Link } from 'react-router-dom'\r\nimport { format } from 'date-fns';\r\nimport { ToastContainer, toast,Slide } from 'react-toastify';\r\nimport Popup from '../../../widgets/Popup';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CCard,\r\n    CCardBody,\r\n    CRow,\r\n    CCol,\r\n    CCardTitle,\r\n    CFormInput,\r\n    CButton,\r\n    CFormSelect,\r\n    CModal,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CFormCheck,\r\n    CCardHeader,\r\n} from '@coreui/react'\r\nimport { bool } from 'prop-types';\r\nconst vars = {\r\n    'cursor': \"pointer\",\r\n    \"color\": \"rgb(33, 37, 41)\",\r\n    \"background-color\": \"#fff\"\r\n}\r\nconst activeLink = {\r\n    'cursor': \"pointer\",\r\n    \"background-color\": \"rgb(33, 37, 41)\",\r\n    \"color\": \"#fff\"\r\n}\r\nconst dangerIcon = {\r\n    \"color\": \"#f7f2f2\"\r\n}\r\nconst fRight = {\r\n    \"float\": \"right\"\r\n}\r\nconst cardText = { \"height\": \"620px\", \"overflow-y\": \"scroll\" }\r\nconst arrayLabels = [\"not\", \"in\"]\r\nexport class Upload extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            uploadRules: [],\r\n            activeKey: 1,\r\n            activeSubKeys: [1, 1, 1, 1, 1],\r\n            subKeys: [],\r\n            changedTypes: [],\r\n            visible: false,\r\n            yesNoVisible: false,\r\n            yesNoQuestion: \"\",\r\n            arguments: [],\r\n            sendType: \"\"\r\n\r\n        }\r\n    }\r\n\r\n    setSubActiveKey(key, id) {\r\n        const { subKeys } = this.state;\r\n        var index = subKeys.findIndex(x => x.id === id);\r\n        subKeys[index].activeKey = key;\r\n        this.setState({ subKeys });\r\n        return false;\r\n    }\r\n    getSubActiveKey(e, key, id) {\r\n        const { subKeys } = this.state;\r\n        var index = subKeys.findIndex(x => x.id === id);\r\n        return key == subKeys[index].activeKey\r\n    }\r\n    componentDidMount() {\r\n        this.getUploadRules();\r\n    }\r\n    async getUploadRules() {\r\n        var orgId = localStorage.getItem('orgId')\r\n        var appId = localStorage.getItem('appId')\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            service: \"osService\",\r\n            methodContentType: \"other\",\r\n            methodType: \"upload\"\r\n        }\r\n        var d = { ...this.state.uploadRules };\r\n        d = await this.props.getRules(model);\r\n        var sk = [];\r\n        if (d.length > 0) {\r\n            var rr = d[0];\r\n            rr.roleRules.permissions.map(m => {\r\n                var data = {\r\n                    id: m._id,\r\n                    activeKey: 1\r\n                }\r\n                sk.push(data);\r\n            })\r\n        }\r\n\r\n        this.setState({ uploadRules: d, subKeys: sk });\r\n    }\r\n    setVisible(vis) {\r\n        this.setState({ visible: vis });\r\n    }\r\n    async setYesNoVisible(vis, question, sendType, args, send) {\r\n        if (vis)\r\n            this.setState({ yesNoVisible: vis, yesNoQuestion: question, sendType: sendType, arguments: args });\r\n        else {\r\n            if (send) {\r\n                var st = this.state.sendType;\r\n                switch (st) {\r\n                    case \"deleteRole\":\r\n                        await this.deleteRole(this.state.arguments);\r\n                        break;\r\n                    case \"saveAll\":\r\n                        await this.addUpdateRule();\r\n                        break;\r\n                }\r\n            }\r\n            this.setState({ yesNoVisible: vis, yesNoQuestion: \"\", sendType: \"\", arguments: [] });\r\n        }\r\n    }\r\n    async newRuleAdd() {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var eleman = document.getElementById(\"newrule\");\r\n        if (!eleman.value) {\r\n            this.props.toastShow(\"error\",\"Role Name cannot be null or empty!\")\r\n            return false;\r\n        }\r\n        var orgId = localStorage.getItem(\"orgId\");\r\n        var appId = localStorage.getItem(\"appId\");\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            rules: [\r\n                {\r\n                    method: \"/osservice/upload\",\r\n                    methodType: \"upload\",\r\n                    methodContentType: \"other\",\r\n                    service: \"osService\",\r\n                    permissions: [{\r\n                        role: eleman.value,\r\n                        permitted: {\r\n                            extensions: []\r\n                        },\r\n                        nonPermitted: {\r\n                            extensions: []\r\n                        }\r\n                    }]\r\n                }\r\n            ]\r\n        }\r\n        await this.props.newRuleAdd(model);\r\n        this.getUploadRules();\r\n    }\r\n    async addUpdateRule() {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var uploadRules = [...this.state.uploadRules]\r\n        var rule = uploadRules[0].roleRules;\r\n        var rls = {\r\n            method: rule.method,\r\n            methodType: rule.methodType,\r\n            methodContentType: rule.methodContentType,\r\n            service: rule.service,\r\n            permissions: rule.permissions\r\n        }\r\n        var orgId = localStorage.getItem(\"orgId\");\r\n        var appId = localStorage.getItem(\"appId\");\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            rules: [rls]\r\n        }\r\n        this.props.addUpdateRule(model);\r\n    }\r\n    async deleteRole(args) {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var id = args[0];\r\n        var index = args[1];\r\n        var orgId = localStorage.getItem('orgId')\r\n        var appId = localStorage.getItem('appId')\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            id: id\r\n        }\r\n        var success = await this.props.deleteRole(model);\r\n      \r\n        if (success) {\r\n            var uploadRules = [...this.state.uploadRules]\r\n            var permissions = uploadRules[0].roleRules.permissions;\r\n            permissions.splice(index, 1);\r\n            this.setState({ uploadRules });\r\n        }\r\n    }\r\n    addExt(permIndex, type, e) {\r\n        var uploadRules = [...this.state.uploadRules]\r\n        var collection = uploadRules[0].roleRules.permissions[permIndex][type].extensions;\r\n        if (e.target.value.toString().indexOf(\",\") >= 0) {\r\n            var arr = this.getValueAsArrayByType(e.target.value, \"string\");\r\n            if (arr[0] && collection.indexOf(arr[0]) < 0) {\r\n                collection.push(arr[0]);\r\n            }\r\n            e.target.value = \"\";\r\n        }\r\n        this.setState({ uploadRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    getExt(val, permIndex, extensionIndex, type) {\r\n        return (\r\n            <p className=\"p-1 rounded border border-primary text-primary\">{val}\r\n                <span style={fRight}> <button type=\"button\"\r\n                    onClick={this.removeExt.bind(this, permIndex, extensionIndex, type)}\r\n                    class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n            </p>\r\n        )\r\n    }\r\n    removeExt(permIndex, extensionIndex, type, e) {\r\n        var uploadRules = [...this.state.uploadRules]\r\n        var collection = uploadRules[0].roleRules.permissions[permIndex][type].extensions\r\n        collection.splice(extensionIndex, 1);\r\n        this.setState({ uploadRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    getValueAsArrayByType(val, type) {\r\n        var arr = []\r\n        var d = val.toString();\r\n        var ind = d.indexOf(',');\r\n        if (ind >= 0) {\r\n            var arrElems = val.split(\",\");\r\n            switch (type) {\r\n                case \"string\":\r\n                    arr = arrElems;\r\n                    break;\r\n                case \"number\":\r\n                    arrElems.map((item) => {\r\n                        arr.push(parseInt(item));\r\n                    });\r\n            }\r\n        }\r\n        else {\r\n            switch (type) {\r\n                case \"string\":\r\n                    if (val) {\r\n                        arr.push(val)\r\n                    }\r\n                    break;\r\n                case \"number\":\r\n                    if (!isNaN(val)) {\r\n                        arr.push(val)\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return arr;\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <CCard>\r\n                <CRow className='m-2 border-bottom d-flex align-items-center'>\r\n                    <CCol className='col-8 pb-2'>\r\n                        <CCardTitle>Add/Update <b>\"Object Storage Service Upload\"</b> Permissions</CCardTitle>\r\n                    </CCol>\r\n                    <CCol className='col-4 d-grid gap-2 d-md-flex justify-content-md-end pb-2'>\r\n                        <CButton color='secondary' onClick={this.setVisible.bind(this, true)}>Add New Role</CButton>\r\n                        <CButton color='info' style={{\"color\":\"#fff\"}}\r\n                            onClick={this.setYesNoVisible.bind(this, true, \"Are you sure you want to save all?\", \"saveAll\", [this])}>Save All</CButton>\r\n                    </CCol>\r\n\r\n                    <CModal visible={this.state.visible} onClose={this.setVisible.bind(this, false)}>\r\n                        <CModalHeader>\r\n                            <CModalTitle>Add New Role</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalBody>\r\n                            <CFormInput type='text' placeholder='Role Name' name=\"newRule\" id=\"newrule\" />\r\n                        </CModalBody>\r\n                        <CModalFooter>\r\n                            <CButton color=\"secondary\" onClick={this.setVisible.bind(this, false)}>\r\n                                Close\r\n                            </CButton>\r\n                            <CButton color=\"primary\" onClick={this.newRuleAdd.bind(this)}>Create Role</CButton>\r\n                        </CModalFooter>\r\n                    </CModal>\r\n                    <CModal visible={this.state.yesNoVisible} onClose={this.setYesNoVisible.bind(this, false)}>\r\n                        <CModalHeader>\r\n                            <CModalTitle>{this.state.yesNoQuestion}</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalFooter>\r\n                            <CButton color=\"secondary\" onClick={this.setYesNoVisible.bind(this, false, null, null, null, false)}>\r\n                                No\r\n                            </CButton>\r\n                            <CButton color=\"primary\" onClick={this.setYesNoVisible.bind(this, false, null, null, null, true)}>Yes</CButton>\r\n                        </CModalFooter>\r\n                    </CModal>\r\n                </CRow>\r\n                <CCardBody style={cardText}>\r\n\r\n                    {this.state.uploadRules.length > 0 &&\r\n\r\n                        this.state.uploadRules[0].roleRules.permissions.map((item, index) => (\r\n                            <CCard className='mt-1'>\r\n                                <CCardBody>\r\n                                    <CCardTitle><b>\"{item.role}\"</b> Rules  <span style={fRight}>\r\n                                        <CButton color='danger'\r\n                                            onClick={this.setYesNoVisible.bind(this, true, \"Are you sure you want to delete \" + item.role + \" role?\", \"deleteRole\", [item._id, index, this])}\r\n                                            //onClick={this.deleteRole.bind(this,item._id,index)}\r\n                                            style={dangerIcon}>Delete Role</CButton></span></CCardTitle>\r\n                                    <CNav variant=\"tabs\" className='mt-4' role=\"tablist\" style={vars} >\r\n                                        <CNavItem>\r\n                                            <CNavLink\r\n                                                style={vars}\r\n                                                active={this.getSubActiveKey(this, 1, item._id)}\r\n                                                onClick={this.setSubActiveKey.bind(this, 1, item._id)}\r\n                                            >\r\n                                                Permitted\r\n                                            </CNavLink>\r\n                                        </CNavItem>\r\n                                        <CNavItem>\r\n                                            <CNavLink\r\n                                                style={vars}\r\n                                                active={this.getSubActiveKey(this, 2, item._id)}\r\n                                                onClick={this.setSubActiveKey.bind(this, 2, item._id)}\r\n                                            >\r\n                                                Non-Permitted\r\n                                            </CNavLink>\r\n                                        </CNavItem>\r\n\r\n                                    </CNav>\r\n                                    <CTabContent>\r\n                                        <CTabPane role=\"tabpanel\" className='p-3' aria-labelledby=\"home-tab\" visible={this.getSubActiveKey(this, 1, item._id)}>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Extensions</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    <CRow className='mt-2 pb-2'>\r\n                                                        <CCol className='col-9'>\r\n                                                            <CFormInput type='text' name='extension'\r\n                                                                onChange={this.addExt.bind(this, index, \"permitted\")}\r\n                                                                placeholder='Extensions with comma' />\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                    <CRow className='mt-2'>\r\n                                                        {item.permitted.extensions.map((c, i) => (\r\n                                                            <CCol className='col-3'>\r\n                                                                {this.getExt(c, index, i, \"permitted\")}\r\n                                                            </CCol>\r\n\r\n                                                        ))}\r\n\r\n                                                    </CRow>\r\n                                                </CCardBody>\r\n                                            </CCard>\r\n                                        </CTabPane>\r\n                                        <CTabPane role=\"tabpanel\" className='p-3' aria-labelledby=\"profile-tab\" visible={this.getSubActiveKey(this, 2, item._id)}>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Extensions</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    <CRow className='mt-2 pb-2'>\r\n                                                        <CCol className='col-9'>\r\n                                                            <CFormInput type='text' name='extension'\r\n                                                                onChange={this.addExt.bind(this, index, \"nonPermitted\")}\r\n                                                                placeholder='Extensions with comma' />\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                    <CRow className='mt-2'>\r\n                                                        {item.nonPermitted.extensions.map((c, i) => (\r\n                                                            <CCol className='col-3'>\r\n                                                                {this.getExt(c, index, i, \"nonPermitted\")}\r\n                                                            </CCol>\r\n\r\n                                                        ))}\r\n\r\n                                                    </CRow>\r\n                                                </CCardBody>\r\n                                            </CCard>\r\n                                        </CTabPane>\r\n\r\n                                    </CTabContent>\r\n                                </CCardBody>\r\n                            </CCard>\r\n                        ))}\r\n                </CCardBody>\r\n\r\n\r\n            </CCard>\r\n        )\r\n    }\r\n}\r\nexport default Upload","import React, { Component } from 'react';\r\nimport { format } from 'date-fns';\r\nimport { ToastContainer, toast,Slide } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CCard,\r\n    CCardBody,\r\n    CRow,\r\n    CCol,\r\n    CCardTitle,\r\n    CFormInput,\r\n    CButton,\r\n    CFormSelect,\r\n    CModal,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CFormCheck,\r\n    CCardHeader,\r\n} from '@coreui/react'\r\nimport { bool } from 'prop-types';\r\nconst vars = {\r\n    'cursor': \"pointer\",\r\n    \"color\": \"rgb(33, 37, 41)\",\r\n    \"background-color\": \"#fff\"\r\n}\r\nconst activeLink = {\r\n    'cursor': \"pointer\",\r\n    \"background-color\": \"rgb(33, 37, 41)\",\r\n    \"color\": \"#fff\"\r\n}\r\nconst dangerIcon = {\r\n    \"color\": \"#f7f2f2\"\r\n}\r\nconst fRight = {\r\n    \"float\": \"right\"\r\n}\r\nconst cardText = { \"height\": \"620px\", \"overflow-y\": \"scroll\" }\r\nconst arrayLabels = [\"not\", \"in\"]\r\nexport class SecureDownload extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            secureDownloadRules: [],\r\n            activeKey: 1,\r\n            activeSubKeys: [1, 1, 1, 1, 1],\r\n            subKeys: [],\r\n            changedTypes: [],\r\n            visible: false,\r\n            yesNoVisible: false,\r\n            yesNoQuestion: \"\",\r\n            arguments: [],\r\n            sendType: \"\"\r\n\r\n        }\r\n    }\r\n\r\n    setSubActiveKey(key, id) {\r\n        const { subKeys } = this.state;\r\n        var index = subKeys.findIndex(x => x.id === id);\r\n        subKeys[index].activeKey = key;\r\n        this.setState({ subKeys });\r\n        return false;\r\n    }\r\n    getSubActiveKey(e, key, id) {\r\n        const { subKeys } = this.state;\r\n        var index = subKeys.findIndex(x => x.id === id);\r\n        return key == subKeys[index].activeKey\r\n    }\r\n    componentDidMount() {\r\n        this.getsecureDownloadRules();\r\n    }\r\n    async getsecureDownloadRules() {\r\n        var orgId = localStorage.getItem('orgId')\r\n        var appId = localStorage.getItem('appId')\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            service: \"osService\",\r\n            methodContentType: \"other\",\r\n            methodType: \"download\"\r\n        }\r\n        var d = { ...this.state.secureDownloadRules };\r\n        d = await this.props.getRules(model);\r\n        var sk = [];\r\n        if (d.length > 0) {\r\n            var rr = d[0];\r\n            rr.roleRules.permissions.map(m => {\r\n                var data = {\r\n                    id: m._id,\r\n                    activeKey: 1\r\n                }\r\n                sk.push(data);\r\n            })\r\n        }\r\n\r\n        this.setState({ secureDownloadRules: d, subKeys: sk });\r\n    }\r\n    setVisible(vis) {\r\n        this.setState({ visible: vis });\r\n    }\r\n    async setYesNoVisible(vis, question, sendType, args, send) {\r\n        if (vis)\r\n            this.setState({ yesNoVisible: vis, yesNoQuestion: question, sendType: sendType, arguments: args });\r\n        else {\r\n            if (send) {\r\n                var st = this.state.sendType;\r\n                switch (st) {\r\n                    case \"deleteRole\":\r\n                        await this.deleteRole(this.state.arguments);\r\n                        break;\r\n                    case \"saveAll\":\r\n                        await this.addUpdateRule();\r\n                        break;\r\n                }\r\n            }\r\n            this.setState({ yesNoVisible: vis, yesNoQuestion: \"\", sendType: \"\", arguments: [] });\r\n        }\r\n    }\r\n    async newRuleAdd() {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var eleman = document.getElementById(\"newrule\");\r\n        if (!eleman.value) {\r\n            this.props.toastShow(\"error\",\"Role Name cannot be null or empty!\")\r\n            return false;\r\n        }\r\n        var orgId = localStorage.getItem(\"orgId\");\r\n        var appId = localStorage.getItem(\"appId\");\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            rules: [\r\n                {\r\n                    method: \"/osservice/download/secure\",\r\n                    methodType: \"download\",\r\n                    methodContentType: \"other\",\r\n                    service: \"osService\",\r\n                    permissions: [{\r\n                        role: eleman.value,\r\n                        permitted: {\r\n                            extensions: [],\r\n                            fileNames: []\r\n                        },\r\n                        nonPermitted: {\r\n                            extensions: [],\r\n                            fileNames: []\r\n                        }\r\n                    }]\r\n                }\r\n            ]\r\n        }\r\n        await this.props.newRuleAdd(model);\r\n        this.getsecureDownloadRules();\r\n    }\r\n    async addUpdateRule() {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var secureDownloadRules = [...this.state.secureDownloadRules]\r\n        var rule = secureDownloadRules[0].roleRules;\r\n        var rls = {\r\n            method: rule.method,\r\n            methodType: rule.methodType,\r\n            methodContentType: rule.methodContentType,\r\n            service: rule.service,\r\n            permissions: rule.permissions\r\n        }\r\n        var orgId = localStorage.getItem(\"orgId\");\r\n        var appId = localStorage.getItem(\"appId\");\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            rules: [rls]\r\n        }\r\n        await this.props.addUpdateRule(model);\r\n    }\r\n    async deleteRole(args) {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var id = args[0];\r\n        var index = args[1];\r\n        var orgId = localStorage.getItem('orgId')\r\n        var appId = localStorage.getItem('appId')\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            id: id\r\n        }\r\n        var success = await this.props.deleteRole(model);\r\n        if (success) {\r\n            var secureDownloadRules = [...this.state.secureDownloadRules]\r\n            var permissions = secureDownloadRules[0].roleRules.permissions;\r\n            permissions.splice(index, 1);\r\n            this.setState({ secureDownloadRules });\r\n        }\r\n    }\r\n    addExt(permIndex, type, e) {\r\n        var secureDownloadRules = [...this.state.secureDownloadRules]\r\n        var collection = secureDownloadRules[0].roleRules.permissions[permIndex][type].extensions;\r\n        if (e.target.value.toString().indexOf(\",\") >= 0) {\r\n            var arr = this.getValueAsArrayByType(e.target.value, \"string\");\r\n            if (arr[0] && collection.indexOf(arr[0]) < 0) {\r\n                collection.push(arr[0]);\r\n            }\r\n            e.target.value = \"\";\r\n        }\r\n        this.setState({ secureDownloadRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    getExt(val, permIndex, extensionIndex, type) {\r\n        return (\r\n            <p className=\"p-1 rounded border border-primary text-primary\">{val}\r\n                <span style={fRight}> <button type=\"button\"\r\n                    onClick={this.removeExt.bind(this, permIndex, extensionIndex, type)}\r\n                    class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n            </p>\r\n        )\r\n    }\r\n    removeExt(permIndex, extensionIndex, type, e) {\r\n        var secureDownloadRules = [...this.state.secureDownloadRules]\r\n        var collection = secureDownloadRules[0].roleRules.permissions[permIndex][type].extensions\r\n        collection.splice(extensionIndex, 1);\r\n        this.setState({ secureDownloadRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    addFN(permIndex, type, e) {\r\n        var secureDownloadRules = [...this.state.secureDownloadRules]\r\n        var collection = secureDownloadRules[0].roleRules.permissions[permIndex][type].fileNames;\r\n        if (e.target.value.toString().indexOf(\",\") >= 0) {\r\n            var arr = this.getValueAsArrayByType(e.target.value, \"string\");\r\n            if (arr[0] && collection.indexOf(arr[0]) < 0) {\r\n                collection.push(arr[0]);\r\n            }\r\n            e.target.value = \"\";\r\n        }\r\n        this.setState({ secureDownloadRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    getFN(val, permIndex, fileIndex, type) {\r\n        return (\r\n            <p className=\"p-1 rounded border border-primary text-primary\">{val}\r\n                <span style={fRight}> <button type=\"button\"\r\n                    onClick={this.removeFN.bind(this, permIndex, fileIndex, type)}\r\n                    class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n            </p>\r\n        )\r\n    }\r\n    removeFN(permIndex, fileIndex, type, e) {\r\n        var secureDownloadRules = [...this.state.secureDownloadRules]\r\n        var collection = secureDownloadRules[0].roleRules.permissions[permIndex][type].fileNames\r\n        collection.splice(fileIndex, 1);\r\n        this.setState({ secureDownloadRules });\r\n        this.props.setData(this.props.position, true);\r\n    }\r\n    getValueAsArrayByType(val, type) {\r\n        var arr = []\r\n        var d = val.toString();\r\n        var ind = d.indexOf(',');\r\n        if (ind >= 0) {\r\n            var arrElems = val.split(\",\");\r\n            switch (type) {\r\n                case \"string\":\r\n                    arr = arrElems;\r\n                    break;\r\n                case \"number\":\r\n                    arrElems.map((item) => {\r\n                        arr.push(parseInt(item));\r\n                    });\r\n            }\r\n        }\r\n        else {\r\n            switch (type) {\r\n                case \"string\":\r\n                    if (val) {\r\n                        arr.push(val)\r\n                    }\r\n                    break;\r\n                case \"number\":\r\n                    if (!isNaN(val)) {\r\n                        arr.push(val)\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return arr;\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <CCard>\r\n                \r\n                <CRow className='m-2 border-bottom d-flex align-items-center'>\r\n                    <CCol className='col-8 pb-2'>\r\n                        <CCardTitle>Add/Update <b>\"Object Storage Service Upload\"</b> Permissions</CCardTitle>\r\n                    </CCol>\r\n                    <CCol className='col-4 d-grid gap-2 d-md-flex justify-content-md-end pb-2'>\r\n                        <CButton color='secondary' onClick={this.setVisible.bind(this, true)}>Add New Role</CButton>\r\n                        <CButton color='info' style={{\"color\":\"#fff\"}}\r\n                            onClick={this.setYesNoVisible.bind(this, true, \"Are you sure you want to save all?\", \"saveAll\", [this])}>Save All</CButton>\r\n                    </CCol>\r\n\r\n                    <CModal visible={this.state.visible} onClose={this.setVisible.bind(this, false)}>\r\n                        <CModalHeader>\r\n                            <CModalTitle>Add New Role</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalBody>\r\n                            <CFormInput type='text' placeholder='Role Name' name=\"newRule\" id=\"newrule\" />\r\n                        </CModalBody>\r\n                        <CModalFooter>\r\n                            <CButton color=\"secondary\" onClick={this.setVisible.bind(this, false)}>\r\n                                Close\r\n                            </CButton>\r\n                            <CButton color=\"primary\" onClick={this.newRuleAdd.bind(this)}>Create Role</CButton>\r\n                        </CModalFooter>\r\n                    </CModal>\r\n                    <CModal visible={this.state.yesNoVisible} onClose={this.setYesNoVisible.bind(this, false)}>\r\n                        <CModalHeader>\r\n                            <CModalTitle>{this.state.yesNoQuestion}</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalFooter>\r\n                            <CButton color=\"secondary\" onClick={this.setYesNoVisible.bind(this, false, null, null, null, false)}>\r\n                                No\r\n                            </CButton>\r\n                            <CButton color=\"primary\" onClick={this.setYesNoVisible.bind(this, false, null, null, null, true)}>Yes</CButton>\r\n                        </CModalFooter>\r\n                    </CModal>\r\n                </CRow>\r\n                <CCardBody style={cardText}>\r\n\r\n                    {this.state.secureDownloadRules.length > 0 &&\r\n\r\n                        this.state.secureDownloadRules[0].roleRules.permissions.map((item, index) => (\r\n                            <CCard className='mt-1'>\r\n                                <CCardBody>\r\n                                    <CCardTitle><b>\"{item.role}\"</b> Rules  <span style={fRight}>\r\n                                        <CButton color='danger'\r\n                                            onClick={this.setYesNoVisible.bind(this, true, \"Are you sure you want to delete \" + item.role + \" role?\", \"deleteRole\", [item._id, index, this])}\r\n                                            //onClick={this.deleteRole.bind(this,item._id,index)}\r\n                                            style={dangerIcon}>Delete Role</CButton></span></CCardTitle>\r\n                                    <CNav variant=\"tabs\" className='mt-4' role=\"tablist\" style={vars} >\r\n                                        <CNavItem>\r\n                                            <CNavLink\r\n                                                style={vars}\r\n                                                active={this.getSubActiveKey(this, 1, item._id)}\r\n                                                onClick={this.setSubActiveKey.bind(this, 1, item._id)}\r\n                                            >\r\n                                                Permitted\r\n                                            </CNavLink>\r\n                                        </CNavItem>\r\n                                        <CNavItem>\r\n                                            <CNavLink\r\n                                                style={vars}\r\n                                                active={this.getSubActiveKey(this, 2, item._id)}\r\n                                                onClick={this.setSubActiveKey.bind(this, 2, item._id)}\r\n                                            >\r\n                                                Non-Permitted\r\n                                            </CNavLink>\r\n                                        </CNavItem>\r\n\r\n                                    </CNav>\r\n                                    <CTabContent>\r\n                                        <CTabPane role=\"tabpanel\" className='p-3' aria-labelledby=\"home-tab\" visible={this.getSubActiveKey(this, 1, item._id)}>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Extensions</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    <CRow className='mt-2 pb-2'>\r\n                                                        <CCol className='col-9'>\r\n                                                            <CFormInput type='text' name='extension'\r\n                                                                onChange={this.addExt.bind(this, index, \"permitted\")}\r\n                                                                placeholder='Extensions with comma' />\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                    <CRow className='mt-2'>\r\n                                                        {item.permitted.extensions.map((c, i) => (\r\n                                                            <CCol className='col-3'>\r\n                                                                {this.getExt(c, index, i, \"permitted\")}\r\n                                                            </CCol>\r\n\r\n                                                        ))}\r\n\r\n                                                    </CRow>\r\n                                                </CCardBody>\r\n                                            </CCard>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>FileNames</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    <CRow className='mt-2 pb-2'>\r\n                                                        <CCol className='col-9'>\r\n                                                            <CFormInput type='text' name='fileName'\r\n                                                                onChange={this.addFN.bind(this, index, \"permitted\")}\r\n                                                                placeholder='FileNames.extension with comma (ex:xx.zip,)' />\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                    <CRow className='mt-2'>\r\n                                                        {item.permitted.fileNames.map((c, i) => (\r\n                                                            <CCol className='col-3'>\r\n                                                                {this.getFN(c, index, i, \"permitted\")}\r\n                                                            </CCol>\r\n\r\n                                                        ))}\r\n\r\n                                                    </CRow>\r\n                                                </CCardBody>\r\n                                            </CCard>\r\n                                        </CTabPane>\r\n                                        <CTabPane role=\"tabpanel\" className='p-3' aria-labelledby=\"profile-tab\" visible={this.getSubActiveKey(this, 2, item._id)}>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Extensions</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    <CRow className='mt-2 pb-2'>\r\n                                                        <CCol className='col-9'>\r\n                                                            <CFormInput type='text' name='extension'\r\n                                                                onChange={this.addExt.bind(this, index, \"nonPermitted\")}\r\n                                                                placeholder='Extensions with comma' />\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                    <CRow className='mt-2'>\r\n                                                        {item.nonPermitted.extensions.map((c, i) => (\r\n                                                            <CCol className='col-3'>\r\n                                                                {this.getExt(c, index, i, \"nonPermitted\")}\r\n                                                            </CCol>\r\n\r\n                                                        ))}\r\n\r\n                                                    </CRow>\r\n                                                </CCardBody>\r\n                                            </CCard>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>FileNames</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    <CRow className='mt-2 pb-2'>\r\n                                                        <CCol className='col-9'>\r\n                                                            <CFormInput type='text' name='fileName'\r\n                                                                onChange={this.addFN.bind(this, index, \"nonPermitted\")}\r\n                                                                placeholder='FileNames.extension with comma (ex:xx.zip,)' />\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                    <CRow className='mt-2'>\r\n                                                        {item.nonPermitted.fileNames.map((c, i) => (\r\n                                                            <CCol className='col-3'>\r\n                                                                {this.getFN(c, index, i, \"nonPermitted\")}\r\n                                                            </CCol>\r\n\r\n                                                        ))}\r\n\r\n                                                    </CRow>\r\n                                                </CCardBody>\r\n                                            </CCard>\r\n                                        </CTabPane>\r\n\r\n                                    </CTabContent>\r\n                                </CCardBody>\r\n                            </CCard>\r\n                        ))}\r\n                </CCardBody>\r\n\r\n\r\n            </CCard>\r\n        )\r\n    }\r\n}\r\nexport default SecureDownload","import React, { Component } from 'react';\r\nimport CIcon from '@coreui/icons-react';\r\nimport * as icon from '@coreui/icons';\r\nimport { Methods, get, postWithSavedToken } from \"../../../../genetousApi\"\r\nimport { format } from 'date-fns';\r\nimport Upload from './upload';\r\nimport SecureDownload from './secureDownload';\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { ToastContainer, toast, Slide } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CCard,\r\n    CCardBody,\r\n    CRow,\r\n    CCol,\r\n    CCardText,\r\n    CCardTitle,\r\n    CContainer,\r\n    CFormInput,\r\n    CListGroup,\r\n    CListGroupItem,\r\n    CButton,\r\n    CFormSelect,\r\n    CModal,\r\n    CModalHeader,\r\n    CModalFooter,\r\n    CModalTitle\r\n} from '@coreui/react'\r\nimport { bool } from 'prop-types';\r\nconst vars = {\r\n    'cursor': \"pointer\",\r\n    \"color\": \"rgba(33, 37, 41,0.8)\",\r\n    \"background-color\": \"#fff\"\r\n}\r\nconst activeLink = {\r\n    'cursor': \"pointer\",\r\n    \"background-color\": \"rgba(33, 37, 41,0.8)\",\r\n    \"color\": \"#fff\"\r\n}\r\nconst dangerIcon = {\r\n    \"color\": \"#c6c6c6\"\r\n}\r\nvar message = \"\";\r\nexport class osService extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            permissionItems: [\"Upload\", \"Secure Download\"],\r\n            collectionCreateRules: [],\r\n            activeKey: 1,\r\n            activeSubKeys: [1, 1, 1, 1, 1],\r\n            subKeys: [],\r\n            redirect: false,\r\n            sendApp: false,\r\n            lists: [false, false],\r\n            visible: false,\r\n            yesNoVisible: false,\r\n            yesNoQuestion: \"\",\r\n            arguments: [],\r\n            sendType: \"\"\r\n        };\r\n        this.handleRedirect = this.handleRedirect.bind(this);\r\n        this.newRuleAdd = this.newRuleAdd.bind(this);\r\n        this.deleteRole = this.deleteRole.bind(this);\r\n        this.addUpdateRule = this.addUpdateRule.bind(this);\r\n        this.getRules = this.getRules.bind(this);\r\n        this.toastShow = this.toastShow.bind(this);\r\n        this.setData = this.setData.bind(this);\r\n\r\n    }\r\n    setActiveKey(key) {\r\n        var l = { ...this.state.lists };\r\n        if (l[this.state.activeKey - 1] == false) {\r\n            this.setState({ activeKey: key });\r\n        } else {\r\n            this.setYesNoVisible(true, \"Are you sure you want to discard all changes?\", \"cancel\", [key, this.state.activeKey]);\r\n        }\r\n        return false;\r\n    }\r\n    async setData(position, data) {\r\n        var l = { ...this.state.lists };\r\n        l[position - 1] = data;\r\n        this.setState({ lists: l })\r\n    }\r\n    async setYesNoVisible(vis, question, sendType, args, send) {\r\n        if (vis)\r\n            this.setState({ yesNoVisible: vis, yesNoQuestion: question, sendType: sendType, arguments: args });\r\n        else {\r\n            if (send) {\r\n                var st = this.state.sendType;\r\n                switch (st) {\r\n                    case \"cancel\":\r\n                        var l = { ...this.state.lists };\r\n                        l[this.state.arguments[1] - 1] = false;\r\n                        await this.setState({ activeKey: this.state.arguments[0], lists: l });\r\n                        break;\r\n                }\r\n            }\r\n            this.setState({ yesNoVisible: vis, yesNoQuestion: \"\", sendType: \"\", arguments: [] });\r\n        }\r\n    }\r\n    handleRedirectApp() {\r\n        if (!this.state.sendApp)\r\n            this.setState({ sendApp: true })\r\n    }\r\n    componentDidMount() {\r\n        var arr = [\"clientId\", \"organizationId\", \"applicationId\"]\r\n        for (var i = 0; i < arr.length; ++i) {\r\n            var key = arr[i];\r\n            if (localStorage.getItem(key) == null || localStorage.getItem(key) == \"\") {\r\n                this.handleRedirect();\r\n                return;\r\n            }\r\n        }\r\n        var arr2 = [\"appId\", \"orgId\"]\r\n        for (var i = 0; i < arr2.length; ++i) {\r\n            var key = arr2[i];\r\n            if (localStorage.getItem(key) == null || localStorage.getItem(key) == \"\") {\r\n                this.handleRedirectApp();\r\n                return;\r\n            }\r\n        }\r\n        var now=Date.now()/1000;\r\n        var time=localStorage.getItem(\"timeout\")/1000;\r\n        if((now-time)>3600){\r\n            localStorage.setItem(\"token\",\"\");\r\n            this.handleRedirect();\r\n        }\r\n    }\r\n    handleRedirect(e) {\r\n        if (!this.state.redirect)\r\n            this.setState({ redirect: true })\r\n    }\r\n\r\n    //Ortak metotlar\r\n\r\n    async newRuleAdd(model) {\r\n        var eleman = document.getElementById(\"newrule\");\r\n        if (!eleman.value) {\r\n            this.toastShow(\"error\", \"Role Name cannot be null or empty!\")\r\n            return false;\r\n        }\r\n\r\n        var success = true;\r\n        await postWithSavedToken(model, Methods.AddUpdateRules).then(function (result) {\r\n            success = result.success;\r\n            if (result.success == true) {\r\n                message = \"Role Rule Created!\"\r\n\r\n            } else {\r\n                message = result.message;\r\n            }\r\n        }, err => {\r\n            if (err.status == 401) {\r\n                this.handleRedirect();\r\n            } else {\r\n                success = false;\r\n                message = err.message;\r\n            }\r\n        });\r\n        var type = success ? \"success\" : \"error\";\r\n        this.toastShow(type, message);\r\n        eleman.value = \"\";\r\n        return true;\r\n    }\r\n    async deleteRole(model) {\r\n        var success = false;\r\n        await postWithSavedToken(model, Methods.DeleteRule).then(function (result) {\r\n            success = result.success;\r\n            if (result.success == true) {\r\n                message = \"Role Deleted\"\r\n            } else {\r\n                message = result.message;\r\n            }\r\n        }, err => {\r\n            if (err.status == 401) {\r\n                this.handleRedirect();\r\n            } else {\r\n                success = false;\r\n                message = err.message;\r\n            }\r\n        });\r\n        var type = success ? \"success\" : \"error\";\r\n        this.toastShow(type, message);\r\n        if (success) {\r\n            return true\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n    async addUpdateRule(model) {\r\n        console.log(model);\r\n        var success = true;\r\n        await postWithSavedToken(model, Methods.AddUpdateRules).then(function (result) {\r\n            success = result.success;\r\n            if (result.success == true) {\r\n                message = \"Saved!\"\r\n            } else {\r\n                message = result.message;\r\n            }\r\n        }, err => {\r\n            if (err.status == 401) {\r\n                this.handleRedirect();\r\n            } else {\r\n                success = false;\r\n                message = err.message;\r\n            }\r\n        });\r\n        var type = success ? \"success\" : \"error\";\r\n        this.toastShow(type, message);\r\n    }\r\n    async getRules(model) {\r\n        var data = []\r\n        var success = true;\r\n        await postWithSavedToken(model, Methods.GetRules).then(function (result) {\r\n            if (result.length > 0 && result[0].hasOwnProperty('roleRules')) {\r\n                data = result;\r\n            }\r\n        }, err => {\r\n            if (err.status == 401) {\r\n                this.handleRedirect();\r\n            } else {\r\n                success = false;\r\n                message = err.message;\r\n            }\r\n        });\r\n        return data;\r\n\r\n    }\r\n    toastShow(type, message) {\r\n        switch (type) {\r\n            case \"success\":\r\n                toast.success(message, {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 1000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: false,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme: \"dark\",\r\n                    transition: Slide\r\n                });\r\n                break;\r\n            case \"error\":\r\n                toast.error(message, {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 1000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: false,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme: \"dark\",\r\n                    transition: Slide\r\n                });\r\n                break;\r\n            case \"info\":\r\n                toast.info(message, {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 1000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: false,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme: \"dark\",\r\n                    transition: Slide\r\n                });\r\n        }\r\n    }\r\n    //////\r\n    render() {\r\n        const { redirect } = this.state;\r\n        const { sendApp } = this.state;\r\n\r\n        if (redirect) {\r\n            return <Redirect to='/login' />;\r\n        } else if (sendApp) {\r\n            return <Redirect to='/applications' />;\r\n        }\r\n        return (\r\n            <CContainer className='p-5'>\r\n                <CModal visible={this.state.yesNoVisible} onClose={this.setYesNoVisible.bind(this, false)}>\r\n                    <CModalHeader>\r\n                        <CModalTitle>{this.state.yesNoQuestion}</CModalTitle>\r\n                    </CModalHeader>\r\n                    <CModalFooter>\r\n                        <CButton color=\"secondary\" onClick={this.setYesNoVisible.bind(this, false, null, null, null, false)}>\r\n                            No\r\n                        </CButton>\r\n                        <CButton color=\"primary\" onClick={this.setYesNoVisible.bind(this, false, null, null, null, true)}>Yes</CButton>\r\n                    </CModalFooter>\r\n                </CModal>\r\n                <ToastContainer />\r\n                <CRow>\r\n                    <CCol className='col-3'>\r\n                        <CNav className='flex-column' role=\"tablist\" style={vars} >\r\n                            {this.state.permissionItems.map((item, index) => (\r\n                                <CNavItem>\r\n                                    <CNavLink\r\n                                        style={this.state.activeKey === index + 1 ? activeLink : vars}\r\n                                        active={this.state.activeKey === index + 1}\r\n                                        onClick={this.setActiveKey.bind(this, index + 1)}\r\n                                    >\r\n                                        {item}\r\n                                    </CNavLink>\r\n                                </CNavItem>\r\n                            ))}\r\n                        </CNav>\r\n\r\n                    </CCol>\r\n                    <CCol className='col-9 justify-content-center'>\r\n                        <CTabContent>\r\n                            <CTabPane role=\"tabpanel\" aria-labelledby=\"home-tab\" visible={this.state.activeKey === 1}>\r\n                                {this.state.activeKey === 1 &&\r\n                                    <Upload handleRedirect={this.handleRedirect}\r\n                                        newRuleAdd={this.newRuleAdd}\r\n                                        deleteRole={this.deleteRole}\r\n                                        addUpdateRule={this.addUpdateRule}\r\n                                        getRules={this.getRules}\r\n                                        toastShow={this.toastShow}\r\n                                        setData={this.setData}\r\n                                        position={1} />\r\n                                }\r\n                            </CTabPane>\r\n                            <CTabPane role=\"tabpanel\" aria-labelledby=\"home-tab\" visible={this.state.activeKey === 2}>\r\n                                {this.state.activeKey === 2 &&\r\n                                    <SecureDownload handleRedirect={this.handleRedirect}\r\n                                        newRuleAdd={this.newRuleAdd}\r\n                                        deleteRole={this.deleteRole}\r\n                                        addUpdateRule={this.addUpdateRule}\r\n                                        getRules={this.getRules}\r\n                                        toastShow={this.toastShow}\r\n                                        setData={this.setData}\r\n                                        position={2} />\r\n                                }\r\n                            </CTabPane>\r\n                        </CTabContent>\r\n                    </CCol>\r\n                </CRow>\r\n\r\n            </CContainer>\r\n        )\r\n    }\r\n}\r\nexport default osService"],"names":["vars","dangerIcon","fRight","cardText","Upload","Component","constructor","props","super","this","state","uploadRules","activeKey","activeSubKeys","subKeys","changedTypes","visible","yesNoVisible","yesNoQuestion","arguments","sendType","setSubActiveKey","key","id","index","findIndex","x","setState","getSubActiveKey","e","componentDidMount","getUploadRules","async","model","organizationId","localStorage","getItem","applicationId","service","methodContentType","methodType","d","getRules","sk","length","roleRules","permissions","map","m","data","_id","push","setVisible","vis","question","args","send","deleteRole","addUpdateRule","toastShow","eleman","document","getElementById","value","rules","method","role","permitted","extensions","nonPermitted","newRuleAdd","rule","rls","splice","addExt","permIndex","type","collection","target","toString","indexOf","arr","getValueAsArrayByType","setData","position","getExt","val","extensionIndex","_jsxs","className","children","style","_jsx","onClick","removeExt","bind","class","arrElems","split","item","parseInt","isNaN","render","CCard","CRow","CCol","CCardTitle","CButton","color","setYesNoVisible","CModal","onClose","CModalHeader","CModalTitle","CModalBody","CFormInput","placeholder","name","CModalFooter","CCardBody","CNav","variant","CNavItem","CNavLink","active","CTabContent","CTabPane","CCardHeader","onChange","c","i","SecureDownload","secureDownloadRules","getsecureDownloadRules","fileNames","addFN","getFN","fileIndex","removeFN","activeLink","message","osService","permissionItems","collectionCreateRules","redirect","sendApp","lists","handleRedirect","setActiveKey","l","handleRedirectApp","arr2","Date","now","setItem","success","postWithSavedToken","Methods","AddUpdateRules","then","result","err","status","DeleteRule","console","log","GetRules","hasOwnProperty","toast","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","theme","transition","Slide","error","info","Redirect","to","CContainer","ToastContainer"],"sourceRoot":""}