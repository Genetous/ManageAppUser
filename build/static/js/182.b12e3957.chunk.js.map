{"version":3,"file":"static/js/182.b12e3957.chunk.js","mappings":"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","sources":["views/others/encryptions/encrypt.js","../node_modules/@coreui/icons/js/free/cil-plus.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport CIcon from '@coreui/icons-react';\r\nimport * as icon from '@coreui/icons';\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { Methods, get, postWithSavedToken } from \"../../../genetousApi\"\r\nimport { ToastContainer, toast,Slide } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CCard,\r\n    CCardBody,\r\n    CRow,\r\n    CCol,\r\n    CCardTitle,\r\n    CFormInput,\r\n    CButton,\r\n    CFormSelect,\r\n    CModal,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CCardHeader,\r\n    CCardFooter,\r\n} from '@coreui/react'\r\nimport { bool } from 'prop-types';\r\nconst vars = {\r\n    'cursor': \"pointer\",\r\n    \"color\": \"rgb(33, 37, 41)\",\r\n    \"background-color\": \"#fff\"\r\n}\r\nconst activeLink = {\r\n    'cursor': \"pointer\",\r\n    \"background-color\": \"rgb(33, 37, 41)\",\r\n    \"color\": \"#fff\"\r\n}\r\nconst dangerIcon = {\r\n    \"color\": \"#f7f2f2\"\r\n}\r\nconst fRight = {\r\n    \"float\": \"right\"\r\n}\r\nconst cardText = { \"height\": \"620px\", \"overflow-y\": \"scroll\" }\r\nconst arrayLabels = [\"not\", \"in\", \"eq\"]\r\nvar status = -1;\r\nvar message = \"Unexpected Error Occured!\";\r\nvar error = false;\r\nexport class Encrypt extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            encryptions: [],\r\n            visible: false,\r\n            yesNoVisible: false,\r\n            yesNoQuestion: \"\",\r\n            arguments: [],\r\n            sendType: \"\",\r\n            redirect: false,\r\n            error: false,\r\n            errroText: \"\",\r\n            sendApp: false\r\n        };\r\n    }\r\n    handleRedirectApp() {\r\n        if (!this.state.sendApp)\r\n            this.setState({ sendApp: true })\r\n    }\r\n\r\n    toastShow(type, message) {\r\n        switch(type){\r\n            case \"success\":\r\n                toast.success(message, {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 1000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: false,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme: \"dark\",\r\n                    transition: Slide\r\n                });\r\n                break;\r\n            case \"error\":\r\n                toast.error(message, {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 1000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: false,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme: \"dark\",\r\n                    transition: Slide\r\n                });\r\n                break;\r\n            case \"info\":\r\n                toast.info(message, {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 1000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: false,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme: \"dark\",\r\n                    transition: Slide\r\n                });\r\n        }\r\n    }\r\n    handleRedirect(e) {\r\n        if (!this.state.redirect)\r\n            this.setState({ redirect: true })\r\n    }\r\n    componentDidMount() {\r\n        var arr = [\"clientId\", \"organizationId\", \"applicationId\"]\r\n        for (var i = 0; i < arr.length; ++i) {\r\n            var key = arr[i];\r\n            if (localStorage.getItem(key) == null || localStorage.getItem(key) == \"\") {\r\n                this.handleRedirect();\r\n                return;\r\n            }\r\n        }\r\n        var arr2 = [\"appId\", \"orgId\"]\r\n        for (var i = 0; i < arr2.length; ++i) {\r\n            var key = arr2[i];\r\n            if (localStorage.getItem(key) == null || localStorage.getItem(key) == \"\") {\r\n                this.handleRedirectApp();\r\n                return;\r\n            }\r\n        }\r\n        this.getEncryption();\r\n    }\r\n    async getEncryption() {\r\n        var orgId = localStorage.getItem('orgId')\r\n        var appId = localStorage.getItem('appId')\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId\r\n        }\r\n        var d = [...this.state.encryptions];\r\n        var success=true;\r\n        await postWithSavedToken(model, Methods.GetEncryption).then(function (result) {\r\n            if (result.success) {\r\n                d = result.data.encryptions;\r\n            }\r\n        }, err => {\r\n            if (err.status == 401) {\r\n                this.handleRedirect();\r\n            } else {\r\n                success=false;\r\n                message = err.message;\r\n            }\r\n        });\r\n        if(!success)\r\n            this.toastShow(\"error\", message);\r\n\r\n\r\n        this.setState({ encryptions: d });\r\n    }\r\n\r\n    changeCollectionName(collectionIndex, e) {\r\n        var encryptions = [...this.state.encryptions]\r\n        var collection = encryptions[collectionIndex]\r\n        collection[\"collectionName\"] = e.target.value\r\n        this.setState({ encryptions });\r\n    }\r\n    addNewCollection() {\r\n        var encryptions = [...this.state.encryptions]\r\n        var model = {\r\n            collectionName: \"collectionName\",\r\n            fields: [],\r\n            not_return: []\r\n        }\r\n        encryptions.push(model);\r\n        this.setState({ encryptions });\r\n    }\r\n    removeCollection(index) {\r\n        var encryptions = [...this.state.encryptions]\r\n        encryptions.splice(index, 1)\r\n        this.setState({ encryptions });\r\n    }\r\n    changeFN(collectionIndex, type, e) {\r\n        var encryptions = [...this.state.encryptions]\r\n        var collection = encryptions[collectionIndex]\r\n        if (e.target.value.toString().indexOf(\",\") >= 0) {\r\n            var arr = this.getValueAsArrayByType(e.target.value);\r\n            if (arr[0] && collection[type].indexOf(arr[0]) < 0) {\r\n                collection[type].push(arr[0]);\r\n            }\r\n            e.target.value = \"\";\r\n        }\r\n        this.setState({ encryptions });\r\n    }\r\n    removeFN(val, collectionIndex, type) {\r\n        var encryptions = [...this.state.encryptions]\r\n        var collection = encryptions[collectionIndex]\r\n        const index = collection[type].indexOf(val);\r\n        if (index > -1) {\r\n            collection[type].splice(index, 1);\r\n        }\r\n        this.setState({ encryptions });\r\n    }\r\n    getFN(val, collectionIndex, type) {\r\n        return (\r\n            <p className=\"p-1 rounded border border-primary text-primary\">{val}\r\n                <span style={fRight}> <button type=\"button\"\r\n                    onClick={this.removeFN.bind(this, val, collectionIndex, type)}\r\n                    class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n            </p>\r\n        )\r\n    }\r\n    async addUpdateEncryption() {\r\n        this.toastShow(\"info\", \"Processing...\");\r\n        this.setVisible(false);\r\n        var encryptions = [...this.state.encryptions]\r\n        var orgId = localStorage.getItem(\"orgId\");\r\n        var appId = localStorage.getItem(\"appId\");\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            encryptions: encryptions\r\n        }\r\n        var success = true;\r\n        await postWithSavedToken(model, Methods.AddEncryption).then(function (result) {\r\n            if (result.success == true) {\r\n                message = \"Saved!\"\r\n            } else {\r\n                success = false;\r\n                message = result.message;\r\n            }\r\n        }, err => {\r\n            if (err.status == 401) {\r\n                this.handleRedirect();\r\n            } else {\r\n                success=false;\r\n                message = err.message;\r\n            }\r\n        });\r\n        var type=success?\"success\":\"error\";\r\n        this.toastShow(type, message);\r\n    }\r\n    setVisible(vis) {\r\n        this.setState({ visible: vis });\r\n    }\r\n    async setYesNoVisible(vis, question, sendType, args, send) {\r\n        if (vis)\r\n            this.setState({ yesNoVisible: vis, yesNoQuestion: question, sendType: sendType, arguments: args });\r\n        else {\r\n            if (send) {\r\n                var st = this.state.sendType;\r\n                switch (st) {\r\n                    case \"saveAll\":\r\n                        await this.addUpdateEncryption();\r\n                        break;\r\n                }\r\n            }\r\n            this.setState({ yesNoVisible: vis, yesNoQuestion: \"\", sendType: \"\", arguments: [] });\r\n        }\r\n    }\r\n\r\n    getValueAsArrayByType(val) {\r\n        var arr = []\r\n        var d = val.toString();\r\n        var ind = d.indexOf(',');\r\n        if (ind >= 0) {\r\n            var arrElems = val.split(\",\");\r\n            arr = arrElems;\r\n        }\r\n        else {\r\n            if (val) {\r\n                arr.push(val)\r\n            }\r\n        }\r\n\r\n        return arr;\r\n    }\r\n    render() {\r\n        const { redirect, sendApp } = this.state;\r\n\r\n        if (redirect) {\r\n            return <Redirect to='/login' />;\r\n        }\r\n        else if (sendApp) {\r\n            return <Redirect to='/applications' />;\r\n        }\r\n        return (\r\n            <CCard>\r\n                <ToastContainer />\r\n                <CRow className='m-2 border-bottom d-flex align-items-center'>\r\n                    <CCol className='col-6 pb-2'>\r\n                        <CCardTitle>Add/Update <b>\"Encryption Data\"</b></CCardTitle>\r\n                    </CCol>\r\n                    <CCol className='col-6 d-grid gap-2 d-md-flex justify-content-md-end pb-2'>\r\n                        <CButton color='info' style={{ \"color\": \"#fff\" }}\r\n                            onClick={this.setYesNoVisible.bind(this, true, \"Are you sure you want to save all?\", \"saveAll\", [this])}>Save All</CButton>\r\n                    </CCol>\r\n\r\n                    <CModal visible={this.state.yesNoVisible} onClose={this.setYesNoVisible.bind(this, false)}>\r\n                        <CModalHeader>\r\n                            <CModalTitle>{this.state.yesNoQuestion}</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalFooter>\r\n                            <CButton color=\"secondary\" onClick={this.setYesNoVisible.bind(this, false, null, null, null, false)}>\r\n                                No\r\n                            </CButton>\r\n                            <CButton color=\"primary\" onClick={this.setYesNoVisible.bind(this, false, null, null, null, true)}>Yes</CButton>\r\n                        </CModalFooter>\r\n                    </CModal>\r\n                </CRow>\r\n                <CCardBody style={cardText}>\r\n\r\n                    <CCard className='mt-1'>\r\n                        <CCardBody>\r\n                            <CCardTitle>Collections</CCardTitle>\r\n                            {this.state.encryptions.length > 0 &&\r\n                                this.state.encryptions.map((item, index) => (\r\n                                    <div>\r\n                                        <CRow className='mt-2'>\r\n                                            <CCol className='col-11'>\r\n                                                <CFormInput type='text' name='collectionName'\r\n                                                    onChange={this.changeCollectionName.bind(this, index)}\r\n                                                    placeholder='Collection Name' value={item.collectionName} />\r\n                                            </CCol>\r\n                                            <CCol className='align-self-center'>\r\n                                                <span style={fRight}> <button type=\"button\"\r\n                                                    onClick={this.removeCollection.bind(this, index)}\r\n                                                    class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n                                            </CCol>\r\n                                        </CRow>\r\n                                        <CCardTitle className='mt-2'>Encrypt Fields for  <b><u>{item.collectionName}</u></b> collection</CCardTitle>\r\n                                        <CRow className='mt-2 pb-2'>\r\n                                            <CCol className='col-9'>\r\n                                                <CFormInput type='text' name='fields'\r\n                                                    onChange={this.changeFN.bind(this, index, \"fields\")}\r\n                                                    placeholder='Encrypt Fields with comma' />\r\n                                            </CCol>\r\n                                        </CRow>\r\n\r\n                                        <CRow className='mt-2'>\r\n                                            {item.fields.map((val =>\r\n                                                <CCol className='col-3'>\r\n                                                    {this.getFN(val, index, \"fields\")}\r\n                                                </CCol>\r\n                                            ))}\r\n                                        </CRow>\r\n                                        <CCardTitle>Disabled Return Values of Fields for <b><u>{item.collectionName}</u></b> collection</CCardTitle>\r\n                                        <CRow className='mt-2 pb-2'>\r\n                                            <CCol className='col-9'>\r\n                                                <CFormInput type='text' name='not_return'\r\n                                                    onChange={this.changeFN.bind(this, index, \"not_return\")}\r\n                                                    placeholder='Disable return Fields with comma' />\r\n                                            </CCol>\r\n                                        </CRow>\r\n\r\n                                        <CRow className='mt-2'>\r\n                                            {item.not_return.map((val =>\r\n                                                <CCol className='col-3'>\r\n                                                    {this.getFN(val, index, \"not_return\")}\r\n                                                </CCol>\r\n                                            ))}\r\n                                        </CRow>\r\n\r\n                                    </div>\r\n                                ))}\r\n                        </CCardBody>\r\n                        <CCardFooter>\r\n                            <CRow className='mt-2 justify-content-center'>\r\n                                <CCol className='col-6 text-center'>\r\n                                    <CButton onClick={this.addNewCollection.bind(this)}><CIcon icon={icon.cilPlus} />Add New Collection</CButton>\r\n                                </CCol>\r\n                            </CRow>\r\n                        </CCardFooter>\r\n                    </CCard>\r\n                </CCardBody>\r\n            </CCard>\r\n        )\r\n    }\r\n}\r\nexport default Encrypt","export const cilPlus = [\"512 512\",\"<polygon fill='var(--ci-primary-color, currentColor)' points='440 240 272 240 272 72 240 72 240 240 72 240 72 272 240 272 240 440 272 440 272 272 440 272 440 240' class='ci-primary'/>\"]"],"names":["fRight","cardText","message","Encrypt","Component","constructor","props","super","this","state","encryptions","visible","yesNoVisible","yesNoQuestion","arguments","sendType","redirect","error","errroText","sendApp","handleRedirectApp","setState","toastShow","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","theme","transition","Slide","info","handleRedirect","e","componentDidMount","arr","i","length","key","localStorage","getItem","arr2","getEncryption","async","model","organizationId","applicationId","d","postWithSavedToken","Methods","GetEncryption","then","result","data","err","status","changeCollectionName","collectionIndex","target","value","addNewCollection","push","collectionName","fields","not_return","removeCollection","index","splice","changeFN","collection","toString","indexOf","getValueAsArrayByType","removeFN","val","getFN","_jsxs","className","children","style","_jsx","onClick","bind","class","setVisible","AddEncryption","vis","question","args","send","addUpdateEncryption","split","render","Redirect","to","CCard","ToastContainer","CRow","CCol","CCardTitle","CButton","color","setYesNoVisible","CModal","onClose","CModalHeader","CModalTitle","CModalFooter","CCardBody","map","item","CFormInput","name","onChange","placeholder","CCardFooter","CIcon","icon","cilPlus"],"sourceRoot":""}