{"version":3,"file":"static/js/39.b0472a10.chunk.js","mappings":"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","sources":["views/others/rules/recommendation/createNodes.js","views/others/rules/recommendation/deleteNodes.js","views/others/rules/recommendation/relate.js","views/others/rules/recommendation/deleteRelation.js","views/others/rules/recommendation/updateNodes.js","views/others/rules/recommendation/recommendation.js","../node_modules/@coreui/icons/js/free/cil-plus.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport CIcon from '@coreui/icons-react';\r\nimport * as icon from '@coreui/icons';\r\nimport { Link } from 'react-router-dom'\r\nimport { format } from 'date-fns';\r\nimport { ToastContainer, toast,Slide } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CCard,\r\n    CCardBody,\r\n    CRow,\r\n    CCol,\r\n    CCardTitle,\r\n    CFormInput,\r\n    CButton,\r\n    CFormSelect,\r\n    CModal,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CCardHeader,\r\n    CCardFooter,\r\n} from '@coreui/react'\r\nimport { bool } from 'prop-types';\r\nconst vars = {\r\n    'cursor': \"pointer\",\r\n    \"color\": \"rgb(33, 37, 41)\",\r\n    \"background-color\": \"#fff\"\r\n}\r\nconst activeLink = {\r\n    'cursor': \"pointer\",\r\n    \"background-color\": \"rgb(33, 37, 41)\",\r\n    \"color\": \"#fff\"\r\n}\r\nconst dangerIcon = {\r\n    \"color\": \"#f7f2f2\"\r\n}\r\nconst fRight = {\r\n    \"float\": \"right\"\r\n}\r\nconst cardText = { \"height\": \"620px\", \"overflow-y\": \"scroll\" }\r\nconst arrayLabels = [\"not\", \"in\",\"eq\"]\r\nexport class CreateNodes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nodeCreateRules: [],\r\n            activeKey: 1,\r\n            activeSubKeys: [1, 1, 1, 1, 1],\r\n            subKeys: [],\r\n            changedTypes: [],\r\n            visible: false,\r\n            yesNoVisible: false,\r\n            yesNoQuestion: \"\",\r\n            arguments: [],\r\n            sendType: \"\",\r\n            compare:[\"eq\",\"not\",\"gt\",\"gte\",\"lt\",\"lte\",\"in\"]\r\n\r\n        }\r\n    }\r\n\r\n    setSubActiveKey(key, id) {\r\n        const { subKeys } = this.state;\r\n        var index = subKeys.findIndex(x => x.id === id);\r\n        subKeys[index].activeKey = key;\r\n        this.setState({ subKeys });\r\n        return false;\r\n    }\r\n    getSubActiveKey(e, key, id) {\r\n        const { subKeys } = this.state;\r\n        var index = subKeys.findIndex(x => x.id === id);\r\n        return key == subKeys[index].activeKey\r\n    }\r\n    componentDidMount() {\r\n        this.getCreateNodeRules();\r\n    }\r\n    async getCreateNodeRules() {\r\n        var orgId = localStorage.getItem('orgId')\r\n        var appId = localStorage.getItem('appId')\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            service: \"recommendationService\",\r\n            methodContentType: \"collection\",\r\n            methodType: \"recommendationCreate\"\r\n        }\r\n        var d = { ...this.state.nodeCreateRules };\r\n        d = await this.props.getRules(model);\r\n        \r\n        var sk = [];\r\n        if (d.length > 0) {\r\n            var rr = d[0];\r\n            rr.roleRules.permissions.map(m => {\r\n                var data = {\r\n                    id: m._id,\r\n                    activeKey: 1\r\n                }\r\n                sk.push(data);\r\n            })\r\n        }\r\n\r\n        this.setState({ nodeCreateRules: d, subKeys: sk });\r\n    }\r\n    getValueType(val) {\r\n        if (Array.isArray(val)) {\r\n            if (val.length > 0) {\r\n                return typeof val[0]\r\n            }\r\n        }\r\n        return typeof val;\r\n    }\r\n    getContentData(item, key, permIndex, collectionIndex, type) {\r\n        return (\r\n            <div>\r\n                {Object.keys(item).length < 1 &&\r\n                    <CRow className='mt-2 justify-content-center'>\r\n                        <CCol className='col-2'>\r\n                            <CButton color='primary' onClick={this.addNewContentDataSub.bind(this, key, permIndex, collectionIndex, type)}><CIcon style={dangerIcon} icon={icon.cilPlus} /></CButton>\r\n                        </CCol>\r\n                    </CRow>\r\n                }\r\n                {typeof item == \"object\" &&\r\n                    Object.keys(item).map((k, i) => {\r\n                        return (\r\n                            <div>\r\n                                <CRow className='mt-2'>\r\n                                    <CCol className='col-3'>\r\n                                        <CFormSelect onChange={this.eqChanged.bind(this, key, k, permIndex, collectionIndex, type, i)}\r\n                                            value={k} name={this.getValueType(item[k])}>\r\n                                            <option value=\"eq\">{'='}</option>\r\n                                            <option value=\"not\">{'!='}</option>\r\n                                            <option value=\"gt\">{'>'}</option>\r\n                                            <option value=\"gte\">{'>='}</option>\r\n                                            <option value=\"lt\">{'<'}</option>\r\n                                            <option value=\"lte\">{'<='}</option>\r\n                                            <option value=\"in\">{'in'}</option>\r\n                                        </CFormSelect>\r\n                                    </CCol>\r\n                                    <CCol className='col-3'>\r\n                                        <CFormInput type='text' name='value' onChange={this.changeContentDataSubKey.bind(this, key, k, permIndex, collectionIndex, type)} placeholder={arrayLabels.indexOf(k) < 0 ? \"value\" : \"values with comma\"} value={arrayLabels.indexOf(k) < 0 ? item[k] : this.value} />\r\n                                    </CCol>\r\n                                    <CCol className='col-3'>\r\n                                        <CFormSelect id={key + \"_\" + k + \"_\" + permIndex + \"_\" + collectionIndex + \"_\" + type}\r\n                                            onChange={this.typeChanged.bind(this, key, k, permIndex, collectionIndex, type, i)}\r\n                                            value={this.getValueType(item[k])}\r\n                                            disabled={item[k].length<1} >\r\n                                            <option value=\"string\">{'String'}</option>\r\n                                            <option value=\"number\">{'Integer'}</option>\r\n                                        </CFormSelect>\r\n                                    </CCol>\r\n                                    <CCol className='col-1 align-self-center'>\r\n                                        <button type=\"button\"                        \r\n                                            onClick={this.removeContentDataSubKey.bind(this, key, k, permIndex, collectionIndex, type)}\r\n                                            class=\"btn-close\" aria-label=\"Remove\"/>\r\n                                    </CCol>\r\n                                    \r\n                                    {Object.keys(item).length - 1 == i &&\r\n                                        <CCol className='col-1'>\r\n                                            <CButton color='primary' onClick={this.addNewContentDataSub.bind(this, key, permIndex, collectionIndex, type)}><CIcon style={dangerIcon} icon={icon.cilPlus} /></CButton>\r\n                                        </CCol>\r\n                                    }\r\n                                </CRow>\r\n                                {arrayLabels.indexOf(k) >= 0 &&\r\n                                    <CRow className='mt-2'>\r\n                                        {item[k].map((val =>\r\n                                            <CCol className='col-3'>\r\n                                                {this.getArrayItems(val, key, k, permIndex, collectionIndex, type)}\r\n                                            </CCol>\r\n                                        ))}\r\n                                    </CRow>\r\n                                }\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n    getArrayItems(val, key, k, permIndex, collectionIndex, type) {\r\n        return (\r\n            <p className=\"p-1 rounded border border-primary text-primary\">{val}\r\n                <span style={fRight}> <button type=\"button\"\r\n                    onClick={this.removeContentDataSubKeyArray.bind(this, key, k, permIndex, collectionIndex, type, val)}\r\n                    class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n            </p>\r\n        )\r\n    }\r\n\r\n    eqChanged(key, k, permIndex, collectionIndex, type, keyIndex, e) {\r\n        var nodeCreateRules = [...this.state.nodeCreateRules]\r\n        var collection = nodeCreateRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex]\r\n        var newContentData = {}\r\n\r\n        Object.keys(collection.contentData[key]).map((ki, i) => {\r\n            if (keyIndex == i) {\r\n                if (arrayLabels.indexOf(e.target.value) < 0)\r\n                    newContentData[e.target.value] = collection.contentData[key][ki]\r\n                else {\r\n                    var arr = this.getValueAsArrayByType(collection.contentData[key][ki], e.target.name);\r\n                    newContentData[e.target.value] = arr\r\n                }\r\n            } else {\r\n                newContentData[ki] = collection.contentData[key][ki]\r\n            }\r\n        })\r\n        collection.contentData[key] = newContentData;\r\n        this.setState({ nodeCreateRules });\r\n    }\r\n    typeChanged(key, k, permIndex, collectionIndex, type, keyIndex, e) {\r\n        var nodeCreateRules = [...this.state.nodeCreateRules]\r\n        var collection = nodeCreateRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex]\r\n        var newContentData = {}\r\n        Object.keys(collection.contentData[key]).map((ki, i) => {\r\n            if (keyIndex == i) {\r\n                if (arrayLabels.indexOf(k) < 0)\r\n                    newContentData[k] = this.convert(collection.contentData[key][ki], e.target.value);\r\n                else {\r\n                    var arr = this.convert(collection.contentData[key][ki], e.target.value);\r\n                    newContentData[k] = arr\r\n                }\r\n            } else {\r\n                newContentData[ki] = collection.contentData[key][ki]\r\n            }\r\n        })\r\n        collection.contentData[key] = newContentData;\r\n        this.setState({ nodeCreateRules });\r\n    }\r\n    removeContentDataSubKey(key, k, permIndex, collectionIndex, type) {\r\n        var nodeCreateRules = [...this.state.nodeCreateRules]\r\n        var collection = nodeCreateRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex]\r\n        delete collection.contentData[key][k];\r\n        this.setState({ nodeCreateRules });\r\n\r\n    }\r\n    removeContentDataSubKeyArray(key, k, permIndex, collectionIndex, type, val) {\r\n        var nodeCreateRules = [...this.state.nodeCreateRules]\r\n        var collection = nodeCreateRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex]\r\n        const index = collection.contentData[key][k].indexOf(val);\r\n        if (index > -1) {\r\n            collection.contentData[key][k].splice(index, 1);\r\n        }\r\n        this.setState({ nodeCreateRules });\r\n\r\n    }\r\n\r\n    changeContentDataSubKey(key, k, permIndex, collectionIndex, type, e) {\r\n        var eleman = document.getElementById(key + \"_\" + k + \"_\" + permIndex + \"_\" + collectionIndex + \"_\" + type)\r\n        var nodeCreateRules = [...this.state.nodeCreateRules]\r\n        var collection = nodeCreateRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex];\r\n        if (arrayLabels.indexOf(k) < 0)\r\n            collection.contentData[key][k] = e.target.value;\r\n        else {\r\n            if (e.target.value.toString().indexOf(\",\") >= 0) {\r\n                var arr = this.getValueAsArrayByType(e.target.value, eleman.value);\r\n                switch (eleman.value) {\r\n                    case \"string\":\r\n                        if (arr[0] && collection.contentData[key][k].indexOf(arr[0]) < 0) {\r\n                            collection.contentData[key][k].push(arr[0]);\r\n                        }\r\n                        break;\r\n                    case \"number\":\r\n                        if (!isNaN(arr[0]) && collection.contentData[key][k].indexOf(arr[0]) < 0) {\r\n                            collection.contentData[key][k].push(arr[0]);\r\n                        }\r\n                        break;\r\n                }\r\n                e.target.value = \"\";\r\n            }\r\n            else if (e.target.value.toString().trim() == \"\") {\r\n                e.target.value = \"\";\r\n            }\r\n        }\r\n        this.setState({ nodeCreateRules });\r\n\r\n    }\r\n    addNewContentDataSub(key, permIndex, collectionIndex, type) {\r\n        var nodeCreateRules = [...this.state.nodeCreateRules]\r\n        var collection = nodeCreateRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex]\r\n        for(var i=0;i<this.state.compare.length;++i){\r\n            if(!(this.state.compare[i] in collection.contentData[key])){\r\n                 if(i>0 && collection.contentData[key][this.state.compare[i-1]].length>0){\r\n                    collection.contentData[key][this.state.compare[i]] = [];\r\n                }else if(i==0){\r\n                    collection.contentData[key][this.state.compare[i]] = [];\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        this.setState({ nodeCreateRules });\r\n\r\n    }\r\n    removeContentDataKey(key, permIndex, collectionIndex, type) {\r\n        var nodeCreateRules = [...this.state.nodeCreateRules]\r\n        var collection = nodeCreateRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex]\r\n        delete collection.contentData[key];\r\n        this.setState({ nodeCreateRules });\r\n\r\n    }\r\n    changeContentDataKey(key, permIndex, collectionIndex, type, keyIndex, e) {\r\n        var nodeCreateRules = [...this.state.nodeCreateRules]\r\n        var collection = nodeCreateRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex]\r\n        var newContentData = {}\r\n        Object.keys(collection.contentData).map((k, i) => {\r\n            if (keyIndex == i) {\r\n                newContentData[e.target.value] = collection.contentData[k]\r\n            } else {\r\n                newContentData[k] = collection.contentData[k]\r\n            }\r\n        })\r\n        collection.contentData = newContentData;\r\n        this.setState({ nodeCreateRules });\r\n\r\n    }\r\n    changeCollectionName(permIndex, collectionIndex, type, e) {\r\n        var nodeCreateRules = [...this.state.nodeCreateRules]\r\n        var collection = nodeCreateRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex]\r\n        collection[\"collectionName\"] = e.target.value\r\n        this.setState({ nodeCreateRules });\r\n    }\r\n    changeNonPermittedCollectionName(permIndex, collectionIndex, type, e) {\r\n        var nodeCreateRules = [...this.state.nodeCreateRules]\r\n        var collection = nodeCreateRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex]\r\n        collection[\"collectionName\"] = e.target.value;\r\n        this.setState({ nodeCreateRules });\r\n    }\r\n    addNewContentData(permIndex, collectionIndex, type) {\r\n        var nodeCreateRules = [...this.state.nodeCreateRules]\r\n        var collection = nodeCreateRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex]\r\n        collection.contentData[\"newkey\"] = {};\r\n        this.setState({ nodeCreateRules });\r\n    }\r\n    addNewCollection(permIndex, type) {\r\n        var nodeCreateRules = [...this.state.nodeCreateRules]\r\n        var collection = nodeCreateRules[0].roleRules.permissions[permIndex][type].nodes;\r\n        var model = {\r\n            collectionName: \"collectionName\",\r\n            contentData: {},\r\n            contentKeys: []\r\n        }\r\n        collection.push(model);\r\n        this.setState({ nodeCreateRules });\r\n    }\r\n    removeCollection(permIndex, index, type) {\r\n        var nodeCreateRules = [...this.state.nodeCreateRules]\r\n        var collection = nodeCreateRules[0].roleRules.permissions[permIndex][type].nodes;\r\n        collection.splice(index, 1)\r\n        this.setState({ nodeCreateRules });\r\n    }\r\n    changeCK(permIndex, collectionIndex, type, e) {\r\n        var nodeCreateRules = [...this.state.nodeCreateRules]\r\n        var collection = nodeCreateRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex]\r\n        if (e.target.value.toString().indexOf(\",\") >= 0) {\r\n            var arr = this.getValueAsArrayByType(e.target.value, \"string\");\r\n            if (arr[0] && collection.contentKeys.indexOf(arr[0]) < 0) {\r\n                collection.contentKeys.push(arr[0]);\r\n            }\r\n            e.target.value = \"\";\r\n        }\r\n        this.setState({ nodeCreateRules });\r\n    }\r\n    removeContentKeys(val, permIndex, collectionIndex, type, e) {\r\n        var nodeCreateRules = [...this.state.nodeCreateRules]\r\n        var collection = nodeCreateRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex]\r\n        const index = collection.contentKeys.indexOf(val);\r\n        if (index > -1) {\r\n            collection.contentKeys.splice(index, 1);\r\n        }\r\n        this.setState({ nodeCreateRules });\r\n    }\r\n    getContentKeysItems(val, permIndex, collectionIndex, type) {\r\n        return (\r\n            <p className=\"p-1 rounded border border-primary text-primary\">{val}\r\n                <span style={fRight}> <button type=\"button\"\r\n                    onClick={this.removeContentKeys.bind(this, val, permIndex, collectionIndex, type)}\r\n                    class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n            </p>\r\n        )\r\n    }\r\n    getValueAsArray(val) {\r\n        var arr = []\r\n        var d = val.toString();\r\n        var ind = d.indexOf(',');\r\n        if (ind >= 0) {\r\n            arr = val.split(\",\");\r\n        }\r\n        else\r\n            arr.push(val)\r\n\r\n        return arr;\r\n    }\r\n    getValueAsArrayByType(val, type) {\r\n        var arr = []\r\n        var d = val.toString();\r\n        var ind = d.indexOf(',');\r\n        if (ind >= 0) {\r\n            var arrElems = val.split(\",\");\r\n            switch (type) {\r\n                case \"string\":\r\n                    arr = arrElems;\r\n                    break;\r\n                case \"number\":\r\n                    arrElems.map((item) => {\r\n                        arr.push(parseInt(item));\r\n                    });\r\n            }\r\n        }\r\n        else {\r\n            switch (type) {\r\n                case \"string\":\r\n                    if (val) {\r\n                        arr.push(val)\r\n                    }\r\n                    break;\r\n                case \"number\":\r\n                    if (!isNaN(val)) {\r\n                        arr.push(val)\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return arr;\r\n    }\r\n    convert(val, type) {\r\n        if (!Array.isArray(val)) {\r\n            switch (type) {\r\n                case \"string\":\r\n                    return val.toString();\r\n                case \"number\":\r\n                    return parseInt(val);\r\n            }\r\n        } else {\r\n            switch (type) {\r\n                case \"string\":\r\n                    var arr = [];\r\n                    val.map((item) => {\r\n                        arr.push(item.toString());\r\n                    });\r\n                    return arr;\r\n                case \"number\":\r\n                    var arr = [];\r\n                    val.map((item) => {\r\n                        var item = parseInt(item);\r\n                        if (!isNaN(item))\r\n                            arr.push(item);\r\n                    });\r\n                    return arr;\r\n            }\r\n\r\n        }\r\n    }\r\n    async addUpdateRule() {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var nodeCreateRules = [...this.state.nodeCreateRules]\r\n        var rule = nodeCreateRules[0].roleRules;\r\n        var rls = {\r\n            method: rule.method,\r\n            methodType: rule.methodType,\r\n            methodContentType: rule.methodContentType,\r\n            service: rule.service,\r\n            permissions: rule.permissions\r\n        }\r\n        var orgId = localStorage.getItem(\"orgId\");\r\n        var appId = localStorage.getItem(\"appId\");\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            rules: [rls]\r\n        }\r\n        this.props.addUpdateRule(model);\r\n       \r\n    }\r\n    setVisible(vis) {\r\n        this.setState({ visible: vis });\r\n    }\r\n    async setYesNoVisible(vis, question, sendType, args, send) {\r\n        if (vis)\r\n            this.setState({ yesNoVisible: vis, yesNoQuestion: question, sendType: sendType, arguments: args });\r\n        else {\r\n            if (send) {\r\n                var st = this.state.sendType;\r\n                switch (st) {\r\n                    case \"deleteRole\":\r\n                        await this.deleteRole(this.state.arguments);\r\n                        break;\r\n                    case \"saveAll\":\r\n                        await this.addUpdateRule();\r\n                        break;\r\n                }\r\n            }\r\n            this.setState({ yesNoVisible: vis, yesNoQuestion: \"\", sendType: \"\", arguments: [] });\r\n        }\r\n    }\r\n    async newRuleAdd() {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var eleman = document.getElementById(\"newrule\");\r\n        if (!eleman.value) {\r\n            this.props.toastShow(\"error\", \"Role Name cannot be null or empty!\");\r\n        \r\n            return false;\r\n        }\r\n        var orgId = localStorage.getItem(\"orgId\");\r\n        var appId = localStorage.getItem(\"appId\");\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            rules: [\r\n                {\r\n                    method: \"/recommendation/create\",\r\n                    methodType: \"recommendationCreate\",\r\n                    methodContentType: \"collection\",\r\n                    service: \"recommendationService\",\r\n                    permissions: [{\r\n                        role: eleman.value,\r\n                        permitted: {\r\n                            nodes: []\r\n                        },\r\n                        nonPermitted: {\r\n                            nodes: []\r\n                        }\r\n                    }]\r\n                }\r\n            ]\r\n        }\r\n        await this.props.newRuleAdd(model);\r\n        this.getCreateNodeRules();\r\n    }\r\n    async deleteRole(args) {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var id = args[0];\r\n        var index = args[1];\r\n        var orgId = localStorage.getItem('orgId')\r\n        var appId = localStorage.getItem('appId')\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            id: id\r\n        }\r\n        var success = await this.props.deleteRole(model);\r\n        if (success) {\r\n            var nodeCreateRules = [...this.state.nodeCreateRules]\r\n            var permissions = nodeCreateRules[0].roleRules.permissions;\r\n            permissions.splice(index, 1);\r\n            this.setState({ nodeCreateRules });\r\n        }\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <CCard>\r\n                <CRow className='m-2 border-bottom d-flex align-items-center'>\r\n                    <CCol className='col-6 pb-2'>\r\n                        <CCardTitle>Add/Update <b>\"Node Create\"</b> Permissions</CCardTitle>\r\n                    </CCol>\r\n                    <CCol className='col-6 d-grid gap-2 d-md-flex justify-content-md-end pb-2'>\r\n                        <CButton color='secondary' onClick={this.setVisible.bind(this, true)}>Add New Role</CButton>\r\n                        <CButton color='info' style={{\"color\":\"#fff\"}}\r\n                            onClick={this.setYesNoVisible.bind(this, true, \"Are you sure you want to save all?\", \"saveAll\", [this])}>Save All</CButton>\r\n                    </CCol>\r\n\r\n                    <CModal visible={this.state.visible} onClose={this.setVisible.bind(this, false)}>\r\n                        <CModalHeader>\r\n                            <CModalTitle>Add New Role</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalBody>\r\n                            <CFormInput type='text' placeholder='Role Name' name=\"newRule\" id=\"newrule\" />\r\n                        </CModalBody>\r\n                        <CModalFooter>\r\n                            <CButton color=\"secondary\" onClick={this.setVisible.bind(this, false)}>\r\n                                Close\r\n                            </CButton>\r\n                            <CButton color=\"primary\" onClick={this.newRuleAdd.bind(this)}>Create Role</CButton>\r\n                        </CModalFooter>\r\n                    </CModal>\r\n                    <CModal visible={this.state.yesNoVisible} onClose={this.setYesNoVisible.bind(this, false)}>\r\n                        <CModalHeader>\r\n                            <CModalTitle>{this.state.yesNoQuestion}</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalFooter>\r\n                            <CButton color=\"secondary\" onClick={this.setYesNoVisible.bind(this, false, null, null, null, false)}>\r\n                                No\r\n                            </CButton>\r\n                            <CButton color=\"primary\" onClick={this.setYesNoVisible.bind(this, false, null, null, null, true)}>Yes</CButton>\r\n                        </CModalFooter>\r\n                    </CModal>\r\n                </CRow>\r\n                <CCardBody style={cardText}>\r\n\r\n                    {this.state.nodeCreateRules.length > 0 &&\r\n\r\n                        this.state.nodeCreateRules[0].roleRules.permissions.map((item, index) => (\r\n                            <CCard className='mt-1'>\r\n                                <CCardBody>\r\n                                    <CCardTitle><b>\"{item.role}\"</b> Rules  <span style={fRight}>\r\n                                        <CButton color='danger'\r\n                                            onClick={this.setYesNoVisible.bind(this, true, \"Are you sure you want to delete \" + item.role + \" role?\", \"deleteRole\", [item._id, index, this])}\r\n                                            //onClick={this.deleteRole.bind(this,item._id,index)}\r\n                                            style={dangerIcon}>Delete Role</CButton></span></CCardTitle>\r\n                                    <CNav variant=\"tabs\" className='mt-4' role=\"tablist\" style={vars} >\r\n                                        <CNavItem>\r\n                                            <CNavLink\r\n                                                style={vars}\r\n                                                active={this.getSubActiveKey(this, 1, item._id)}\r\n                                                onClick={this.setSubActiveKey.bind(this, 1, item._id)}\r\n                                            >\r\n                                                Permitted\r\n                                            </CNavLink>\r\n                                        </CNavItem>\r\n                                        <CNavItem>\r\n                                            <CNavLink\r\n                                                style={vars}\r\n                                                active={this.getSubActiveKey(this, 2, item._id)}\r\n                                                onClick={this.setSubActiveKey.bind(this, 2, item._id)}\r\n                                            >\r\n                                                Non-Permitted\r\n                                            </CNavLink>\r\n                                        </CNavItem>\r\n\r\n                                    </CNav>\r\n                                    <CTabContent>\r\n                                        <CTabPane role=\"tabpanel\" className='p-3' aria-labelledby=\"home-tab\" visible={this.getSubActiveKey(this, 1, item._id)}>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Node Items</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    {item.permitted.nodes.map((c, i) => (\r\n                                                        <div>\r\n                                                            <CRow className='mt-2'>\r\n                                                                <CCol className='col-11'>\r\n                                                                    <CFormInput type='text' name='collectionName'\r\n                                                                        onChange={this.changeCollectionName.bind(this, index, i, \"permitted\")}\r\n                                                                        placeholder='Collection Name' value={c.collectionName} />\r\n                                                                </CCol>\r\n                                                                <CCol className='align-self-center'>\r\n                                                                    <span style={fRight}> <button type=\"button\"\r\n                                                                        onClick={this.removeCollection.bind(this, index, i, \"permitted\")}\r\n                                                                        class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            {Object.keys(c.contentData).map((key, keyIndex) => (\r\n                                                                <div>\r\n                                                                    <CRow className='mt-2'>\r\n                                                                        <CCol className='col-11'>\r\n                                                                            <CCard>\r\n                                                                                <CCardBody>\r\n                                                                                    <CRow className='mt-2 pb-2 border-bottom'>\r\n                                                                                        <CCol className='col-9'><CFormInput type='text' placeholder='Content Field'\r\n                                                                                            value={key} onChange={this.changeContentDataKey.bind(this, key, index, i, \"permitted\", keyIndex)} /></CCol>\r\n                                                                                        <CCol className='col-1 align-self-center'>\r\n                                                                                            <button type=\"button\"\r\n                                                                                            onClick={this.removeContentDataKey.bind(this, key, index, i, \"permitted\")}\r\n                                                                                                class=\"btn-close\" aria-label=\"Remove\" />\r\n                                                                                        </CCol>\r\n                                                                                    </CRow>\r\n                                                                                    {this.getContentData(c.contentData[key], key, index, i, \"permitted\")}\r\n                                                                                </CCardBody>\r\n                                                                            </CCard>\r\n                                                                        </CCol>\r\n                                                                    </CRow>\r\n\r\n\r\n                                                                </div>\r\n                                                            ))\r\n                                                            }\r\n\r\n                                                            <CRow className='mt-2 justify-content-center'>\r\n                                                                <CCol className='col-6 text-center'>\r\n                                                                    <CButton onClick={this.addNewContentData.bind(this, index, i, \"permitted\")}><CIcon icon={icon.cilPlus} />Add New Content Data for {c.collectionName}</CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            <CRow className='mt-2 pb-2'>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <CFormInput type='text' name='contentKeys'\r\n                                                                        onChange={this.changeCK.bind(this, index, i, \"permitted\")}\r\n                                                                        placeholder='Content Keys with comma' />\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n\r\n                                                            <CRow className='mt-2'>\r\n                                                                {c.contentKeys.map((val =>\r\n                                                                    <CCol className='col-3'>\r\n                                                                        {this.getContentKeysItems(val, index, i, \"permitted\")}\r\n                                                                    </CCol>\r\n                                                                ))}\r\n                                                            </CRow>\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </CCardBody>\r\n                                                <CCardFooter>\r\n                                                    <CRow className='mt-2 justify-content-center'>\r\n                                                        <CCol className='col-6 text-center'>\r\n                                                            <CButton onClick={this.addNewCollection.bind(this, index, \"permitted\")}><CIcon icon={icon.cilPlus} />Add New Collection for {item.role}</CButton>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                </CCardFooter>\r\n                                            </CCard>\r\n\r\n                                        </CTabPane>\r\n                                        <CTabPane role=\"tabpanel\" className='p-3' aria-labelledby=\"profile-tab\" visible={this.getSubActiveKey(this, 2, item._id)}>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Node Items</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    {item.nonPermitted.nodes.map((c, i) => (\r\n                                                        <div>\r\n                                                            <CRow className='mt-2'>\r\n                                                                <CCol className='col-11'>\r\n                                                                    <CFormInput type='text' name='collectionName'\r\n                                                                        onChange={this.changeNonPermittedCollectionName.bind(this, index, i, \"nonPermitted\")} placeholder='Collection Name' value={c.collectionName} />\r\n                                                                </CCol>\r\n                                                                <CCol className='align-self-center'>\r\n                                                                    <span style={fRight}> <button type=\"button\"\r\n                                                                        onClick={this.removeCollection.bind(this, index, i, \"nonPermitted\")}\r\n                                                                        class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            {Object.keys(c.contentData).map((key, keyIndex) => (\r\n                                                                <div>\r\n                                                                    <CRow className='mt-2'>\r\n                                                                        <CCol className='col-11'>\r\n                                                                            <CCard>\r\n                                                                                <CCardBody>\r\n                                                                                    <CRow className='mt-2 pb-2 border-bottom'>\r\n                                                                                        <CCol className='col-9'><CFormInput type='text' placeholder='Content Field'\r\n                                                                                            value={key} onChange={this.changeContentDataKey.bind(this, key, index, i, \"nonPermitted\", keyIndex)} /></CCol>\r\n                                                                                        <CCol className='col-1 align-self-center'>\r\n                                                                                            <button type=\"button\"\r\n                                                                                            onClick={this.removeContentDataKey.bind(this, key, index, i, \"nonPermitted\")}\r\n                                                                                                class=\"btn-close\" aria-label=\"Remove\" />\r\n                                                                                        </CCol>\r\n                                                                                    </CRow>\r\n                                                                                    {this.getContentData(c.contentData[key], key, index, i, \"nonPermitted\")}\r\n                                                                                </CCardBody>\r\n                                                                            </CCard>\r\n                                                                        </CCol>\r\n                                                                    </CRow>\r\n\r\n\r\n                                                                </div>\r\n                                                            ))\r\n                                                            }\r\n\r\n                                                            <CRow className='mt-2 justify-content-center'>\r\n                                                                <CCol className='col-6 text-center'>\r\n                                                                    <CButton onClick={this.addNewContentData.bind(this, index, i, \"nonPermitted\")}><CIcon icon={icon.cilPlus} />Add New Content Data for {c.collectionName}</CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            <CRow className='mt-2 pb-2'>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <CFormInput type='text' name='contentKeys'\r\n                                                                        onChange={this.changeCK.bind(this, index, i, \"nonPermitted\")}\r\n                                                                        placeholder='Content Keys with comma' />\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n\r\n                                                            <CRow className='mt-2'>\r\n                                                                {c.contentKeys.map((val =>\r\n                                                                    <CCol className='col-3'>\r\n                                                                        {this.getContentKeysItems(val, index, i, \"nonPermitted\")}\r\n                                                                    </CCol>\r\n                                                                ))}\r\n                                                            </CRow>\r\n\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </CCardBody>\r\n                                                <CCardFooter>\r\n                                                    <CRow className='mt-2 justify-content-center'>\r\n                                                        <CCol className='col-6 text-center'>\r\n                                                            <CButton onClick={this.addNewCollection.bind(this, index, \"nonPermitted\")}><CIcon icon={icon.cilPlus} />Add New Collection for {item.role}</CButton>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                </CCardFooter>\r\n                                            </CCard>\r\n\r\n                                        </CTabPane>\r\n\r\n                                    </CTabContent>\r\n                                </CCardBody>\r\n                            </CCard>\r\n                        ))}\r\n                </CCardBody>\r\n\r\n\r\n            </CCard>\r\n        )\r\n    }\r\n}\r\nexport default CreateNodes","import React, { Component } from 'react';\r\nimport CIcon from '@coreui/icons-react';\r\nimport * as icon from '@coreui/icons';\r\nimport { Link } from 'react-router-dom'\r\nimport { Methods, get, postWithSavedToken } from \"../../../../genetousApi\"\r\nimport { format } from 'date-fns';\r\nimport { ToastContainer, toast,Slide } from 'react-toastify';\r\nimport Popup from '../../../widgets/Popup';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CCard,\r\n    CCardBody,\r\n    CRow,\r\n    CCol,\r\n    CCardTitle,\r\n    CFormInput,\r\n    CButton,\r\n    CFormSelect,\r\n    CModal,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CCardHeader,\r\n    CCardFooter,\r\n} from '@coreui/react'\r\nimport { bool } from 'prop-types';\r\nconst vars = {\r\n    'cursor': \"pointer\",\r\n    \"color\": \"rgb(33, 37, 41)\",\r\n    \"background-color\": \"#fff\"\r\n}\r\nconst activeLink = {\r\n    'cursor': \"pointer\",\r\n    \"background-color\": \"rgb(33, 37, 41)\",\r\n    \"color\": \"#fff\"\r\n}\r\nconst dangerIcon = {\r\n    \"color\": \"#f7f2f2\"\r\n}\r\nconst fRight = {\r\n    \"float\": \"right\"\r\n}\r\nconst cardText = { \"height\": \"620px\", \"overflow-y\": \"scroll\" }\r\nconst arrayLabels = [\"not\", \"in\",\"eq\"]\r\nexport class DeleteNodes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nodeDeleteRules: [],\r\n            activeKey: 1,\r\n            activeSubKeys: [1, 1, 1, 1, 1],\r\n            subKeys: [],\r\n            changedTypes: [],\r\n            visible: false,\r\n            yesNoVisible: false,\r\n            yesNoQuestion: \"\",\r\n            arguments: [],\r\n            sendType: \"\",\r\n            compare:[\"eq\",\"not\",\"gt\",\"gte\",\"lt\",\"lte\",\"in\"]\r\n\r\n        }\r\n    }\r\n\r\n    setSubActiveKey(key, id) {\r\n        const { subKeys } = this.state;\r\n        var index = subKeys.findIndex(x => x.id === id);\r\n        subKeys[index].activeKey = key;\r\n        this.setState({ subKeys });\r\n        return false;\r\n    }\r\n    getSubActiveKey(e, key, id) {\r\n        const { subKeys } = this.state;\r\n        var index = subKeys.findIndex(x => x.id === id);\r\n        return key == subKeys[index].activeKey\r\n    }\r\n    componentDidMount() {\r\n        this.getDeleteNodeRules();\r\n    }\r\n    async getDeleteNodeRules() {\r\n        var orgId = localStorage.getItem('orgId')\r\n        var appId = localStorage.getItem('appId')\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            service: \"recommendationService\",\r\n            methodContentType: \"collection\",\r\n            methodType: \"recommendationDelete\"\r\n        }\r\n        var d = { ...this.state.nodeDeleteRules };\r\n        d = await this.props.getRules(model);\r\n        var sk = [];\r\n        if (d.length > 0) {\r\n            var rr = d[0];\r\n            rr.roleRules.permissions.map(m => {\r\n                var data = {\r\n                    id: m._id,\r\n                    activeKey: 1\r\n                }\r\n                sk.push(data);\r\n            })\r\n        }\r\n\r\n        this.setState({ nodeDeleteRules: d, subKeys: sk });\r\n    }\r\n    getValueType(val) {\r\n        if (Array.isArray(val)) {\r\n            if (val.length > 0) {\r\n                return typeof val[0]\r\n            }\r\n        }\r\n        return typeof val;\r\n    }\r\n    getContentData(item, key, permIndex, collectionIndex, type) {\r\n        return (\r\n            <div>\r\n                {Object.keys(item).length < 1 &&\r\n                    <CRow className='mt-2 justify-content-center'>\r\n                        <CCol className='col-2'>\r\n                            <CButton color='primary' onClick={this.addNewContentDataSub.bind(this, key, permIndex, collectionIndex, type)}><CIcon style={dangerIcon} icon={icon.cilPlus} /></CButton>\r\n                        </CCol>\r\n                    </CRow>\r\n                }\r\n                {typeof item == \"object\" &&\r\n                    Object.keys(item).map((k, i) => {\r\n                        return (\r\n                            <div>\r\n                                <CRow className='mt-2'>\r\n                                    <CCol className='col-3'>\r\n                                        <CFormSelect onChange={this.eqChanged.bind(this, key, k, permIndex, collectionIndex, type, i)}\r\n                                            value={k} name={this.getValueType(item[k])}>\r\n                                            <option value=\"eq\">{'='}</option>\r\n                                            <option value=\"not\">{'!='}</option>\r\n                                            <option value=\"gt\">{'>'}</option>\r\n                                            <option value=\"gte\">{'>='}</option>\r\n                                            <option value=\"lt\">{'<'}</option>\r\n                                            <option value=\"lte\">{'<='}</option>\r\n                                            <option value=\"in\">{'in'}</option>\r\n                                        </CFormSelect>\r\n                                    </CCol>\r\n                                    <CCol className='col-3'>\r\n                                        <CFormInput type='text' name='value' onChange={this.changeContentDataSubKey.bind(this, key, k, permIndex, collectionIndex, type)} placeholder={arrayLabels.indexOf(k) < 0 ? \"value\" : \"values with comma\"} value={arrayLabels.indexOf(k) < 0 ? item[k] : this.value} />\r\n                                    </CCol>\r\n                                    <CCol className='col-3'>\r\n                                        <CFormSelect id={key + \"_\" + k + \"_\" + permIndex + \"_\" + collectionIndex + \"_\" + type}\r\n                                            onChange={this.typeChanged.bind(this, key, k, permIndex, collectionIndex, type, i)}\r\n                                            value={this.getValueType(item[k])} \r\n                                            disabled={item[k].length<1}>\r\n                                            <option value=\"string\">{'String'}</option>\r\n                                            <option value=\"number\">{'Integer'}</option>\r\n                                        </CFormSelect>\r\n                                    </CCol>\r\n                                    <CCol className='col-1 align-self-center'>\r\n                                        <button type=\"button\"                        \r\n                                            onClick={this.removeContentDataSubKey.bind(this, key, k, permIndex, collectionIndex, type)}\r\n                                            class=\"btn-close\" aria-label=\"Remove\"/>\r\n                                    </CCol>\r\n                                   \r\n                                    {Object.keys(item).length - 1 == i &&\r\n                                        <CCol className='col-1'>\r\n                                            <CButton color='primary' onClick={this.addNewContentDataSub.bind(this, key, permIndex, collectionIndex, type)}><CIcon style={dangerIcon} icon={icon.cilPlus} /></CButton>\r\n                                        </CCol>\r\n                                    }\r\n                                </CRow>\r\n                                {arrayLabels.indexOf(k) >= 0 &&\r\n                                    <CRow className='mt-2'>\r\n                                        {item[k].map((val =>\r\n                                            <CCol className='col-3'>\r\n                                                {this.getArrayItems(val, key, k, permIndex, collectionIndex, type)}\r\n                                            </CCol>\r\n                                        ))}\r\n                                    </CRow>\r\n                                }\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n    getArrayItems(val, key, k, permIndex, collectionIndex, type) {\r\n        return (\r\n            <p className=\"p-1 rounded border border-primary text-primary\">{val}\r\n                <span style={fRight}> <button type=\"button\"\r\n                    onClick={this.removeContentDataSubKeyArray.bind(this, key, k, permIndex, collectionIndex, type, val)}\r\n                    class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n            </p>\r\n        )\r\n    }\r\n\r\n    eqChanged(key, k, permIndex, collectionIndex, type, keyIndex, e) {\r\n        var nodeDeleteRules = [...this.state.nodeDeleteRules]\r\n        var collection = nodeDeleteRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex]\r\n        var newContentData = {}\r\n\r\n        Object.keys(collection.contentData[key]).map((ki, i) => {\r\n            if (keyIndex == i) {\r\n                if (arrayLabels.indexOf(e.target.value) < 0)\r\n                    newContentData[e.target.value] = collection.contentData[key][ki]\r\n                else {\r\n                    var arr = this.getValueAsArrayByType(collection.contentData[key][ki], e.target.name);\r\n                    newContentData[e.target.value] = arr\r\n                }\r\n            } else {\r\n                newContentData[ki] = collection.contentData[key][ki]\r\n            }\r\n        })\r\n        collection.contentData[key] = newContentData;\r\n        this.setState({ nodeDeleteRules });\r\n    }\r\n    typeChanged(key, k, permIndex, collectionIndex, type, keyIndex, e) {\r\n        var nodeDeleteRules = [...this.state.nodeDeleteRules]\r\n        var collection = nodeDeleteRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex]\r\n        var newContentData = {}\r\n        Object.keys(collection.contentData[key]).map((ki, i) => {\r\n            if (keyIndex == i) {\r\n                if (arrayLabels.indexOf(k) < 0)\r\n                    newContentData[k] = this.convert(collection.contentData[key][ki], e.target.value);\r\n                else {\r\n                    var arr = this.convert(collection.contentData[key][ki], e.target.value);\r\n                    newContentData[k] = arr\r\n                }\r\n            } else {\r\n                newContentData[ki] = collection.contentData[key][ki]\r\n            }\r\n        })\r\n        collection.contentData[key] = newContentData;\r\n        this.setState({ nodeDeleteRules });\r\n    }\r\n    removeContentDataSubKey(key, k, permIndex, collectionIndex, type) {\r\n        var nodeDeleteRules = [...this.state.nodeDeleteRules]\r\n        var collection = nodeDeleteRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex]\r\n        delete collection.contentData[key][k];\r\n        this.setState({ nodeDeleteRules });\r\n\r\n    }\r\n    removeContentDataSubKeyArray(key, k, permIndex, collectionIndex, type, val) {\r\n        var nodeDeleteRules = [...this.state.nodeDeleteRules]\r\n        var collection = nodeDeleteRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex]\r\n        const index = collection.contentData[key][k].indexOf(val);\r\n        if (index > -1) {\r\n            collection.contentData[key][k].splice(index, 1);\r\n        }\r\n        this.setState({ nodeDeleteRules });\r\n\r\n    }\r\n\r\n    changeContentDataSubKey(key, k, permIndex, collectionIndex, type, e) {\r\n        var eleman = document.getElementById(key + \"_\" + k + \"_\" + permIndex + \"_\" + collectionIndex + \"_\" + type)\r\n        var nodeDeleteRules = [...this.state.nodeDeleteRules]\r\n        var collection = nodeDeleteRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex];\r\n        if (arrayLabels.indexOf(k) < 0)\r\n            collection.contentData[key][k] = e.target.value;\r\n        else {\r\n            if (e.target.value.toString().indexOf(\",\") >= 0) {\r\n                var arr = this.getValueAsArrayByType(e.target.value, eleman.value);\r\n                switch (eleman.value) {\r\n                    case \"string\":\r\n                        if (arr[0] && collection.contentData[key][k].indexOf(arr[0]) < 0) {\r\n                            collection.contentData[key][k].push(arr[0]);\r\n                        }\r\n                        break;\r\n                    case \"number\":\r\n                        if (!isNaN(arr[0]) && collection.contentData[key][k].indexOf(arr[0]) < 0) {\r\n                            collection.contentData[key][k].push(arr[0]);\r\n                        }\r\n                        break;\r\n                }\r\n                e.target.value = \"\";\r\n            }\r\n            else if (e.target.value.toString().trim() == \"\") {\r\n                e.target.value = \"\";\r\n            }\r\n        }\r\n        this.setState({ nodeDeleteRules });\r\n\r\n    }\r\n    addNewContentDataSub(key, permIndex, collectionIndex, type) {\r\n        var nodeDeleteRules = [...this.state.nodeDeleteRules]\r\n        var collection = nodeDeleteRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex]\r\n        for(var i=0;i<this.state.compare.length;++i){\r\n            if(!(this.state.compare[i] in collection.contentData[key])){\r\n                 if(i>0 && collection.contentData[key][this.state.compare[i-1]].length>0){\r\n                    collection.contentData[key][this.state.compare[i]] = [];\r\n                }else if(i==0){\r\n                    collection.contentData[key][this.state.compare[i]] = [];\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        this.setState({ nodeDeleteRules });\r\n\r\n    }\r\n    removeContentDataKey(key, permIndex, collectionIndex, type) {\r\n        var nodeDeleteRules = [...this.state.nodeDeleteRules]\r\n        var collection = nodeDeleteRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex]\r\n        delete collection.contentData[key];\r\n        this.setState({ nodeDeleteRules });\r\n\r\n    }\r\n    changeContentDataKey(key, permIndex, collectionIndex, type, keyIndex, e) {\r\n        var nodeDeleteRules = [...this.state.nodeDeleteRules]\r\n        var collection = nodeDeleteRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex]\r\n        var newContentData = {}\r\n        Object.keys(collection.contentData).map((k, i) => {\r\n            if (keyIndex == i) {\r\n                newContentData[e.target.value] = collection.contentData[k]\r\n            } else {\r\n                newContentData[k] = collection.contentData[k]\r\n            }\r\n        })\r\n        collection.contentData = newContentData;\r\n        this.setState({ nodeDeleteRules });\r\n\r\n    }\r\n    changeCollectionName(permIndex, collectionIndex, type, e) {\r\n        var nodeDeleteRules = [...this.state.nodeDeleteRules]\r\n        var collection = nodeDeleteRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex]\r\n        collection[\"collectionName\"] = e.target.value\r\n        this.setState({ nodeDeleteRules });\r\n    }\r\n    changeNonPermittedCollectionName(permIndex, collectionIndex, type, e) {\r\n        var nodeDeleteRules = [...this.state.nodeDeleteRules]\r\n        var collection = nodeDeleteRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex]\r\n        collection[\"collectionName\"] = e.target.value;\r\n        this.setState({ nodeDeleteRules });\r\n    }\r\n    addNewContentData(permIndex, collectionIndex, type) {\r\n        var nodeDeleteRules = [...this.state.nodeDeleteRules]\r\n        var collection = nodeDeleteRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex]\r\n        collection.contentData[\"newkey\"] = {};\r\n        this.setState({ nodeDeleteRules });\r\n    }\r\n    addNewCollection(permIndex, type) {\r\n        var nodeDeleteRules = [...this.state.nodeDeleteRules]\r\n        var collection = nodeDeleteRules[0].roleRules.permissions[permIndex][type].nodes;\r\n        var model = {\r\n            collectionName: \"collectionName\",\r\n            contentData: {},\r\n            contentKeys: []\r\n        }\r\n        collection.push(model);\r\n        this.setState({ nodeDeleteRules });\r\n    }\r\n    removeCollection(permIndex, index, type) {\r\n        var nodeDeleteRules = [...this.state.nodeDeleteRules]\r\n        var collection = nodeDeleteRules[0].roleRules.permissions[permIndex][type].nodes;\r\n        collection.splice(index, 1)\r\n        this.setState({ nodeDeleteRules });\r\n    }\r\n    changeCK(permIndex, collectionIndex, type, e) {\r\n        var nodeDeleteRules = [...this.state.nodeDeleteRules]\r\n        var collection = nodeDeleteRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex]\r\n        if (e.target.value.toString().indexOf(\",\") >= 0) {\r\n            var arr = this.getValueAsArrayByType(e.target.value, \"string\");\r\n            if (arr[0] && collection.contentKeys.indexOf(arr[0]) < 0) {\r\n                collection.contentKeys.push(arr[0]);\r\n            }\r\n            e.target.value = \"\";\r\n        }\r\n        this.setState({ nodeDeleteRules });\r\n    }\r\n    removeContentKeys(val, permIndex, collectionIndex, type, e) {\r\n        var nodeDeleteRules = [...this.state.nodeDeleteRules]\r\n        var collection = nodeDeleteRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex]\r\n        const index = collection.contentKeys.indexOf(val);\r\n        if (index > -1) {\r\n            collection.contentKeys.splice(index, 1);\r\n        }\r\n        this.setState({ nodeDeleteRules });\r\n    }\r\n    getContentKeysItems(val, permIndex, collectionIndex, type) {\r\n        return (\r\n            <p className=\"p-1 rounded border border-primary text-primary\">{val}\r\n                <span style={fRight}> <button type=\"button\"\r\n                    onClick={this.removeContentKeys.bind(this, val, permIndex, collectionIndex, type)}\r\n                    class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n            </p>\r\n        )\r\n    }\r\n    getValueAsArray(val) {\r\n        var arr = []\r\n        var d = val.toString();\r\n        var ind = d.indexOf(',');\r\n        if (ind >= 0) {\r\n            arr = val.split(\",\");\r\n        }\r\n        else\r\n            arr.push(val)\r\n\r\n        return arr;\r\n    }\r\n    getValueAsArrayByType(val, type) {\r\n        var arr = []\r\n        var d = val.toString();\r\n        var ind = d.indexOf(',');\r\n        if (ind >= 0) {\r\n            var arrElems = val.split(\",\");\r\n            switch (type) {\r\n                case \"string\":\r\n                    arr = arrElems;\r\n                    break;\r\n                case \"number\":\r\n                    arrElems.map((item) => {\r\n                        arr.push(parseInt(item));\r\n                    });\r\n            }\r\n        }\r\n        else {\r\n            switch (type) {\r\n                case \"string\":\r\n                    if (val) {\r\n                        arr.push(val)\r\n                    }\r\n                    break;\r\n                case \"number\":\r\n                    if (!isNaN(val)) {\r\n                        arr.push(val)\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return arr;\r\n    }\r\n    convert(val, type) {\r\n        if (!Array.isArray(val)) {\r\n            switch (type) {\r\n                case \"string\":\r\n                    return val.toString();\r\n                case \"number\":\r\n                    return parseInt(val);\r\n            }\r\n        } else {\r\n            switch (type) {\r\n                case \"string\":\r\n                    var arr = [];\r\n                    val.map((item) => {\r\n                        arr.push(item.toString());\r\n                    });\r\n                    return arr;\r\n                case \"number\":\r\n                    var arr = [];\r\n                    val.map((item) => {\r\n                        var item = parseInt(item);\r\n                        if (!isNaN(item))\r\n                            arr.push(item);\r\n                    });\r\n                    return arr;\r\n            }\r\n\r\n        }\r\n    }\r\n    async addUpdateRule() {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var nodeDeleteRules = [...this.state.nodeDeleteRules]\r\n        var rule = nodeDeleteRules[0].roleRules;\r\n        var rls = {\r\n            method: rule.method,\r\n            methodType: rule.methodType,\r\n            methodContentType: rule.methodContentType,\r\n            service: rule.service,\r\n            permissions: rule.permissions\r\n        }\r\n        var orgId = localStorage.getItem(\"orgId\");\r\n        var appId = localStorage.getItem(\"appId\");\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            rules: [rls]\r\n        }\r\n        this.props.addUpdateRule(model);\r\n    \r\n    }\r\n    setVisible(vis) {\r\n        this.setState({ visible: vis });\r\n    }\r\n    async setYesNoVisible(vis, question, sendType, args, send) {\r\n        if (vis)\r\n            this.setState({ yesNoVisible: vis, yesNoQuestion: question, sendType: sendType, arguments: args });\r\n        else {\r\n            if (send) {\r\n                var st = this.state.sendType;\r\n                switch (st) {\r\n                    case \"deleteRole\":\r\n                        await this.deleteRole(this.state.arguments);\r\n                        break;\r\n                    case \"saveAll\":\r\n                        await this.addUpdateRule();\r\n                        break;\r\n                }\r\n            }\r\n            this.setState({ yesNoVisible: vis, yesNoQuestion: \"\", sendType: \"\", arguments: [] });\r\n        }\r\n    }\r\n    async newRuleAdd() {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var eleman = document.getElementById(\"newrule\");\r\n        if (!eleman.value) {\r\n            this.props.toastShow(\"error\",\"Role Name cannot be null or empty!\");\r\n            return false;\r\n        }\r\n        var orgId = localStorage.getItem(\"orgId\");\r\n        var appId = localStorage.getItem(\"appId\");\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            rules: [\r\n                {\r\n                    method: \"/recommendation/delete/nodes\",\r\n                    methodType: \"recommendationDelete\",\r\n                    methodContentType: \"collection\",\r\n                    service: \"recommendationService\",\r\n                    permissions: [{\r\n                        role: eleman.value,\r\n                        permitted: {\r\n                            nodes: []\r\n                        },\r\n                        nonPermitted: {\r\n                            nodes: []\r\n                        }\r\n                    }]\r\n                }\r\n            ]\r\n        }\r\n        await this.props.newRuleAdd(model);\r\n        this.getDeleteNodeRules();\r\n    }\r\n    async deleteRole(args) {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var id = args[0];\r\n        var index = args[1];\r\n        var orgId = localStorage.getItem('orgId')\r\n        var appId = localStorage.getItem('appId')\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            id: id\r\n        }\r\n        var success = await this.props.deleteRole(model);\r\n      \r\n        if (success) {\r\n            var nodeDeleteRules = [...this.state.nodeDeleteRules]\r\n            var permissions = nodeDeleteRules[0].roleRules.permissions;\r\n            permissions.splice(index, 1);\r\n            this.setState({ nodeDeleteRules });\r\n        }\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <CCard>\r\n                <CRow className='m-2 border-bottom d-flex align-items-center'>\r\n                    <CCol className='col-6 pb-2'>\r\n                        <CCardTitle>Add/Update <b>\"Node Delete\"</b> Permissions</CCardTitle>\r\n                    </CCol>\r\n                    <CCol className='col-6 d-grid gap-2 d-md-flex justify-content-md-end pb-2'>\r\n                        <CButton color='secondary' onClick={this.setVisible.bind(this, true)}>Add New Role</CButton>\r\n                        <CButton color='info' style={{\"color\":\"#fff\"}}\r\n                            onClick={this.setYesNoVisible.bind(this, true, \"Are you sure you want to save all?\", \"saveAll\", [this])}>Save All</CButton>\r\n                    </CCol>\r\n\r\n                    <CModal visible={this.state.visible} onClose={this.setVisible.bind(this, false)}>\r\n                        <CModalHeader>\r\n                            <CModalTitle>Add New Role</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalBody>\r\n                            <CFormInput type='text' placeholder='Role Name' name=\"newRule\" id=\"newrule\" />\r\n                        </CModalBody>\r\n                        <CModalFooter>\r\n                            <CButton color=\"secondary\" onClick={this.setVisible.bind(this, false)}>\r\n                                Close\r\n                            </CButton>\r\n                            <CButton color=\"primary\" onClick={this.newRuleAdd.bind(this)}>Create Role</CButton>\r\n                        </CModalFooter>\r\n                    </CModal>\r\n                    <CModal visible={this.state.yesNoVisible} onClose={this.setYesNoVisible.bind(this, false)}>\r\n                        <CModalHeader>\r\n                            <CModalTitle>{this.state.yesNoQuestion}</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalFooter>\r\n                            <CButton color=\"secondary\" onClick={this.setYesNoVisible.bind(this, false, null, null, null, false)}>\r\n                                No\r\n                            </CButton>\r\n                            <CButton color=\"primary\" onClick={this.setYesNoVisible.bind(this, false, null, null, null, true)}>Yes</CButton>\r\n                        </CModalFooter>\r\n                    </CModal>\r\n                </CRow>\r\n                <CCardBody style={cardText}>\r\n\r\n                    {this.state.nodeDeleteRules.length > 0 &&\r\n\r\n                        this.state.nodeDeleteRules[0].roleRules.permissions.map((item, index) => (\r\n                            <CCard className='mt-1'>\r\n                                <CCardBody>\r\n                                    <CCardTitle><b>\"{item.role}\"</b> Rules  <span style={fRight}>\r\n                                        <CButton color='danger'\r\n                                            onClick={this.setYesNoVisible.bind(this, true, \"Are you sure you want to delete \" + item.role + \" role?\", \"deleteRole\", [item._id, index, this])}\r\n                                            //onClick={this.deleteRole.bind(this,item._id,index)}\r\n                                            style={dangerIcon}>Delete Role</CButton></span></CCardTitle>\r\n                                    <CNav variant=\"tabs\" className='mt-4' role=\"tablist\" style={vars} >\r\n                                        <CNavItem>\r\n                                            <CNavLink\r\n                                                style={vars}\r\n                                                active={this.getSubActiveKey(this, 1, item._id)}\r\n                                                onClick={this.setSubActiveKey.bind(this, 1, item._id)}\r\n                                            >\r\n                                                Permitted\r\n                                            </CNavLink>\r\n                                        </CNavItem>\r\n                                        <CNavItem>\r\n                                            <CNavLink\r\n                                                style={vars}\r\n                                                active={this.getSubActiveKey(this, 2, item._id)}\r\n                                                onClick={this.setSubActiveKey.bind(this, 2, item._id)}\r\n                                            >\r\n                                                Non-Permitted\r\n                                            </CNavLink>\r\n                                        </CNavItem>\r\n\r\n                                    </CNav>\r\n                                    <CTabContent>\r\n                                        <CTabPane role=\"tabpanel\" className='p-3' aria-labelledby=\"home-tab\" visible={this.getSubActiveKey(this, 1, item._id)}>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Node Items</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    {item.permitted.nodes.map((c, i) => (\r\n                                                        <div>\r\n                                                            <CRow className='mt-2'>\r\n                                                                <CCol className='col-11'>\r\n                                                                    <CFormInput type='text' name='collectionName'\r\n                                                                        onChange={this.changeCollectionName.bind(this, index, i, \"permitted\")}\r\n                                                                        placeholder='Collection Name' value={c.collectionName} />\r\n                                                                </CCol>\r\n                                                                <CCol className='align-self-center'>\r\n                                                                    <span style={fRight}> <button type=\"button\"\r\n                                                                        onClick={this.removeCollection.bind(this, index, i, \"permitted\")}\r\n                                                                        class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            {Object.keys(c.contentData).map((key, keyIndex) => (\r\n                                                                <div>\r\n                                                                    <CRow className='mt-2'>\r\n                                                                        <CCol className='col-11'>\r\n                                                                            <CCard>\r\n                                                                                <CCardBody>\r\n                                                                                    <CRow className='mt-2 pb-2 border-bottom'>\r\n                                                                                        <CCol className='col-9'><CFormInput type='text' placeholder='Content Field'\r\n                                                                                            value={key} onChange={this.changeContentDataKey.bind(this, key, index, i, \"permitted\", keyIndex)} /></CCol>\r\n                                                                                        <CCol className='col-1 align-self-center'>\r\n                                                                                            <button type=\"button\"\r\n                                                                                            onClick={this.removeContentDataKey.bind(this, key, index, i, \"permitted\")}\r\n                                                                                                class=\"btn-close\" aria-label=\"Remove\" />\r\n                                                                                        </CCol>\r\n                                                                                    </CRow>\r\n                                                                                    {this.getContentData(c.contentData[key], key, index, i, \"permitted\")}\r\n                                                                                </CCardBody>\r\n                                                                            </CCard>\r\n                                                                        </CCol>\r\n                                                                    </CRow>\r\n\r\n\r\n                                                                </div>\r\n                                                            ))\r\n                                                            }\r\n\r\n                                                            <CRow className='mt-2 justify-content-center'>\r\n                                                                <CCol className='col-6 text-center'>\r\n                                                                    <CButton onClick={this.addNewContentData.bind(this, index, i, \"permitted\")}><CIcon icon={icon.cilPlus} />Add New Content Data for {c.collectionName}</CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            <CRow className='mt-2 pb-2'>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <CFormInput type='text' name='contentKeys'\r\n                                                                        onChange={this.changeCK.bind(this, index, i, \"permitted\")}\r\n                                                                        placeholder='Content Keys with comma' />\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n\r\n                                                            <CRow className='mt-2'>\r\n                                                                {c.contentKeys.map((val =>\r\n                                                                    <CCol className='col-3'>\r\n                                                                        {this.getContentKeysItems(val, index, i, \"permitted\")}\r\n                                                                    </CCol>\r\n                                                                ))}\r\n                                                            </CRow>\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </CCardBody>\r\n                                                <CCardFooter>\r\n                                                    <CRow className='mt-2 justify-content-center'>\r\n                                                        <CCol className='col-6 text-center'>\r\n                                                            <CButton onClick={this.addNewCollection.bind(this, index, \"permitted\")}><CIcon icon={icon.cilPlus} />Add New Collection for {item.role}</CButton>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                </CCardFooter>\r\n                                            </CCard>\r\n\r\n                                        </CTabPane>\r\n                                        <CTabPane role=\"tabpanel\" className='p-3' aria-labelledby=\"profile-tab\" visible={this.getSubActiveKey(this, 2, item._id)}>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Node Items</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    {item.nonPermitted.nodes.map((c, i) => (\r\n                                                        <div>\r\n                                                            <CRow className='mt-2'>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <CFormInput type='text' name='collectionName'\r\n                                                                        onChange={this.changeNonPermittedCollectionName.bind(this, index, i, \"nonPermitted\")} placeholder='Collection Name' value={c.collectionName} />\r\n                                                                </CCol>\r\n                                                                <CCol className='align-self-center'>\r\n                                                                    <span style={fRight}> <button type=\"button\"\r\n                                                                        onClick={this.removeCollection.bind(this, index, i, \"nonPermitted\")}\r\n                                                                        class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            {Object.keys(c.contentData).map((key, keyIndex) => (\r\n                                                                <div>\r\n                                                                    <CRow className='mt-2'>\r\n                                                                        <CCol className='col-11'>\r\n                                                                            <CCard>\r\n                                                                                <CCardBody>\r\n                                                                                    <CRow className='mt-2 pb-2 border-bottom'>\r\n                                                                                        <CCol className='col-9'><CFormInput type='text' placeholder='Content Field'\r\n                                                                                            value={key} onChange={this.changeContentDataKey.bind(this, key, index, i, \"nonPermitted\", keyIndex)} /></CCol>\r\n                                                                                        <CCol className='col-1 align-self-center'>\r\n                                                                                            <button type=\"button\"\r\n                                                                                            onClick={this.removeContentDataKey.bind(this, key, index, i, \"nonPermitted\")}\r\n                                                                                                class=\"btn-close\" aria-label=\"Remove\" />\r\n                                                                                        </CCol>\r\n                                                                                    </CRow>\r\n                                                                                    {this.getContentData(c.contentData[key], key, index, i, \"nonPermitted\")}\r\n                                                                                </CCardBody>\r\n                                                                            </CCard>\r\n                                                                        </CCol>\r\n                                                                    </CRow>\r\n\r\n\r\n                                                                </div>\r\n                                                            ))\r\n                                                            }\r\n\r\n                                                            <CRow className='mt-2 justify-content-center'>\r\n                                                                <CCol className='col-6 text-center'>\r\n                                                                    <CButton onClick={this.addNewContentData.bind(this, index, i, \"nonPermitted\")}><CIcon icon={icon.cilPlus} />Add New Content Data for {c.collectionName}</CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            <CRow className='mt-2 pb-2'>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <CFormInput type='text' name='contentKeys'\r\n                                                                        onChange={this.changeCK.bind(this, index, i, \"nonPermitted\")}\r\n                                                                        placeholder='Content Keys with comma' />\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n\r\n                                                            <CRow className='mt-2'>\r\n                                                                {c.contentKeys.map((val =>\r\n                                                                    <CCol className='col-3'>\r\n                                                                        {this.getContentKeysItems(val, index, i, \"nonPermitted\")}\r\n                                                                    </CCol>\r\n                                                                ))}\r\n                                                            </CRow>\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </CCardBody>\r\n                                                <CCardFooter>\r\n                                                    <CRow className='mt-2 justify-content-center'>\r\n                                                        <CCol className='col-6 text-center'>\r\n                                                            <CButton onClick={this.addNewCollection.bind(this, index, \"nonPermitted\")}><CIcon icon={icon.cilPlus} />Add New Collection for {item.role}</CButton>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                </CCardFooter>\r\n                                            </CCard>\r\n                                        </CTabPane>\r\n\r\n                                    </CTabContent>\r\n                                </CCardBody>\r\n                            </CCard>\r\n                        ))}\r\n                </CCardBody>\r\n\r\n\r\n            </CCard>\r\n        )\r\n    }\r\n}\r\nexport default DeleteNodes","import React, { Component } from 'react';\r\nimport CIcon from '@coreui/icons-react';\r\nimport * as icon from '@coreui/icons';\r\nimport { Link } from 'react-router-dom'\r\nimport { format } from 'date-fns';\r\nimport { ToastContainer, toast,Slide } from 'react-toastify';\r\nimport Popup from '../../../widgets/Popup';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CCard,\r\n    CCardBody,\r\n    CRow,\r\n    CCol,\r\n    CCardTitle,\r\n    CFormInput,\r\n    CButton,\r\n    CFormSelect,\r\n    CModal,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CCardFooter,\r\n    CCardHeader,\r\n} from '@coreui/react'\r\nimport { bool } from 'prop-types';\r\nconst vars = {\r\n    'cursor': \"pointer\",\r\n    \"color\": \"rgb(33, 37, 41)\",\r\n    \"background-color\": \"#fff\"\r\n}\r\nconst activeLink = {\r\n    'cursor': \"pointer\",\r\n    \"background-color\": \"rgb(33, 37, 41)\",\r\n    \"color\": \"#fff\"\r\n}\r\nconst dangerIcon = {\r\n    \"color\": \"#f7f2f2\"\r\n}\r\nconst fRight = {\r\n    \"float\": \"right\"\r\n}\r\nconst cardText = { \"height\": \"620px\", \"overflow-y\": \"scroll\" }\r\nconst arrayLabels = [\"not\", \"in\",\"eq\"]\r\nexport class Relate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nodeRelateRules: [],\r\n            activeKey: 1,\r\n            activeSubKeys: [1, 1, 1, 1, 1],\r\n            subKeys: [],\r\n            changedTypes: [],\r\n            visible: false,\r\n            yesNoVisible: false,\r\n            yesNoQuestion: \"\",\r\n            arguments: [],\r\n            sendType: \"\",\r\n            compare:[\"eq\",\"not\",\"gt\",\"gte\",\"lt\",\"lte\",\"in\"]\r\n\r\n        }\r\n    }\r\n\r\n    setSubActiveKey(key, id) {\r\n        const { subKeys } = this.state;\r\n        var index = subKeys.findIndex(x => x.id === id);\r\n        subKeys[index].activeKey = key;\r\n        this.setState({ subKeys });\r\n        return false;\r\n    }\r\n    getSubActiveKey(e, key, id) {\r\n        const { subKeys } = this.state;\r\n        var index = subKeys.findIndex(x => x.id === id);\r\n        return key == subKeys[index].activeKey\r\n    }\r\n    componentDidMount() {\r\n        this.getRelateNodeRules();\r\n    }\r\n    async getRelateNodeRules() {\r\n        var orgId = localStorage.getItem('orgId')\r\n        var appId = localStorage.getItem('appId')\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            service: \"recommendationService\",\r\n            methodContentType: \"relation\",\r\n            methodType: \"recommendationCreate\"\r\n        }\r\n        var d = { ...this.state.nodeRelateRules };\r\n        d = await this.props.getRules(model);\r\n       \r\n        var sk = [];\r\n        if (d.length > 0) {\r\n            var rr = d[0];\r\n            rr.roleRules.permissions.map(m => {\r\n                var data = {\r\n                    id: m._id,\r\n                    activeKey: 1\r\n                }\r\n                sk.push(data);\r\n            })\r\n        }\r\n\r\n        this.setState({ nodeRelateRules: d, subKeys: sk });\r\n    }\r\n    getValueType(val) {\r\n        if (Array.isArray(val)) {\r\n            if (val.length > 0) {\r\n                return typeof val[0]\r\n            }\r\n        }\r\n        return typeof val;\r\n    }\r\n    getContentData(item, key, permIndex, collectionIndex, type, nodeType) {\r\n        return (\r\n            <div>\r\n                {Object.keys(item).length < 1 &&\r\n                    <CRow className='mt-2 justify-content-center'>\r\n                        <CCol className='col-2'>\r\n                            <CButton color='primary' onClick={this.addNewContentDataSub.bind(this, key, permIndex, collectionIndex, type, nodeType)}><CIcon style={dangerIcon} icon={icon.cilPlus} /></CButton>\r\n                        </CCol>\r\n                    </CRow>\r\n                }\r\n                {typeof item == \"object\" &&\r\n                    Object.keys(item).map((k, i) => {\r\n                        return (\r\n                            <div>\r\n                                <CRow className='mt-2'>\r\n                                    <CCol className='col-3'>\r\n                                        <CFormSelect onChange={this.eqChanged.bind(this, key, k, permIndex, collectionIndex, type, i, nodeType)}\r\n                                            value={k} name={this.getValueType(item[k])}>\r\n                                            <option value=\"eq\">{'='}</option>\r\n                                            <option value=\"not\">{'!='}</option>\r\n                                            <option value=\"gt\">{'>'}</option>\r\n                                            <option value=\"gte\">{'>='}</option>\r\n                                            <option value=\"lt\">{'<'}</option>\r\n                                            <option value=\"lte\">{'<='}</option>\r\n                                            <option value=\"in\">{'in'}</option>\r\n                                        </CFormSelect>\r\n                                    </CCol>\r\n                                    <CCol className='col-3'>\r\n                                        <CFormInput type='text' name='value' onChange={this.changeContentDataSubKey.bind(this, key, k, permIndex, collectionIndex, type, nodeType)} placeholder={arrayLabels.indexOf(k) < 0 ? \"value\" : \"values with comma\"} value={arrayLabels.indexOf(k) < 0 ? item[k] : this.value} />\r\n                                    </CCol>\r\n                                    <CCol className='col-3'>\r\n                                        <CFormSelect id={key + \"_\" + k + \"_\" + permIndex + \"_\" + collectionIndex + \"_\" + type}\r\n                                            onChange={this.typeChanged.bind(this, key, k, permIndex, collectionIndex, type, i, nodeType)}\r\n                                            value={this.getValueType(item[k])} \r\n                                            disabled={item[k].length<1}>\r\n                                            <option value=\"string\">{'String'}</option>\r\n                                            <option value=\"number\">{'Integer'}</option>\r\n                                        </CFormSelect>\r\n                                    </CCol>\r\n                                    <CCol className='col-1 align-self-center'>\r\n                                        <button type=\"button\"                        \r\n                                            onClick={this.removeContentDataSubKey.bind(this, key, k, permIndex, collectionIndex, type, nodeType)}\r\n                                            class=\"btn-close\" aria-label=\"Remove\"/>\r\n                                    </CCol>\r\n                                    \r\n                                    {Object.keys(item).length - 1 == i &&\r\n                                        <CCol className='col-1'>\r\n                                            <CButton color='primary' onClick={this.addNewContentDataSub.bind(this, key, permIndex, collectionIndex, type, nodeType)}><CIcon style={dangerIcon} icon={icon.cilPlus} /></CButton>\r\n                                        </CCol>\r\n                                    }\r\n                                </CRow>\r\n                                {arrayLabels.indexOf(k) >= 0 &&\r\n                                    <CRow className='mt-2'>\r\n                                        {item[k].map((val =>\r\n                                            <CCol className='col-3'>\r\n                                                {this.getArrayItems(val, key, k, permIndex, collectionIndex, type, nodeType)}\r\n                                            </CCol>\r\n                                        ))}\r\n                                    </CRow>\r\n                                }\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n    getArrayItems(val, key, k, permIndex, collectionIndex, type, nodeType) {\r\n        return (\r\n            <p className=\"p-1 rounded border border-primary text-primary\">{val}\r\n                <span style={fRight}> <button type=\"button\"\r\n                    onClick={this.removeContentDataSubKeyArray.bind(this, key, k, permIndex, collectionIndex, type, val, nodeType)}\r\n                    class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n            </p>\r\n        )\r\n    }\r\n\r\n    eqChanged(key, k, permIndex, collectionIndex, type, keyIndex, nodeType, e) {\r\n        var nodeRelateRules = [...this.state.nodeRelateRules]\r\n        var collection = nodeRelateRules[0].roleRules.permissions[permIndex][type][nodeType][collectionIndex]\r\n        var newContentData = {}\r\n\r\n        Object.keys(collection.contentData[key]).map((ki, i) => {\r\n            if (keyIndex == i) {\r\n                if (arrayLabels.indexOf(e.target.value) < 0)\r\n                    newContentData[e.target.value] = collection.contentData[key][ki]\r\n                else {\r\n                    var arr = this.getValueAsArrayByType(collection.contentData[key][ki], e.target.name);\r\n                    newContentData[e.target.value] = arr\r\n                }\r\n            } else {\r\n                newContentData[ki] = collection.contentData[key][ki]\r\n            }\r\n        })\r\n        collection.contentData[key] = newContentData;\r\n        this.setState({ nodeRelateRules });\r\n    }\r\n    typeChanged(key, k, permIndex, collectionIndex, type, keyIndex, nodeType, e) {\r\n        var nodeRelateRules = [...this.state.nodeRelateRules]\r\n        var collection = nodeRelateRules[0].roleRules.permissions[permIndex][type][nodeType][collectionIndex]\r\n        var newContentData = {}\r\n        Object.keys(collection.contentData[key]).map((ki, i) => {\r\n            if (keyIndex == i) {\r\n                if (arrayLabels.indexOf(k) < 0)\r\n                    newContentData[k] = this.convert(collection.contentData[key][ki], e.target.value);\r\n                else {\r\n                    var arr = this.convert(collection.contentData[key][ki], e.target.value);\r\n                    newContentData[k] = arr\r\n                }\r\n            } else {\r\n                newContentData[ki] = collection.contentData[key][ki]\r\n            }\r\n        })\r\n        collection.contentData[key] = newContentData;\r\n        this.setState({ nodeRelateRules });\r\n    }\r\n    removeContentDataSubKey(key, k, permIndex, collectionIndex, type, nodeType) {\r\n        var nodeRelateRules = [...this.state.nodeRelateRules]\r\n        var collection = nodeRelateRules[0].roleRules.permissions[permIndex][type][nodeType][collectionIndex]\r\n        delete collection.contentData[key][k];\r\n        this.setState({ nodeRelateRules });\r\n\r\n    }\r\n    removeContentDataSubKeyArray(key, k, permIndex, collectionIndex, type, val, nodeType) {\r\n        var nodeRelateRules = [...this.state.nodeRelateRules]\r\n        var collection = nodeRelateRules[0].roleRules.permissions[permIndex][type][nodeType][collectionIndex]\r\n        const index = collection.contentData[key][k].indexOf(val);\r\n        if (index > -1) {\r\n            collection.contentData[key][k].splice(index, 1);\r\n        }\r\n        this.setState({ nodeRelateRules });\r\n\r\n    }\r\n\r\n    changeContentDataSubKey(key, k, permIndex, collectionIndex, type, nodeType, e) {\r\n        var eleman = document.getElementById(key + \"_\" + k + \"_\" + permIndex + \"_\" + collectionIndex + \"_\" + type)\r\n        var nodeRelateRules = [...this.state.nodeRelateRules]\r\n        var collection = nodeRelateRules[0].roleRules.permissions[permIndex][type][nodeType][collectionIndex];\r\n        if (arrayLabels.indexOf(k) < 0)\r\n            collection.contentData[key][k] = e.target.value;\r\n        else {\r\n            if (e.target.value.toString().indexOf(\",\") >= 0) {\r\n                var arr = this.getValueAsArrayByType(e.target.value, eleman.value);\r\n                switch (eleman.value) {\r\n                    case \"string\":\r\n                        if (arr[0] && collection.contentData[key][k].indexOf(arr[0]) < 0) {\r\n                            collection.contentData[key][k].push(arr[0]);\r\n                        }\r\n                        break;\r\n                    case \"number\":\r\n                        if (!isNaN(arr[0]) && collection.contentData[key][k].indexOf(arr[0]) < 0) {\r\n                            collection.contentData[key][k].push(arr[0]);\r\n                        }\r\n                        break;\r\n                }\r\n                e.target.value = \"\";\r\n            }\r\n            else if (e.target.value.toString().trim() == \"\") {\r\n                e.target.value = \"\";\r\n            }\r\n        }\r\n        this.setState({ nodeRelateRules });\r\n\r\n    }\r\n    addNewContentDataSub(key, permIndex, collectionIndex, type, nodeType) {\r\n        var nodeRelateRules = [...this.state.nodeRelateRules]\r\n        var collection = nodeRelateRules[0].roleRules.permissions[permIndex][type][nodeType][collectionIndex]\r\n        for(var i=0;i<this.state.compare.length;++i){\r\n            if(!(this.state.compare[i] in collection.contentData[key])){\r\n                 if(i>0 && collection.contentData[key][this.state.compare[i-1]].length>0){\r\n                    collection.contentData[key][this.state.compare[i]] = [];\r\n                }else if(i==0){\r\n                    collection.contentData[key][this.state.compare[i]] = [];\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        this.setState({ nodeRelateRules });\r\n\r\n    }\r\n    removeContentDataKey(key, permIndex, collectionIndex, type, nodeType) {\r\n        var nodeRelateRules = [...this.state.nodeRelateRules]\r\n        var collection = nodeRelateRules[0].roleRules.permissions[permIndex][type][nodeType][collectionIndex]\r\n        delete collection.contentData[key];\r\n        this.setState({ nodeRelateRules });\r\n\r\n    }\r\n    changeContentDataKey(key, permIndex, collectionIndex, type, keyIndex, nodeType, e) {\r\n        var nodeRelateRules = [...this.state.nodeRelateRules]\r\n        var collection = nodeRelateRules[0].roleRules.permissions[permIndex][type][nodeType][collectionIndex]\r\n        var newContentData = {}\r\n        Object.keys(collection.contentData).map((k, i) => {\r\n            if (keyIndex == i) {\r\n                newContentData[e.target.value] = collection.contentData[k]\r\n            } else {\r\n                newContentData[k] = collection.contentData[k]\r\n            }\r\n        })\r\n        collection.contentData = newContentData;\r\n        this.setState({ nodeRelateRules });\r\n\r\n    }\r\n    changeCollectionName(permIndex, collectionIndex, type, nodeType, e) {\r\n        var nodeRelateRules = [...this.state.nodeRelateRules]\r\n        var collection = nodeRelateRules[0].roleRules.permissions[permIndex][type][nodeType][collectionIndex]\r\n        collection[\"collectionName\"] = e.target.value\r\n        this.setState({ nodeRelateRules });\r\n    }\r\n    changeNonPermittedCollectionName(permIndex, collectionIndex, type, nodeType, e) {\r\n        var nodeRelateRules = [...this.state.nodeRelateRules]\r\n        var collection = nodeRelateRules[0].roleRules.permissions[permIndex][type][nodeType][collectionIndex]\r\n        collection[\"collectionName\"] = e.target.value;\r\n        this.setState({ nodeRelateRules });\r\n    }\r\n    addNewContentData(permIndex, collectionIndex, type, nodeType) {\r\n        var nodeRelateRules = [...this.state.nodeRelateRules]\r\n        var collection = nodeRelateRules[0].roleRules.permissions[permIndex][type][nodeType][collectionIndex]\r\n        collection.contentData[\"newkey\"] = {};\r\n        this.setState({ nodeRelateRules });\r\n    }\r\n    addNewCollection(permIndex, type, nodeType) {\r\n        var nodeRelateRules = [...this.state.nodeRelateRules]\r\n        var collection = nodeRelateRules[0].roleRules.permissions[permIndex][type][nodeType];\r\n        var model = {\r\n            collectionName: \"collectionName\",\r\n            contentData: {},\r\n            contentKeys: []\r\n        }\r\n        collection.push(model);\r\n        this.setState({ nodeRelateRules });\r\n    }\r\n    removeCollection(permIndex, index, type, nodeType) {\r\n        var nodeRelateRules = [...this.state.nodeRelateRules]\r\n        var collection = nodeRelateRules[0].roleRules.permissions[permIndex][type][nodeType];\r\n        collection.splice(index, 1)\r\n        this.setState({ nodeRelateRules });\r\n    }\r\n    changeCK(permIndex, collectionIndex, type, nodeType, e) {\r\n        var nodeRelateRules = [...this.state.nodeRelateRules]\r\n        var collection = nodeRelateRules[0].roleRules.permissions[permIndex][type][nodeType][collectionIndex]\r\n        if (e.target.value.toString().indexOf(\",\") >= 0) {\r\n            var arr = this.getValueAsArrayByType(e.target.value, \"string\");\r\n            if (arr[0] && collection.contentKeys.indexOf(arr[0]) < 0) {\r\n                collection.contentKeys.push(arr[0]);\r\n            }\r\n            e.target.value = \"\";\r\n        }\r\n        this.setState({ nodeRelateRules });\r\n    }\r\n\r\n    removeContentKeys(val, permIndex, collectionIndex, type, nodeType, e) {\r\n        var nodeRelateRules = [...this.state.nodeRelateRules]\r\n        var collection = nodeRelateRules[0].roleRules.permissions[permIndex][type][nodeType][collectionIndex]\r\n        const index = collection.contentKeys.indexOf(val);\r\n        if (index > -1) {\r\n            collection.contentKeys.splice(index, 1);\r\n        }\r\n        this.setState({ nodeRelateRules });\r\n    }\r\n    changeRS(permIndex, type, e) {\r\n        var nodeRelateRules = [...this.state.nodeRelateRules]\r\n        var collection = nodeRelateRules[0].roleRules.permissions[permIndex][type]\r\n        if (e.target.value.toString().indexOf(\",\") >= 0) {\r\n            var arr = this.getValueAsArrayByType(e.target.value, \"string\");\r\n            if (arr[0] && collection.relationship.indexOf(arr[0]) < 0) {\r\n                collection.relationship.push(arr[0]);\r\n            }\r\n            e.target.value = \"\";\r\n        }\r\n        this.setState({ nodeRelateRules });\r\n    }\r\n    removeRelationship(val, permIndex, type, e) {\r\n        var nodeRelateRules = [...this.state.nodeRelateRules]\r\n        var collection = nodeRelateRules[0].roleRules.permissions[permIndex][type];\r\n        const index = collection.relationship.indexOf(val);\r\n        if (index > -1) {\r\n            collection.relationship.splice(index, 1);\r\n        }\r\n        this.setState({ nodeRelateRules });\r\n    }\r\n    getContentKeysItems(val, permIndex, collectionIndex, type, nodeType) {\r\n        return (\r\n            <p className=\"p-1 rounded border border-primary text-primary\">{val}\r\n                <span style={fRight}> <button type=\"button\"\r\n                    onClick={this.removeContentKeys.bind(this, val, permIndex, collectionIndex, type, nodeType)}\r\n                    class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n            </p>\r\n        )\r\n    }\r\n    getRelationshipItems(val, permIndex, type) {\r\n        return (\r\n            <p className=\"p-1 rounded border border-primary text-primary\">{val}\r\n                <span style={fRight}> <button type=\"button\"\r\n                    onClick={this.removeRelationship.bind(this, val, permIndex, type)}\r\n                    class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n            </p>\r\n        )\r\n    }\r\n    getValueAsArray(val) {\r\n        var arr = []\r\n        var d = val.toString();\r\n        var ind = d.indexOf(',');\r\n        if (ind >= 0) {\r\n            arr = val.split(\",\");\r\n        }\r\n        else\r\n            arr.push(val)\r\n\r\n        return arr;\r\n    }\r\n    getValueAsArrayByType(val, type) {\r\n        var arr = []\r\n        var d = val.toString();\r\n        var ind = d.indexOf(',');\r\n        if (ind >= 0) {\r\n            var arrElems = val.split(\",\");\r\n            switch (type) {\r\n                case \"string\":\r\n                    arr = arrElems;\r\n                    break;\r\n                case \"number\":\r\n                    arrElems.map((item) => {\r\n                        arr.push(parseInt(item));\r\n                    });\r\n            }\r\n        }\r\n        else {\r\n            switch (type) {\r\n                case \"string\":\r\n                    if (val) {\r\n                        arr.push(val)\r\n                    }\r\n                    break;\r\n                case \"number\":\r\n                    if (!isNaN(val)) {\r\n                        arr.push(val)\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return arr;\r\n    }\r\n    convert(val, type) {\r\n        if (!Array.isArray(val)) {\r\n            switch (type) {\r\n                case \"string\":\r\n                    return val.toString();\r\n                case \"number\":\r\n                    return parseInt(val);\r\n            }\r\n        } else {\r\n            switch (type) {\r\n                case \"string\":\r\n                    var arr = [];\r\n                    val.map((item) => {\r\n                        arr.push(item.toString());\r\n                    });\r\n                    return arr;\r\n                case \"number\":\r\n                    var arr = [];\r\n                    val.map((item) => {\r\n                        var item = parseInt(item);\r\n                        if (!isNaN(item))\r\n                            arr.push(item);\r\n                    });\r\n                    return arr;\r\n            }\r\n\r\n        }\r\n    }\r\n    async addUpdateRule() {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var nodeRelateRules = [...this.state.nodeRelateRules]\r\n        var rule = nodeRelateRules[0].roleRules;\r\n        var rls = {\r\n            method: rule.method,\r\n            methodType: rule.methodType,\r\n            methodContentType: rule.methodContentType,\r\n            service: rule.service,\r\n            permissions: rule.permissions\r\n        }\r\n        var orgId = localStorage.getItem(\"orgId\");\r\n        var appId = localStorage.getItem(\"appId\");\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            rules: [rls]\r\n        }\r\n        this.props.addUpdateRule(model);\r\n    }\r\n    setVisible(vis) {\r\n        this.setState({ visible: vis });\r\n    }\r\n    async setYesNoVisible(vis, question, sendType, args, send) {\r\n        if (vis)\r\n            this.setState({ yesNoVisible: vis, yesNoQuestion: question, sendType: sendType, arguments: args });\r\n        else {\r\n            if (send) {\r\n                var st = this.state.sendType;\r\n                switch (st) {\r\n                    case \"deleteRole\":\r\n                        await this.deleteRole(this.state.arguments);\r\n                        break;\r\n                    case \"saveAll\":\r\n                        await this.addUpdateRule();\r\n                        break;\r\n                }\r\n            }\r\n            this.setState({ yesNoVisible: vis, yesNoQuestion: \"\", sendType: \"\", arguments: [] });\r\n        }\r\n    }\r\n    async newRuleAdd() {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var eleman = document.getElementById(\"newrule\");\r\n        if (!eleman.value) {\r\n            this.props.toastShow(\"error\", \"Role Name cannot be null or empty!\");\r\n        \r\n            return false;\r\n        }\r\n        var orgId = localStorage.getItem(\"orgId\");\r\n        var appId = localStorage.getItem(\"appId\");\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            rules: [\r\n                {\r\n                    method: \"/recommendation/relate\",\r\n                    methodType: \"recommendationCreate\",\r\n                    methodContentType: \"relation\",\r\n                    service: \"recommendationService\",\r\n                    permissions: [{\r\n                        role: eleman.value,\r\n                        permitted: {\r\n                            relationship: [],\r\n                            nodes: [],\r\n                            mainNodes: [],\r\n                            mainSub: []\r\n                        },\r\n                        nonPermitted: {\r\n                            relationship: [],\r\n                            nodes: [],\r\n                            mainNodes: [],\r\n                            mainSub: []\r\n                        }\r\n                    }]\r\n                }\r\n            ]\r\n        }\r\n        await this.props.newRuleAdd(model);\r\n        this.getRelateNodeRules();\r\n    }\r\n    async deleteRole(args) {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var id = args[0];\r\n        var index = args[1];\r\n        var orgId = localStorage.getItem('orgId')\r\n        var appId = localStorage.getItem('appId')\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            id: id\r\n        }\r\n        var success = await this.props.deleteRole(model);\r\n        if (success) {\r\n            var nodeRelateRules = [...this.state.nodeRelateRules]\r\n            var permissions = nodeRelateRules[0].roleRules.permissions;\r\n            permissions.splice(index, 1);\r\n            this.setState({ nodeRelateRules });\r\n        }\r\n    }\r\n    addNewMainSub(permIndex, type) {\r\n        var nodeRelateRules = [...this.state.nodeRelateRules]\r\n        var collection = nodeRelateRules[0].roleRules.permissions[permIndex][type].mainSub;\r\n        var model = {\r\n            main: \"mainCollectionName\",\r\n            sub: []\r\n        }\r\n        collection.push(model);\r\n        this.setState({ nodeRelateRules });\r\n    }\r\n    removeMainSub(permIndex, index, type) {\r\n        var nodeRelateRules = [...this.state.nodeRelateRules]\r\n        var collection = nodeRelateRules[0].roleRules.permissions[permIndex][type].mainSub;\r\n        collection.splice(index, 1)\r\n        this.setState({ nodeRelateRules });\r\n    }\r\n    mainCollectionChange(permIndex, mainSubIndex, type, e) {\r\n        var nodeRelateRules = [...this.state.nodeRelateRules]\r\n        var collection = nodeRelateRules[0].roleRules.permissions[permIndex][type].mainSub[mainSubIndex]\r\n        collection.main = e.target.value;\r\n        this.setState({ nodeRelateRules });\r\n    }\r\n    changeSub(permIndex, mainSubIndex, type, e) {\r\n        var nodeRelateRules = [...this.state.nodeRelateRules]\r\n        var collection = nodeRelateRules[0].roleRules.permissions[permIndex][type].mainSub[mainSubIndex]\r\n        if (e.target.value.toString().indexOf(\",\") >= 0) {\r\n            var arr = this.getValueAsArrayByType(e.target.value, \"string\");\r\n            if (arr[0] && collection.sub.indexOf(arr[0]) < 0) {\r\n                collection.sub.push(arr[0]);\r\n            }\r\n            e.target.value = \"\";\r\n        }\r\n        this.setState({ nodeRelateRules });\r\n    }\r\n    getMainSubItems(val, permIndex, mainSubIndex, valIndex, type) {\r\n        return (\r\n            <p className=\"p-1 rounded border border-primary text-primary\">{val}\r\n                <span style={fRight}> <button type=\"button\"\r\n                    onClick={this.removeSub.bind(this, permIndex, mainSubIndex, valIndex, type)}\r\n                    class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n            </p>\r\n        )\r\n    }\r\n    removeSub(permIndex, mainSubIndex, valIndex, type, e) {\r\n        var nodeRelateRules = [...this.state.nodeRelateRules]\r\n        var collection = nodeRelateRules[0].roleRules.permissions[permIndex][type].mainSub[mainSubIndex]\r\n        collection.sub.splice(valIndex, 1);\r\n        this.setState({ nodeRelateRules });\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <CCard>\r\n                <CRow className='m-2 border-bottom d-flex align-items-center'>\r\n                    <CCol className='col-6 pb-2'>\r\n                        <CCardTitle>Add/Update <b>\"Node Relate\"</b> Permissions</CCardTitle>\r\n                    </CCol>\r\n                    <CCol className='col-6 d-grid gap-2 d-md-flex justify-content-md-end pb-2'>\r\n                        <CButton color='secondary' onClick={this.setVisible.bind(this, true)}>Add New Role</CButton>\r\n                        <CButton color='info' style={{\"color\":\"#fff\"}}\r\n                            onClick={this.setYesNoVisible.bind(this, true, \"Are you sure you want to save all?\", \"saveAll\", [this])}>Save All</CButton>\r\n                    </CCol>\r\n\r\n                    <CModal visible={this.state.visible} onClose={this.setVisible.bind(this, false)}>\r\n                        <CModalHeader>\r\n                            <CModalTitle>Add New Role</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalBody>\r\n                            <CFormInput type='text' placeholder='Role Name' name=\"newRule\" id=\"newrule\" />\r\n                        </CModalBody>\r\n                        <CModalFooter>\r\n                            <CButton color=\"secondary\" onClick={this.setVisible.bind(this, false)}>\r\n                                Close\r\n                            </CButton>\r\n                            <CButton color=\"primary\" onClick={this.newRuleAdd.bind(this)}>Create Role</CButton>\r\n                        </CModalFooter>\r\n                    </CModal>\r\n                    <CModal visible={this.state.yesNoVisible} onClose={this.setYesNoVisible.bind(this, false)}>\r\n                        <CModalHeader>\r\n                            <CModalTitle>{this.state.yesNoQuestion}</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalFooter>\r\n                            <CButton color=\"secondary\" onClick={this.setYesNoVisible.bind(this, false, null, null, null, false)}>\r\n                                No\r\n                            </CButton>\r\n                            <CButton color=\"primary\" onClick={this.setYesNoVisible.bind(this, false, null, null, null, true)}>Yes</CButton>\r\n                        </CModalFooter>\r\n                    </CModal>\r\n                </CRow>\r\n                <CCardBody style={cardText}>\r\n\r\n                    {this.state.nodeRelateRules.length > 0 &&\r\n\r\n                        this.state.nodeRelateRules[0].roleRules.permissions.map((item, index) => (\r\n                            <CCard className='mt-1'>\r\n                                <CCardBody>\r\n                                    <CCardTitle><b>\"{item.role}\"</b> Rules  <span style={fRight}>\r\n                                        <CButton color='danger'\r\n                                            onClick={this.setYesNoVisible.bind(this, true, \"Are you sure you want to delete \" + item.role + \" role?\", \"deleteRole\", [item._id, index, this])}\r\n                                            //onClick={this.deleteRole.bind(this,item._id,index)}\r\n                                            style={dangerIcon}>Delete Role</CButton></span></CCardTitle>\r\n                                    <CNav variant=\"tabs\" className='mt-4' role=\"tablist\" style={vars} >\r\n                                        <CNavItem>\r\n                                            <CNavLink\r\n                                                style={vars}\r\n                                                active={this.getSubActiveKey(this, 1, item._id)}\r\n                                                onClick={this.setSubActiveKey.bind(this, 1, item._id)}\r\n                                            >\r\n                                                Permitted\r\n                                            </CNavLink>\r\n                                        </CNavItem>\r\n                                        <CNavItem>\r\n                                            <CNavLink\r\n                                                style={vars}\r\n                                                active={this.getSubActiveKey(this, 2, item._id)}\r\n                                                onClick={this.setSubActiveKey.bind(this, 2, item._id)}\r\n                                            >\r\n                                                Non-Permitted\r\n                                            </CNavLink>\r\n                                        </CNavItem>\r\n\r\n                                    </CNav>\r\n                                    <CTabContent>\r\n                                        <CTabPane role=\"tabpanel\" className='p-3' aria-labelledby=\"home-tab\" visible={this.getSubActiveKey(this, 1, item._id)}>\r\n                                            <CCard>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Relationship Items</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    <CRow className='mt-2 pb-2'>\r\n                                                        <CCol className='col-9'>\r\n                                                            <CFormInput type='text' name='relationship'\r\n                                                                onChange={this.changeRS.bind(this, index, \"permitted\")}\r\n                                                                placeholder='Relationship' />\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                    <CRow>\r\n                                                        {item.permitted.relationship.map((c, i) =>\r\n                                                            <CCol className='col-3'>\r\n                                                                {this.getRelationshipItems(c, index, \"permitted\")}\r\n                                                            </CCol>\r\n                                                        )}\r\n                                                    </CRow>\r\n                                                </CCardBody>\r\n                                            </CCard>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Child Node Items</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n\r\n                                                    {item.permitted.nodes.map((c, i) => (\r\n\r\n                                                        <div>\r\n                                                            <CRow className='mt-2'>\r\n                                                                <CCol className='col-11'>\r\n                                                                    <CFormInput type='text' name='collectionName'\r\n                                                                        onChange={this.changeCollectionName.bind(this, index, i, \"permitted\", \"nodes\")}\r\n                                                                        placeholder='Collection Name' value={c.collectionName} />\r\n                                                                </CCol>\r\n                                                                <CCol className='align-self-center'>\r\n                                                                    <span style={fRight}> <button type=\"button\"\r\n                                                                        onClick={this.removeCollection.bind(this, index, i, \"permitted\", \"nodes\")}\r\n                                                                        class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            {Object.keys(c.contentData).map((key, keyIndex) => (\r\n                                                                <div>\r\n                                                                    <CRow className='mt-2'>\r\n                                                                        <CCol className='col-11'>\r\n                                                                            <CCard>\r\n                                                                                <CCardBody>\r\n                                                                                    <CRow className='mt-2 pb-2 border-bottom'>\r\n                                                                                        <CCol className='col-9'><CFormInput type='text' placeholder='Content Field'\r\n                                                                                            value={key} onChange={this.changeContentDataKey.bind(this, key, index, i, \"permitted\", keyIndex, \"nodes\")} /></CCol>\r\n                                                                                        <CCol className='col-1 align-self-center'>\r\n                                                                                            <button type=\"button\"\r\n                                                                                            onClick={this.removeContentDataKey.bind(this, key, index, i, \"permitted\", \"nodes\")}\r\n                                                                                                class=\"btn-close\" aria-label=\"Remove\" />\r\n                                                                                        </CCol>\r\n                                                                                    </CRow>\r\n                                                                                    {this.getContentData(c.contentData[key], key, index, i, \"permitted\", \"nodes\")}\r\n                                                                                </CCardBody>\r\n                                                                            </CCard>\r\n                                                                        </CCol>\r\n                                                                    </CRow>\r\n\r\n\r\n                                                                </div>\r\n                                                            ))\r\n                                                            }\r\n\r\n                                                            <CRow className='mt-2 justify-content-center'>\r\n                                                                <CCol className='col-6 text-center'>\r\n                                                                    <CButton onClick={this.addNewContentData.bind(this, index, i, \"permitted\", \"nodes\")}><CIcon icon={icon.cilPlus} />Add New Content Data for {c.collectionName}</CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            <CRow className='mt-2 pb-2'>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <CFormInput type='text' name='contentKeys'\r\n                                                                        onChange={this.changeCK.bind(this, index, i, \"permitted\", \"nodes\")}\r\n                                                                        placeholder='Content Keys with comma' />\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n\r\n                                                            <CRow className='mt-2'>\r\n                                                                {c.contentKeys.map((val =>\r\n                                                                    <CCol className='col-3'>\r\n                                                                        {this.getContentKeysItems(val, index, i, \"permitted\", \"nodes\")}\r\n                                                                    </CCol>\r\n                                                                ))}\r\n                                                            </CRow>\r\n\r\n                                                        </div>\r\n                                                    ))}\r\n\r\n                                                </CCardBody>\r\n                                                <CCardFooter>\r\n                                                    <CRow className='mt-2 d-flex justify-content-center'>\r\n                                                        <CCol className='col-6 text-center'>\r\n                                                            <CButton onClick={this.addNewCollection.bind(this, index, \"permitted\", \"nodes\")}><CIcon icon={icon.cilPlus} />Add New Child Node for {item.role}</CButton>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                </CCardFooter>\r\n                                            </CCard>\r\n\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Main Node Items</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n\r\n                                                    {item.permitted.mainNodes.map((c, i) => (\r\n\r\n                                                        <div>\r\n                                                            <CRow className='mt-2'>\r\n                                                                <CCol className='col-11'>\r\n                                                                    <CFormInput type='text' name='collectionName'\r\n                                                                        onChange={this.changeCollectionName.bind(this, index, i, \"permitted\", \"mainNodes\")}\r\n                                                                        placeholder='Collection Name' value={c.collectionName} />\r\n                                                                </CCol>\r\n                                                                <CCol className='align-self-center'>\r\n                                                                    <span style={fRight}> <button type=\"button\"\r\n                                                                        onClick={this.removeCollection.bind(this, index, i, \"permitted\", \"mainNodes\")}\r\n                                                                        class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            {Object.keys(c.contentData).map((key, keyIndex) => (\r\n                                                                <div>\r\n                                                                    <CRow className='mt-2'>\r\n                                                                        <CCol className='col-11'>\r\n                                                                            <CCard>\r\n                                                                                <CCardBody>\r\n                                                                                    <CRow className='mt-2 pb-2 border-bottom'>\r\n                                                                                        <CCol className='col-9'><CFormInput type='text' placeholder='Content Field'\r\n                                                                                            value={key} onChange={this.changeContentDataKey.bind(this, key, index, i, \"permitted\", keyIndex, \"mainNodes\")} /></CCol>\r\n                                                                                        <CCol className='col-1 align-self-center'>\r\n                                                                                            <button type=\"button\"\r\n                                                                                            onClick={this.removeContentDataKey.bind(this, key, index, i, \"permitted\", \"mainNodes\")}\r\n                                                                                                class=\"btn-close\" aria-label=\"Remove\" />\r\n                                                                                        </CCol>\r\n                                                                                    </CRow>\r\n                                                                                    {this.getContentData(c.contentData[key], key, index, i, \"permitted\", \"mainNodes\")}\r\n                                                                                </CCardBody>\r\n                                                                            </CCard>\r\n                                                                        </CCol>\r\n                                                                    </CRow>\r\n\r\n\r\n                                                                </div>\r\n                                                            ))\r\n                                                            }\r\n\r\n                                                            <CRow className='mt-2 justify-content-center'>\r\n                                                                <CCol className='col-6 text-center'>\r\n                                                                    <CButton onClick={this.addNewContentData.bind(this, index, i, \"permitted\", \"mainNodes\")}><CIcon icon={icon.cilPlus} />Add New Content Data for {c.collectionName}</CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            <CRow className='mt-2 pb-2'>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <CFormInput type='text' name='contentKeys'\r\n                                                                        onChange={this.changeCK.bind(this, index, i, \"permitted\", \"mainNodes\")}\r\n                                                                        placeholder='Content Keys with comma' />\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n\r\n                                                            <CRow className='mt-2'>\r\n                                                                {c.contentKeys.map((val =>\r\n                                                                    <CCol className='col-3'>\r\n                                                                        {this.getContentKeysItems(val, index, i, \"permitted\", \"mainNodes\")}\r\n                                                                    </CCol>\r\n                                                                ))}\r\n                                                            </CRow>\r\n\r\n                                                        </div>\r\n                                                    ))}\r\n\r\n                                                </CCardBody>\r\n                                                <CCardFooter>\r\n                                                    <CRow className='mt-2 d-flex justify-content-center'>\r\n                                                        <CCol className='col-6 text-center'>\r\n                                                            <CButton onClick={this.addNewCollection.bind(this, index, \"permitted\", \"mainNodes\")}><CIcon icon={icon.cilPlus} />Add New Main Node for {item.role}</CButton>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                </CCardFooter>\r\n                                            </CCard>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Main - Child Node Relation Permissions</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n\r\n                                                    {item.permitted.mainSub.map((val, i) => (\r\n                                                        <div>\r\n                                                            <CRow>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <CFormInput type='text' name='main' placeholder='Main Collection Name' onChange={this.mainCollectionChange.bind(this, index, i, \"permitted\")} value={val.main} />\r\n                                                                </CCol>\r\n                                                                <CCol className='align-self-center'>\r\n                                                                    <span style={fRight}> <button type=\"button\"\r\n                                                                        onClick={this.removeMainSub.bind(this, index, i, \"permitted\")}\r\n                                                                        class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            <CRow className='mt-2 pb-2'>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <CFormInput type='text' name='subCollection'\r\n                                                                        onChange={this.changeSub.bind(this, index, i, \"permitted\")}\r\n                                                                        placeholder='Child Collection Names with comma' />\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            <CRow className='mt-2'>\r\n                                                                {val.sub.map((s, si) =>\r\n                                                                    <CCol className='col-3'>\r\n                                                                        {this.getMainSubItems(s, index, i, si, \"permitted\")}\r\n                                                                    </CCol>\r\n                                                                )}\r\n                                                            </CRow>\r\n\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </CCardBody>\r\n                                                <CCardFooter>\r\n                                                    <CRow className='mt-2 justify-content-center'>\r\n                                                        <CCol className='col-6 text-center'>\r\n                                                            <CButton onClick={this.addNewMainSub.bind(this, index, \"permitted\")}><CIcon icon={icon.cilPlus} />Add Main - Child Relation for {item.role}</CButton>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                </CCardFooter>\r\n                                            </CCard>\r\n\r\n                                        </CTabPane>\r\n                                        <CTabPane role=\"tabpanel\" className='p-3' aria-labelledby=\"profile-tab\" visible={this.getSubActiveKey(this, 2, item._id)}>\r\n                                            <CCard>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Relationship Items</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    <CRow className='mt-2 pb-2'>\r\n                                                        <CCol className='col-9'>\r\n                                                            <CFormInput type='text' name='relationship'\r\n                                                                onChange={this.changeRS.bind(this, index, \"nonPermitted\")}\r\n                                                                placeholder='Relationship' />\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                    <CRow>\r\n                                                        {item.nonPermitted.relationship.map((c, i) =>\r\n                                                            <CCol className='col-3'>\r\n                                                                {this.getRelationshipItems(c, index, \"nonPermitted\")}\r\n                                                            </CCol>\r\n                                                        )}\r\n                                                    </CRow>\r\n                                                </CCardBody>\r\n                                            </CCard>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Child Node Items</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n\r\n                                                    {item.nonPermitted.nodes.map((c, i) => (\r\n\r\n                                                        <div>\r\n                                                            <CRow className='mt-2'>\r\n                                                                <CCol className='col-11'>\r\n                                                                    <CFormInput type='text' name='collectionName'\r\n                                                                        onChange={this.changeCollectionName.bind(this, index, i, \"nonPermitted\", \"nodes\")}\r\n                                                                        placeholder='Collection Name' value={c.collectionName} />\r\n                                                                </CCol>\r\n                                                                <CCol className='align-self-center'>\r\n                                                                    <span style={fRight}> <button type=\"button\"\r\n                                                                        onClick={this.removeCollection.bind(this, index, i, \"nonPermitted\", \"nodes\")}\r\n                                                                        class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            {Object.keys(c.contentData).map((key, keyIndex) => (\r\n                                                                <div>\r\n                                                                    <CRow className='mt-2'>\r\n                                                                        <CCol className='col-11'>\r\n                                                                            <CCard>\r\n                                                                                <CCardBody>\r\n                                                                                    <CRow className='mt-2 pb-2 border-bottom'>\r\n                                                                                        <CCol className='col-9'><CFormInput type='text' placeholder='Content Field'\r\n                                                                                            value={key} onChange={this.changeContentDataKey.bind(this, key, index, i, \"nonPermitted\", keyIndex, \"nodes\")} /></CCol>\r\n                                                                                        <CCol className='col-1 align-self-center'>\r\n                                                                                            <button type=\"button\"\r\n                                                                                            onClick={this.removeContentDataKey.bind(this, key, index, i, \"nonPermitted\", \"nodes\")}\r\n                                                                                                class=\"btn-close\" aria-label=\"Remove\" />\r\n                                                                                        </CCol>\r\n                                                                                    </CRow>\r\n                                                                                    {this.getContentData(c.contentData[key], key, index, i, \"nonPermitted\", \"nodes\")}\r\n                                                                                </CCardBody>\r\n                                                                            </CCard>\r\n                                                                        </CCol>\r\n                                                                    </CRow>\r\n\r\n\r\n                                                                </div>\r\n                                                            ))\r\n                                                            }\r\n\r\n                                                            <CRow className='mt-2 justify-content-center'>\r\n                                                                <CCol className='col-6 text-center'>\r\n                                                                    <CButton onClick={this.addNewContentData.bind(this, index, i, \"nonPermitted\", \"nodes\")}><CIcon icon={icon.cilPlus} />Add New Content Data for {c.collectionName}</CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            <CRow className='mt-2 pb-2'>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <CFormInput type='text' name='contentKeys'\r\n                                                                        onChange={this.changeCK.bind(this, index, i, \"nonPermitted\", \"nodes\")}\r\n                                                                        placeholder='Content Keys with comma' />\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n\r\n                                                            <CRow className='mt-2'>\r\n                                                                {c.contentKeys.map((val =>\r\n                                                                    <CCol className='col-3'>\r\n                                                                        {this.getContentKeysItems(val, index, i, \"nonPermitted\", \"nodes\")}\r\n                                                                    </CCol>\r\n                                                                ))}\r\n                                                            </CRow>\r\n\r\n                                                        </div>\r\n                                                    ))}\r\n\r\n                                                </CCardBody>\r\n                                                <CCardFooter>\r\n                                                    <CRow className='mt-2 d-flex justify-content-center'>\r\n                                                        <CCol className='col-6 text-center'>\r\n                                                            <CButton onClick={this.addNewCollection.bind(this, index, \"nonPermitted\", \"nodes\")}><CIcon icon={icon.cilPlus} />Add New Child Node for {item.role}</CButton>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                </CCardFooter>\r\n                                            </CCard>\r\n\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Main Node Items</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n\r\n                                                    {item.nonPermitted.mainNodes.map((c, i) => (\r\n\r\n                                                        <div>\r\n                                                            <CRow className='mt-2'>\r\n                                                                <CCol className='col-11'>\r\n                                                                    <CFormInput type='text' name='collectionName'\r\n                                                                        onChange={this.changeCollectionName.bind(this, index, i, \"nonPermitted\", \"mainNodes\")}\r\n                                                                        placeholder='Collection Name' value={c.collectionName} />\r\n                                                                </CCol>\r\n                                                                <CCol className='align-self-center'>\r\n                                                                    <span style={fRight}> <button type=\"button\"\r\n                                                                        onClick={this.removeCollection.bind(this, index, i, \"nonPermitted\", \"mainNodes\")}\r\n                                                                        class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            {Object.keys(c.contentData).map((key, keyIndex) => (\r\n                                                                <div>\r\n                                                                    <CRow className='mt-2'>\r\n                                                                        <CCol className='col-11'>\r\n                                                                            <CCard>\r\n                                                                                <CCardBody>\r\n                                                                                    <CRow className='mt-2 pb-2 border-bottom'>\r\n                                                                                        <CCol className='col-9'><CFormInput type='text' placeholder='Content Field'\r\n                                                                                            value={key} onChange={this.changeContentDataKey.bind(this, key, index, i, \"nonPermitted\", keyIndex, \"mainNodes\")} /></CCol>\r\n                                                                                        <CCol className='col-1 align-self-center'>\r\n                                                                                            <button type=\"button\"\r\n                                                                                            onClick={this.removeContentDataKey.bind(this, key, index, i, \"nonPermitted\", \"mainNodes\")}\r\n                                                                                                class=\"btn-close\" aria-label=\"Remove\" />\r\n                                                                                        </CCol>\r\n                                                                                    </CRow>\r\n                                                                                    {this.getContentData(c.contentData[key], key, index, i, \"nonPermitted\", \"mainNodes\")}\r\n                                                                                </CCardBody>\r\n                                                                            </CCard>\r\n                                                                        </CCol>\r\n                                                                    </CRow>\r\n\r\n\r\n                                                                </div>\r\n                                                            ))\r\n                                                            }\r\n\r\n                                                            <CRow className='mt-2 justify-content-center'>\r\n                                                                <CCol className='col-6 text-center'>\r\n                                                                    <CButton onClick={this.addNewContentData.bind(this, index, i, \"nonPermitted\", \"mainNodes\")}><CIcon icon={icon.cilPlus} />Add New Content Data for {c.collectionName}</CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            <CRow className='mt-2 pb-2'>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <CFormInput type='text' name='contentKeys'\r\n                                                                        onChange={this.changeCK.bind(this, index, i, \"nonPermitted\", \"mainNodes\")}\r\n                                                                        placeholder='Content Keys with comma' />\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n\r\n                                                            <CRow className='mt-2'>\r\n                                                                {c.contentKeys.map((val =>\r\n                                                                    <CCol className='col-3'>\r\n                                                                        {this.getContentKeysItems(val, index, i, \"nonPermitted\", \"mainNodes\")}\r\n                                                                    </CCol>\r\n                                                                ))}\r\n                                                            </CRow>\r\n\r\n                                                        </div>\r\n                                                    ))}\r\n\r\n                                                </CCardBody>\r\n                                                <CCardFooter>\r\n                                                    <CRow className='mt-2 d-flex justify-content-center'>\r\n                                                        <CCol className='col-6 text-center'>\r\n                                                            <CButton onClick={this.addNewCollection.bind(this, index, \"nonPermitted\", \"mainNodes\")}><CIcon icon={icon.cilPlus} />Add New Main Node for {item.role}</CButton>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                </CCardFooter>\r\n                                            </CCard>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Main - Child Node Relation Permissions</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n\r\n                                                    {item.nonPermitted.mainSub.map((val, i) => (\r\n                                                        <div>\r\n                                                            <CRow>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <CFormInput type='text' name='main' placeholder='Main Collection Name' onChange={this.mainCollectionChange.bind(this, index, i, \"nonPermitted\")} value={val.main} />\r\n                                                                </CCol>\r\n                                                                <CCol className='align-self-center'>\r\n                                                                    <span style={fRight}> <button type=\"button\"\r\n                                                                        onClick={this.removeMainSub.bind(this, index, i, \"nonPermitted\")}\r\n                                                                        class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            <CRow className='mt-2 pb-2'>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <CFormInput type='text' name='subCollection'\r\n                                                                        onChange={this.changeSub.bind(this, index, i, \"nonPermitted\")}\r\n                                                                        placeholder='Child Collection Names with comma' />\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            <CRow className='mt-2'>\r\n                                                                {val.sub.map((s, si) =>\r\n                                                                    <CCol className='col-3'>\r\n                                                                        {this.getMainSubItems(s, index, i, si, \"nonPermitted\")}\r\n                                                                    </CCol>\r\n                                                                )}\r\n                                                            </CRow>\r\n\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </CCardBody>\r\n                                                <CCardFooter>\r\n                                                    <CRow className='mt-2 justify-content-center'>\r\n                                                        <CCol className='col-6 text-center'>\r\n                                                            <CButton onClick={this.addNewMainSub.bind(this, index, \"nonPermitted\")}><CIcon icon={icon.cilPlus} />Add Main - Child Relation for {item.role}</CButton>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                </CCardFooter>\r\n                                            </CCard>\r\n                                        </CTabPane>\r\n\r\n                                    </CTabContent>\r\n                                </CCardBody>\r\n                            </CCard>\r\n                        ))}\r\n                </CCardBody>\r\n\r\n\r\n            </CCard>\r\n        )\r\n    }\r\n}\r\nexport default Relate","import React, { Component } from 'react';\r\nimport CIcon from '@coreui/icons-react';\r\nimport * as icon from '@coreui/icons';\r\nimport { Link } from 'react-router-dom'\r\nimport { format } from 'date-fns';\r\nimport { ToastContainer, toast,Slide } from 'react-toastify';\r\nimport Popup from '../../../widgets/Popup';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CCard,\r\n    CCardBody,\r\n    CRow,\r\n    CCol,\r\n    CCardTitle,\r\n    CFormInput,\r\n    CButton,\r\n    CFormSelect,\r\n    CModal,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CCardFooter,\r\n    CCardHeader,\r\n} from '@coreui/react'\r\nimport { bool } from 'prop-types';\r\nconst vars = {\r\n    'cursor': \"pointer\",\r\n    \"color\": \"rgb(33, 37, 41)\",\r\n    \"background-color\": \"#fff\"\r\n}\r\nconst activeLink = {\r\n    'cursor': \"pointer\",\r\n    \"background-color\": \"rgb(33, 37, 41)\",\r\n    \"color\": \"#fff\"\r\n}\r\nconst dangerIcon = {\r\n    \"color\": \"#f7f2f2\"\r\n}\r\nconst fRight = {\r\n    \"float\": \"right\"\r\n}\r\nconst cardText = { \"height\": \"620px\", \"overflow-y\": \"scroll\" }\r\nconst arrayLabels = [\"not\", \"in\",\"eq\"]\r\nexport class DeleteRelation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nodeDeleteRelationRules: [],\r\n            activeKey: 1,\r\n            activeSubKeys: [1, 1, 1, 1, 1],\r\n            subKeys: [],\r\n            changedTypes: [],\r\n            visible: false,\r\n            yesNoVisible: false,\r\n            yesNoQuestion: \"\",\r\n            arguments: [],\r\n            sendType: \"\",\r\n            compare:[\"eq\",\"not\",\"gt\",\"gte\",\"lt\",\"lte\",\"in\"]\r\n\r\n        }\r\n    }\r\n\r\n    setSubActiveKey(key, id) {\r\n        const { subKeys } = this.state;\r\n        var index = subKeys.findIndex(x => x.id === id);\r\n        subKeys[index].activeKey = key;\r\n        this.setState({ subKeys });\r\n        return false;\r\n    }\r\n    getSubActiveKey(e, key, id) {\r\n        const { subKeys } = this.state;\r\n        var index = subKeys.findIndex(x => x.id === id);\r\n        return key == subKeys[index].activeKey\r\n    }\r\n    componentDidMount() {\r\n        this.getDeleteRelationNodeRules();\r\n    }\r\n    async getDeleteRelationNodeRules() {\r\n        var orgId = localStorage.getItem('orgId')\r\n        var appId = localStorage.getItem('appId')\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            service: \"recommendationService\",\r\n            methodContentType: \"relation\",\r\n            methodType: \"recommendationDelete\"\r\n        }\r\n        var d = { ...this.state.nodeDeleteRelationRules };\r\n        d = await this.props.getRules(model);\r\n       \r\n        var sk = [];\r\n        if (d.length > 0) {\r\n            var rr = d[0];\r\n            rr.roleRules.permissions.map(m => {\r\n                var data = {\r\n                    id: m._id,\r\n                    activeKey: 1\r\n                }\r\n                sk.push(data);\r\n            })\r\n        }\r\n\r\n        this.setState({ nodeDeleteRelationRules: d, subKeys: sk });\r\n    }\r\n    getValueType(val) {\r\n        if (Array.isArray(val)) {\r\n            if (val.length > 0) {\r\n                return typeof val[0]\r\n            }\r\n        }\r\n        return typeof val;\r\n    }\r\n    getContentData(item, key, permIndex, collectionIndex, type, nodeType) {\r\n        return (\r\n            <div>\r\n                {Object.keys(item).length < 1 &&\r\n                    <CRow className='mt-2 justify-content-center'>\r\n                        <CCol className='col-2'>\r\n                            <CButton color='primary' onClick={this.addNewContentDataSub.bind(this, key, permIndex, collectionIndex, type, nodeType)}><CIcon style={dangerIcon} icon={icon.cilPlus} /></CButton>\r\n                        </CCol>\r\n                    </CRow>\r\n                }\r\n                {typeof item == \"object\" &&\r\n                    Object.keys(item).map((k, i) => {\r\n                        return (\r\n                            <div>\r\n                                <CRow className='mt-2'>\r\n                                    <CCol className='col-3'>\r\n                                        <CFormSelect onChange={this.eqChanged.bind(this, key, k, permIndex, collectionIndex, type, i, nodeType)}\r\n                                            value={k} name={this.getValueType(item[k])}>\r\n                                            <option value=\"eq\">{'='}</option>\r\n                                            <option value=\"not\">{'!='}</option>\r\n                                            <option value=\"gt\">{'>'}</option>\r\n                                            <option value=\"gte\">{'>='}</option>\r\n                                            <option value=\"lt\">{'<'}</option>\r\n                                            <option value=\"lte\">{'<='}</option>\r\n                                            <option value=\"in\">{'in'}</option>\r\n                                        </CFormSelect>\r\n                                    </CCol>\r\n                                    <CCol className='col-3'>\r\n                                        <CFormInput type='text' name='value' onChange={this.changeContentDataSubKey.bind(this, key, k, permIndex, collectionIndex, type, nodeType)} placeholder={arrayLabels.indexOf(k) < 0 ? \"value\" : \"values with comma\"} value={arrayLabels.indexOf(k) < 0 ? item[k] : this.value} />\r\n                                    </CCol>\r\n                                    <CCol className='col-3'>\r\n                                        <CFormSelect id={key + \"_\" + k + \"_\" + permIndex + \"_\" + collectionIndex + \"_\" + type}\r\n                                            onChange={this.typeChanged.bind(this, key, k, permIndex, collectionIndex, type, i, nodeType)}\r\n                                            value={this.getValueType(item[k])}\r\n                                            disabled={item[k].length<1} >\r\n                                            <option value=\"string\">{'String'}</option>\r\n                                            <option value=\"number\">{'Integer'}</option>\r\n                                        </CFormSelect>\r\n                                    </CCol>\r\n                                    <CCol className='col-1 align-self-center'>\r\n                                        <button type=\"button\"                        \r\n                                            onClick={this.removeContentDataSubKey.bind(this, key, k, permIndex, collectionIndex, type, nodeType)}\r\n                                            class=\"btn-close\" aria-label=\"Remove\"/>\r\n                                    </CCol>\r\n                                    \r\n                                    {Object.keys(item).length - 1 == i &&\r\n                                        <CCol className='col-1'>\r\n                                            <CButton color='primary' onClick={this.addNewContentDataSub.bind(this, key, permIndex, collectionIndex, type, nodeType)}><CIcon style={dangerIcon} icon={icon.cilPlus} /></CButton>\r\n                                        </CCol>\r\n                                    }\r\n                                </CRow>\r\n                                {arrayLabels.indexOf(k) >= 0 &&\r\n                                    <CRow className='mt-2'>\r\n                                        {item[k].map((val =>\r\n                                            <CCol className='col-3'>\r\n                                                {this.getArrayItems(val, key, k, permIndex, collectionIndex, type, nodeType)}\r\n                                            </CCol>\r\n                                        ))}\r\n                                    </CRow>\r\n                                }\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n    getArrayItems(val, key, k, permIndex, collectionIndex, type, nodeType) {\r\n        return (\r\n            <p className=\"p-1 rounded border border-primary text-primary\">{val}\r\n                <span style={fRight}> <button type=\"button\"\r\n                    onClick={this.removeContentDataSubKeyArray.bind(this, key, k, permIndex, collectionIndex, type, val, nodeType)}\r\n                    class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n            </p>\r\n        )\r\n    }\r\n\r\n    eqChanged(key, k, permIndex, collectionIndex, type, keyIndex, nodeType, e) {\r\n        var nodeDeleteRelationRules = [...this.state.nodeDeleteRelationRules]\r\n        var collection = nodeDeleteRelationRules[0].roleRules.permissions[permIndex][type][nodeType][collectionIndex]\r\n        var newContentData = {}\r\n\r\n        Object.keys(collection.contentData[key]).map((ki, i) => {\r\n            if (keyIndex == i) {\r\n                if (arrayLabels.indexOf(e.target.value) < 0)\r\n                    newContentData[e.target.value] = collection.contentData[key][ki]\r\n                else {\r\n                    var arr = this.getValueAsArrayByType(collection.contentData[key][ki], e.target.name);\r\n                    newContentData[e.target.value] = arr\r\n                }\r\n            } else {\r\n                newContentData[ki] = collection.contentData[key][ki]\r\n            }\r\n        })\r\n        collection.contentData[key] = newContentData;\r\n        this.setState({ nodeDeleteRelationRules });\r\n    }\r\n    typeChanged(key, k, permIndex, collectionIndex, type, keyIndex, nodeType, e) {\r\n        var nodeDeleteRelationRules = [...this.state.nodeDeleteRelationRules]\r\n        var collection = nodeDeleteRelationRules[0].roleRules.permissions[permIndex][type][nodeType][collectionIndex]\r\n        var newContentData = {}\r\n        Object.keys(collection.contentData[key]).map((ki, i) => {\r\n            if (keyIndex == i) {\r\n                if (arrayLabels.indexOf(k) < 0)\r\n                    newContentData[k] = this.convert(collection.contentData[key][ki], e.target.value);\r\n                else {\r\n                    var arr = this.convert(collection.contentData[key][ki], e.target.value);\r\n                    newContentData[k] = arr\r\n                }\r\n            } else {\r\n                newContentData[ki] = collection.contentData[key][ki]\r\n            }\r\n        })\r\n        collection.contentData[key] = newContentData;\r\n        this.setState({ nodeDeleteRelationRules });\r\n    }\r\n    removeContentDataSubKey(key, k, permIndex, collectionIndex, type, nodeType) {\r\n        var nodeDeleteRelationRules = [...this.state.nodeDeleteRelationRules]\r\n        var collection = nodeDeleteRelationRules[0].roleRules.permissions[permIndex][type][nodeType][collectionIndex]\r\n        delete collection.contentData[key][k];\r\n        this.setState({ nodeDeleteRelationRules });\r\n\r\n    }\r\n    removeContentDataSubKeyArray(key, k, permIndex, collectionIndex, type, val, nodeType) {\r\n        var nodeDeleteRelationRules = [...this.state.nodeDeleteRelationRules]\r\n        var collection = nodeDeleteRelationRules[0].roleRules.permissions[permIndex][type][nodeType][collectionIndex]\r\n        const index = collection.contentData[key][k].indexOf(val);\r\n        if (index > -1) {\r\n            collection.contentData[key][k].splice(index, 1);\r\n        }\r\n        this.setState({ nodeDeleteRelationRules });\r\n\r\n    }\r\n\r\n    changeContentDataSubKey(key, k, permIndex, collectionIndex, type, nodeType, e) {\r\n        var eleman = document.getElementById(key + \"_\" + k + \"_\" + permIndex + \"_\" + collectionIndex + \"_\" + type)\r\n        var nodeDeleteRelationRules = [...this.state.nodeDeleteRelationRules]\r\n        var collection = nodeDeleteRelationRules[0].roleRules.permissions[permIndex][type][nodeType][collectionIndex];\r\n        if (arrayLabels.indexOf(k) < 0)\r\n            collection.contentData[key][k] = e.target.value;\r\n        else {\r\n            if (e.target.value.toString().indexOf(\",\") >= 0) {\r\n                var arr = this.getValueAsArrayByType(e.target.value, eleman.value);\r\n                switch (eleman.value) {\r\n                    case \"string\":\r\n                        if (arr[0] && collection.contentData[key][k].indexOf(arr[0]) < 0) {\r\n                            collection.contentData[key][k].push(arr[0]);\r\n                        }\r\n                        break;\r\n                    case \"number\":\r\n                        if (!isNaN(arr[0]) && collection.contentData[key][k].indexOf(arr[0]) < 0) {\r\n                            collection.contentData[key][k].push(arr[0]);\r\n                        }\r\n                        break;\r\n                }\r\n                e.target.value = \"\";\r\n            }\r\n            else if (e.target.value.toString().trim() == \"\") {\r\n                e.target.value = \"\";\r\n            }\r\n        }\r\n        this.setState({ nodeDeleteRelationRules });\r\n\r\n    }\r\n    addNewContentDataSub(key, permIndex, collectionIndex, type, nodeType) {\r\n        var nodeDeleteRelationRules = [...this.state.nodeDeleteRelationRules]\r\n        var collection = nodeDeleteRelationRules[0].roleRules.permissions[permIndex][type][nodeType][collectionIndex]\r\n        for(var i=0;i<this.state.compare.length;++i){\r\n            if(!(this.state.compare[i] in collection.contentData[key])){\r\n                 if(i>0 && collection.contentData[key][this.state.compare[i-1]].length>0){\r\n                    collection.contentData[key][this.state.compare[i]] = [];\r\n                }else if(i==0){\r\n                    collection.contentData[key][this.state.compare[i]] = [];\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        this.setState({ nodeDeleteRelationRules });\r\n\r\n    }\r\n    removeContentDataKey(key, permIndex, collectionIndex, type, nodeType) {\r\n        var nodeDeleteRelationRules = [...this.state.nodeDeleteRelationRules]\r\n        var collection = nodeDeleteRelationRules[0].roleRules.permissions[permIndex][type][nodeType][collectionIndex]\r\n        delete collection.contentData[key];\r\n        this.setState({ nodeDeleteRelationRules });\r\n\r\n    }\r\n    changeContentDataKey(key, permIndex, collectionIndex, type, keyIndex, nodeType, e) {\r\n        var nodeDeleteRelationRules = [...this.state.nodeDeleteRelationRules]\r\n        var collection = nodeDeleteRelationRules[0].roleRules.permissions[permIndex][type][nodeType][collectionIndex]\r\n        var newContentData = {}\r\n        Object.keys(collection.contentData).map((k, i) => {\r\n            if (keyIndex == i) {\r\n                newContentData[e.target.value] = collection.contentData[k]\r\n            } else {\r\n                newContentData[k] = collection.contentData[k]\r\n            }\r\n        })\r\n        collection.contentData = newContentData;\r\n        this.setState({ nodeDeleteRelationRules });\r\n\r\n    }\r\n    changeCollectionName(permIndex, collectionIndex, type, nodeType, e) {\r\n        var nodeDeleteRelationRules = [...this.state.nodeDeleteRelationRules]\r\n        var collection = nodeDeleteRelationRules[0].roleRules.permissions[permIndex][type][nodeType][collectionIndex]\r\n        collection[\"collectionName\"] = e.target.value\r\n        this.setState({ nodeDeleteRelationRules });\r\n    }\r\n    changeNonPermittedCollectionName(permIndex, collectionIndex, type, nodeType, e) {\r\n        var nodeDeleteRelationRules = [...this.state.nodeDeleteRelationRules]\r\n        var collection = nodeDeleteRelationRules[0].roleRules.permissions[permIndex][type][nodeType][collectionIndex]\r\n        collection[\"collectionName\"] = e.target.value\r\n        this.setState({ nodeDeleteRelationRules });\r\n    }\r\n    addNewContentData(permIndex, collectionIndex, type, nodeType) {\r\n        var nodeDeleteRelationRules = [...this.state.nodeDeleteRelationRules]\r\n        var collection = nodeDeleteRelationRules[0].roleRules.permissions[permIndex][type][nodeType][collectionIndex]\r\n        collection.contentData[\"newkey\"] = {};\r\n        this.setState({ nodeDeleteRelationRules });\r\n    }\r\n    addNewCollection(permIndex, type, nodeType) {\r\n        var nodeDeleteRelationRules = [...this.state.nodeDeleteRelationRules]\r\n        var collection = nodeDeleteRelationRules[0].roleRules.permissions[permIndex][type][nodeType];\r\n        var model = {\r\n            collectionName: \"collectionName\",\r\n            contentData: {},\r\n            contentKeys: []\r\n        }\r\n        collection.push(model);\r\n        this.setState({ nodeDeleteRelationRules });\r\n    }\r\n    removeCollection(permIndex, index, type, nodeType) {\r\n        var nodeDeleteRelationRules = [...this.state.nodeDeleteRelationRules]\r\n        var collection = nodeDeleteRelationRules[0].roleRules.permissions[permIndex][type][nodeType];\r\n        collection.splice(index, 1)\r\n        this.setState({ nodeDeleteRelationRules });\r\n    }\r\n    changeCK(permIndex, collectionIndex, type, nodeType, e) {\r\n        var nodeDeleteRelationRules = [...this.state.nodeDeleteRelationRules]\r\n        var collection = nodeDeleteRelationRules[0].roleRules.permissions[permIndex][type][nodeType][collectionIndex]\r\n        if (e.target.value.toString().indexOf(\",\") >= 0) {\r\n            var arr = this.getValueAsArrayByType(e.target.value, \"string\");\r\n            if (arr[0] && collection.contentKeys.indexOf(arr[0]) < 0) {\r\n                collection.contentKeys.push(arr[0]);\r\n            }\r\n            e.target.value = \"\";\r\n        }\r\n        this.setState({ nodeDeleteRelationRules });\r\n    }\r\n\r\n    removeContentKeys(val, permIndex, collectionIndex, type, nodeType, e) {\r\n        var nodeDeleteRelationRules = [...this.state.nodeDeleteRelationRules]\r\n        var collection = nodeDeleteRelationRules[0].roleRules.permissions[permIndex][type][nodeType][collectionIndex]\r\n        const index = collection.contentKeys.indexOf(val);\r\n        if (index > -1) {\r\n            collection.contentKeys.splice(index, 1);\r\n        }\r\n        this.setState({ nodeDeleteRelationRules });\r\n    }\r\n    changeRS(permIndex, type, e) {\r\n        var nodeDeleteRelationRules = [...this.state.nodeDeleteRelationRules]\r\n        var collection = nodeDeleteRelationRules[0].roleRules.permissions[permIndex][type]\r\n        if (e.target.value.toString().indexOf(\",\") >= 0) {\r\n            var arr = this.getValueAsArrayByType(e.target.value, \"string\");\r\n            if (arr[0] && collection.relationship.indexOf(arr[0]) < 0) {\r\n                collection.relationship.push(arr[0]);\r\n            }\r\n            e.target.value = \"\";\r\n        }\r\n        this.setState({ nodeDeleteRelationRules });\r\n    }\r\n    removeRelationship(val, permIndex, type, e) {\r\n        var nodeDeleteRelationRules = [...this.state.nodeDeleteRelationRules]\r\n        var collection = nodeDeleteRelationRules[0].roleRules.permissions[permIndex][type];\r\n        const index = collection.relationship.indexOf(val);\r\n        if (index > -1) {\r\n            collection.relationship.splice(index, 1);\r\n        }\r\n        this.setState({ nodeDeleteRelationRules });\r\n    }\r\n    getContentKeysItems(val, permIndex, collectionIndex, type, nodeType) {\r\n        return (\r\n            <p className=\"p-1 rounded border border-primary text-primary\">{val}\r\n                <span style={fRight}> <button type=\"button\"\r\n                    onClick={this.removeContentKeys.bind(this, val, permIndex, collectionIndex, type, nodeType)}\r\n                    class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n            </p>\r\n        )\r\n    }\r\n    getRelationshipItems(val, permIndex, type) {\r\n        return (\r\n            <p className=\"p-1 rounded border border-primary text-primary\">{val}\r\n                <span style={fRight}> <button type=\"button\"\r\n                    onClick={this.removeRelationship.bind(this, val, permIndex, type)}\r\n                    class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n            </p>\r\n        )\r\n    }\r\n    getValueAsArray(val) {\r\n        var arr = []\r\n        var d = val.toString();\r\n        var ind = d.indexOf(',');\r\n        if (ind >= 0) {\r\n            arr = val.split(\",\");\r\n        }\r\n        else\r\n            arr.push(val)\r\n\r\n        return arr;\r\n    }\r\n    getValueAsArrayByType(val, type) {\r\n        var arr = []\r\n        var d = val.toString();\r\n        var ind = d.indexOf(',');\r\n        if (ind >= 0) {\r\n            var arrElems = val.split(\",\");\r\n            switch (type) {\r\n                case \"string\":\r\n                    arr = arrElems;\r\n                    break;\r\n                case \"number\":\r\n                    arrElems.map((item) => {\r\n                        arr.push(parseInt(item));\r\n                    });\r\n            }\r\n        }\r\n        else {\r\n            switch (type) {\r\n                case \"string\":\r\n                    if (val) {\r\n                        arr.push(val)\r\n                    }\r\n                    break;\r\n                case \"number\":\r\n                    if (!isNaN(val)) {\r\n                        arr.push(val)\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return arr;\r\n    }\r\n    convert(val, type) {\r\n        if (!Array.isArray(val)) {\r\n            switch (type) {\r\n                case \"string\":\r\n                    return val.toString();\r\n                case \"number\":\r\n                    return parseInt(val);\r\n            }\r\n        } else {\r\n            switch (type) {\r\n                case \"string\":\r\n                    var arr = [];\r\n                    val.map((item) => {\r\n                        arr.push(item.toString());\r\n                    });\r\n                    return arr;\r\n                case \"number\":\r\n                    var arr = [];\r\n                    val.map((item) => {\r\n                        var item = parseInt(item);\r\n                        if (!isNaN(item))\r\n                            arr.push(item);\r\n                    });\r\n                    return arr;\r\n            }\r\n\r\n        }\r\n    }\r\n    async addUpdateRule() {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var nodeDeleteRelationRules = [...this.state.nodeDeleteRelationRules]\r\n        var rule = nodeDeleteRelationRules[0].roleRules;\r\n        var rls = {\r\n            method: rule.method,\r\n            methodType: rule.methodType,\r\n            methodContentType: rule.methodContentType,\r\n            service: rule.service,\r\n            permissions: rule.permissions\r\n        }\r\n        var orgId = localStorage.getItem(\"orgId\");\r\n        var appId = localStorage.getItem(\"appId\");\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            rules: [rls]\r\n        }\r\n        this.props.addUpdateRule(model);\r\n    }\r\n    setVisible(vis) {\r\n        this.setState({ visible: vis });\r\n    }\r\n    async setYesNoVisible(vis, question, sendType, args, send) {\r\n        if (vis)\r\n            this.setState({ yesNoVisible: vis, yesNoQuestion: question, sendType: sendType, arguments: args });\r\n        else {\r\n            if (send) {\r\n                var st = this.state.sendType;\r\n                switch (st) {\r\n                    case \"deleteRole\":\r\n                        await this.deleteRole(this.state.arguments);\r\n                        break;\r\n                    case \"saveAll\":\r\n                        await this.addUpdateRule();\r\n                        break;\r\n                }\r\n            }\r\n            this.setState({ yesNoVisible: vis, yesNoQuestion: \"\", sendType: \"\", arguments: [] });\r\n        }\r\n    }\r\n    async newRuleAdd() {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var eleman = document.getElementById(\"newrule\");\r\n        if (!eleman.value) {\r\n            this.props.toastShow(\"error\", \"Role Name cannot be null or empty!\");\r\n        \r\n            return false;\r\n        }\r\n        var orgId = localStorage.getItem(\"orgId\");\r\n        var appId = localStorage.getItem(\"appId\");\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            rules: [\r\n                {\r\n                    method: \"/recommendation/delete/relation\",\r\n                    methodType: \"recommendationDelete\",\r\n                    methodContentType: \"relation\",\r\n                    service: \"recommendationService\",\r\n                    permissions: [{\r\n                        role: eleman.value,\r\n                        permitted: {\r\n                            relationship: [],\r\n                            nodes: [],\r\n                            mainNodes: [],\r\n                            mainSub: []\r\n                        },\r\n                        nonPermitted: {\r\n                            relationship: [],\r\n                            nodes: [],\r\n                            mainNodes: [],\r\n                            mainSub: []\r\n                        }\r\n                    }]\r\n                }\r\n            ]\r\n        }\r\n        await this.props.newRuleAdd(model);\r\n        this.getDeleteRelationNodeRules();\r\n    }\r\n    async deleteRole(args) {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var id = args[0];\r\n        var index = args[1];\r\n        var orgId = localStorage.getItem('orgId')\r\n        var appId = localStorage.getItem('appId')\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            id: id\r\n        }\r\n        var success = await this.props.deleteRole(model);\r\n      \r\n        if (success) {\r\n            var nodeDeleteRelationRules = [...this.state.nodeDeleteRelationRules]\r\n            var permissions = nodeDeleteRelationRules[0].roleRules.permissions;\r\n            permissions.splice(index, 1);\r\n            this.setState({ nodeDeleteRelationRules });\r\n        }\r\n    }\r\n    addNewMainSub(permIndex, type) {\r\n        var nodeDeleteRelationRules = [...this.state.nodeDeleteRelationRules]\r\n        var collection = nodeDeleteRelationRules[0].roleRules.permissions[permIndex][type].mainSub;\r\n        var model = {\r\n            main: \"mainCollectionName\",\r\n            sub: []\r\n        }\r\n        collection.push(model);\r\n        this.setState({ nodeDeleteRelationRules });\r\n    }\r\n    removeMainSub(permIndex, index, type) {\r\n        var nodeDeleteRelationRules = [...this.state.nodeDeleteRelationRules]\r\n        var collection = nodeDeleteRelationRules[0].roleRules.permissions[permIndex][type].mainSub;\r\n        collection.splice(index, 1)\r\n        this.setState({ nodeDeleteRelationRules });\r\n    }\r\n    mainCollectionChange(permIndex, mainSubIndex, type, e) {\r\n        var nodeDeleteRelationRules = [...this.state.nodeDeleteRelationRules]\r\n        var collection = nodeDeleteRelationRules[0].roleRules.permissions[permIndex][type].mainSub[mainSubIndex]\r\n        collection.main = e.target.value;\r\n        this.setState({ nodeDeleteRelationRules });\r\n    }\r\n    changeSub(permIndex, mainSubIndex, type, e) {\r\n        var nodeDeleteRelationRules = [...this.state.nodeDeleteRelationRules]\r\n        var collection = nodeDeleteRelationRules[0].roleRules.permissions[permIndex][type].mainSub[mainSubIndex]\r\n        if (e.target.value.toString().indexOf(\",\") >= 0) {\r\n            var arr = this.getValueAsArrayByType(e.target.value, \"string\");\r\n            if (arr[0] && collection.sub.indexOf(arr[0]) < 0) {\r\n                collection.sub.push(arr[0]);\r\n            }\r\n            e.target.value = \"\";\r\n        }\r\n        this.setState({ nodeDeleteRelationRules });\r\n    }\r\n    getMainSubItems(val, permIndex, mainSubIndex, valIndex, type) {\r\n        return (\r\n            <p className=\"p-1 rounded border border-primary text-primary\">{val}\r\n                <span style={fRight}> <button type=\"button\"\r\n                    onClick={this.removeSub.bind(this, permIndex, mainSubIndex, valIndex, type)}\r\n                    class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n            </p>\r\n        )\r\n    }\r\n    removeSub(permIndex, mainSubIndex, valIndex, type, e) {\r\n        var nodeDeleteRelationRules = [...this.state.nodeDeleteRelationRules]\r\n        var collection = nodeDeleteRelationRules[0].roleRules.permissions[permIndex][type].mainSub[mainSubIndex]\r\n        collection.sub.splice(valIndex, 1);\r\n        this.setState({ nodeDeleteRelationRules });\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <CCard>\r\n                <CRow className='m-2 border-bottom d-flex align-items-center'>\r\n                    <CCol className='col-6 pb-2'>\r\n                        <CCardTitle>Add/Update <b>\"Node Delete Relation\"</b> Permissions</CCardTitle>\r\n                    </CCol>\r\n                    <CCol className='col-6 d-grid gap-2 d-md-flex justify-content-md-end pb-2'>\r\n                        <CButton color='secondary' onClick={this.setVisible.bind(this, true)}>Add New Role</CButton>\r\n                        <CButton color='info' style={{\"color\":\"#fff\"}}\r\n                            onClick={this.setYesNoVisible.bind(this, true, \"Are you sure you want to save all?\", \"saveAll\", [this])}>Save All</CButton>\r\n                    </CCol>\r\n\r\n                    <CModal visible={this.state.visible} onClose={this.setVisible.bind(this, false)}>\r\n                        <CModalHeader>\r\n                            <CModalTitle>Add New Role</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalBody>\r\n                            <CFormInput type='text' placeholder='Role Name' name=\"newRule\" id=\"newrule\" />\r\n                        </CModalBody>\r\n                        <CModalFooter>\r\n                            <CButton color=\"secondary\" onClick={this.setVisible.bind(this, false)}>\r\n                                Close\r\n                            </CButton>\r\n                            <CButton color=\"primary\" onClick={this.newRuleAdd.bind(this)}>Create Role</CButton>\r\n                        </CModalFooter>\r\n                    </CModal>\r\n                    <CModal visible={this.state.yesNoVisible} onClose={this.setYesNoVisible.bind(this, false)}>\r\n                        <CModalHeader>\r\n                            <CModalTitle>{this.state.yesNoQuestion}</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalFooter>\r\n                            <CButton color=\"secondary\" onClick={this.setYesNoVisible.bind(this, false, null, null, null, false)}>\r\n                                No\r\n                            </CButton>\r\n                            <CButton color=\"primary\" onClick={this.setYesNoVisible.bind(this, false, null, null, null, true)}>Yes</CButton>\r\n                        </CModalFooter>\r\n                    </CModal>\r\n                </CRow>\r\n                <CCardBody style={cardText}>\r\n\r\n                    {this.state.nodeDeleteRelationRules.length > 0 &&\r\n\r\n                        this.state.nodeDeleteRelationRules[0].roleRules.permissions.map((item, index) => (\r\n                            <CCard className='mt-1'>\r\n                                <CCardBody>\r\n                                    <CCardTitle><b>\"{item.role}\"</b> Rules  <span style={fRight}>\r\n                                        <CButton color='danger'\r\n                                            onClick={this.setYesNoVisible.bind(this, true, \"Are you sure you want to delete \" + item.role + \" role?\", \"deleteRole\", [item._id, index, this])}\r\n                                            //onClick={this.deleteRole.bind(this,item._id,index)}\r\n                                            style={dangerIcon}>Delete Role</CButton></span></CCardTitle>\r\n                                    <CNav variant=\"tabs\" className='mt-4' role=\"tablist\" style={vars} >\r\n                                        <CNavItem>\r\n                                            <CNavLink\r\n                                                style={vars}\r\n                                                active={this.getSubActiveKey(this, 1, item._id)}\r\n                                                onClick={this.setSubActiveKey.bind(this, 1, item._id)}\r\n                                            >\r\n                                                Permitted\r\n                                            </CNavLink>\r\n                                        </CNavItem>\r\n                                        <CNavItem>\r\n                                            <CNavLink\r\n                                                style={vars}\r\n                                                active={this.getSubActiveKey(this, 2, item._id)}\r\n                                                onClick={this.setSubActiveKey.bind(this, 2, item._id)}\r\n                                            >\r\n                                                Non-Permitted\r\n                                            </CNavLink>\r\n                                        </CNavItem>\r\n\r\n                                    </CNav>\r\n                                    <CTabContent>\r\n                                        <CTabPane role=\"tabpanel\" className='p-3' aria-labelledby=\"home-tab\" visible={this.getSubActiveKey(this, 1, item._id)}>\r\n                                            <CCard>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Relationship Items</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    <CRow className='mt-2 pb-2'>\r\n                                                        <CCol className='col-9'>\r\n                                                            <CFormInput type='text' name='relationship'\r\n                                                                onChange={this.changeRS.bind(this, index, \"permitted\")}\r\n                                                                placeholder='Relationship' />\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                    <CRow>\r\n                                                        {item.permitted.relationship.map((c, i) =>\r\n                                                            <CCol className='col-3'>\r\n                                                                {this.getRelationshipItems(c, index, \"permitted\")}\r\n                                                            </CCol>\r\n                                                        )}\r\n                                                    </CRow>\r\n                                                </CCardBody>\r\n                                            </CCard>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Child Node Items</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n\r\n                                                    {item.permitted.nodes.map((c, i) => (\r\n\r\n                                                        <div>\r\n                                                            <CRow className='mt-2'>\r\n                                                                <CCol className='col-11'>\r\n                                                                    <CFormInput type='text' name='collectionName'\r\n                                                                        onChange={this.changeCollectionName.bind(this, index, i, \"permitted\", \"nodes\")}\r\n                                                                        placeholder='Collection Name' value={c.collectionName} />\r\n                                                                </CCol>\r\n                                                                <CCol className='align-self-center'>\r\n                                                                    <span style={fRight}> <button type=\"button\"\r\n                                                                        onClick={this.removeCollection.bind(this, index, i, \"permitted\", \"nodes\")}\r\n                                                                        class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            {Object.keys(c.contentData).map((key, keyIndex) => (\r\n                                                                <div>\r\n                                                                    <CRow className='mt-2'>\r\n                                                                        <CCol className='col-11'>\r\n                                                                            <CCard>\r\n                                                                                <CCardBody>\r\n                                                                                    <CRow className='mt-2 pb-2 border-bottom'>\r\n                                                                                        <CCol className='col-9'><CFormInput type='text' placeholder='Content Field'\r\n                                                                                            value={key} onChange={this.changeContentDataKey.bind(this, key, index, i, \"permitted\", keyIndex, \"nodes\")} /></CCol>\r\n                                                                                         <CCol className='col-1 align-self-center'>\r\n                                                                                            <button type=\"button\"\r\n                                                                                            onClick={this.removeContentDataKey.bind(this, key, index, i, \"permitted\", \"nodes\")}\r\n                                                                                                class=\"btn-close\" aria-label=\"Remove\" />\r\n                                                                                        </CCol>\r\n                                                                                    </CRow>\r\n                                                                                    {this.getContentData(c.contentData[key], key, index, i, \"permitted\", \"nodes\")}\r\n                                                                                </CCardBody>\r\n                                                                            </CCard>\r\n                                                                        </CCol>\r\n                                                                    </CRow>\r\n\r\n\r\n                                                                </div>\r\n                                                            ))\r\n                                                            }\r\n\r\n                                                            <CRow className='mt-2 justify-content-center'>\r\n                                                                <CCol className='col-6 text-center'>\r\n                                                                    <CButton onClick={this.addNewContentData.bind(this, index, i, \"permitted\", \"nodes\")}><CIcon icon={icon.cilPlus} />Add New Content Data for {c.collectionName}</CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            <CRow className='mt-2 pb-2'>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <CFormInput type='text' name='contentKeys'\r\n                                                                        onChange={this.changeCK.bind(this, index, i, \"permitted\", \"nodes\")}\r\n                                                                        placeholder='Content Keys with comma' />\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n\r\n                                                            <CRow className='mt-2'>\r\n                                                                {c.contentKeys.map((val =>\r\n                                                                    <CCol className='col-3'>\r\n                                                                        {this.getContentKeysItems(val, index, i, \"permitted\", \"nodes\")}\r\n                                                                    </CCol>\r\n                                                                ))}\r\n                                                            </CRow>\r\n\r\n                                                        </div>\r\n                                                    ))}\r\n\r\n                                                </CCardBody>\r\n                                                <CCardFooter>\r\n                                                    <CRow className='mt-2 d-flex justify-content-center'>\r\n                                                        <CCol className='col-6 text-center'>\r\n                                                            <CButton onClick={this.addNewCollection.bind(this, index, \"permitted\", \"nodes\")}><CIcon icon={icon.cilPlus} />Add New Child Node for {item.role}</CButton>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                </CCardFooter>\r\n                                            </CCard>\r\n\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Main Node Items</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n\r\n                                                    {item.permitted.mainNodes.map((c, i) => (\r\n\r\n                                                        <div>\r\n                                                            <CRow className='mt-2'>\r\n                                                                <CCol className='col-11'>\r\n                                                                    <CFormInput type='text' name='collectionName'\r\n                                                                        onChange={this.changeCollectionName.bind(this, index, i, \"permitted\", \"mainNodes\")}\r\n                                                                        placeholder='Collection Name' value={c.collectionName} />\r\n                                                                </CCol>\r\n                                                                <CCol className='align-self-center'>\r\n                                                                    <span style={fRight}> <button type=\"button\"\r\n                                                                        onClick={this.removeCollection.bind(this, index, i, \"permitted\", \"mainNodes\")}\r\n                                                                        class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            {Object.keys(c.contentData).map((key, keyIndex) => (\r\n                                                                <div>\r\n                                                                    <CRow className='mt-2'>\r\n                                                                        <CCol className='col-11'>\r\n                                                                            <CCard>\r\n                                                                                <CCardBody>\r\n                                                                                    <CRow className='mt-2 pb-2 border-bottom'>\r\n                                                                                        <CCol className='col-9'><CFormInput type='text' placeholder='Content Field'\r\n                                                                                            value={key} onChange={this.changeContentDataKey.bind(this, key, index, i, \"permitted\", keyIndex, \"mainNodes\")} /></CCol>\r\n                                                                                        <CCol className='col-1 align-self-center'>\r\n                                                                                            <button type=\"button\"\r\n                                                                                            onClick={this.removeContentDataKey.bind(this, key, index, i, \"permitted\", \"mainNodes\")}\r\n                                                                                                class=\"btn-close\" aria-label=\"Remove\" />\r\n                                                                                        </CCol>\r\n                                                                                    </CRow>\r\n                                                                                    {this.getContentData(c.contentData[key], key, index, i, \"permitted\", \"mainNodes\")}\r\n                                                                                </CCardBody>\r\n                                                                            </CCard>\r\n                                                                        </CCol>\r\n                                                                    </CRow>\r\n\r\n\r\n                                                                </div>\r\n                                                            ))\r\n                                                            }\r\n\r\n                                                            <CRow className='mt-2 justify-content-center'>\r\n                                                                <CCol className='col-6 text-center'>\r\n                                                                    <CButton onClick={this.addNewContentData.bind(this, index, i, \"permitted\", \"mainNodes\")}><CIcon icon={icon.cilPlus} />Add New Content Data for {c.collectionName}</CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            <CRow className='mt-2 pb-2'>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <CFormInput type='text' name='contentKeys'\r\n                                                                        onChange={this.changeCK.bind(this, index, i, \"permitted\", \"mainNodes\")}\r\n                                                                        placeholder='Content Keys with comma' />\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n\r\n                                                            <CRow className='mt-2'>\r\n                                                                {c.contentKeys.map((val =>\r\n                                                                    <CCol className='col-3'>\r\n                                                                        {this.getContentKeysItems(val, index, i, \"permitted\", \"mainNodes\")}\r\n                                                                    </CCol>\r\n                                                                ))}\r\n                                                            </CRow>\r\n\r\n                                                        </div>\r\n                                                    ))}\r\n\r\n                                                </CCardBody>\r\n                                                <CCardFooter>\r\n                                                    <CRow className='mt-2 d-flex justify-content-center'>\r\n                                                        <CCol className='col-6 text-center'>\r\n                                                            <CButton onClick={this.addNewCollection.bind(this, index, \"permitted\", \"mainNodes\")}><CIcon icon={icon.cilPlus} />Add New Main Node for {item.role}</CButton>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                </CCardFooter>\r\n                                            </CCard>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Main - Child Node Relation Permissions</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n\r\n                                                    {item.permitted.mainSub.map((val, i) => (\r\n                                                        <div>\r\n                                                            <CRow>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <CFormInput type='text' name='main' placeholder='Main Collection Name' onChange={this.mainCollectionChange.bind(this, index, i, \"permitted\")} value={val.main} />\r\n                                                                </CCol>\r\n                                                                <CCol className='align-self-center'>\r\n                                                                    <span style={fRight}> <button type=\"button\"\r\n                                                                        onClick={this.removeMainSub.bind(this, index, i, \"permitted\")}\r\n                                                                        class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            <CRow className='mt-2 pb-2'>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <CFormInput type='text' name='subCollection'\r\n                                                                        onChange={this.changeSub.bind(this, index, i, \"permitted\")}\r\n                                                                        placeholder='Child Collection Names with comma' />\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            <CRow className='mt-2'>\r\n                                                                {val.sub.map((s, si) =>\r\n                                                                    <CCol className='col-3'>\r\n                                                                        {this.getMainSubItems(s, index, i, si, \"permitted\")}\r\n                                                                    </CCol>\r\n                                                                )}\r\n                                                            </CRow>\r\n\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </CCardBody>\r\n                                                <CCardFooter>\r\n                                                    <CRow className='mt-2 justify-content-center'>\r\n                                                        <CCol className='col-6 text-center'>\r\n                                                            <CButton onClick={this.addNewMainSub.bind(this, index, \"permitted\")}><CIcon icon={icon.cilPlus} />Add Main - Child Relation for {item.role}</CButton>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                </CCardFooter>\r\n                                            </CCard>\r\n\r\n                                        </CTabPane>\r\n                                        <CTabPane role=\"tabpanel\" className='p-3' aria-labelledby=\"profile-tab\" visible={this.getSubActiveKey(this, 2, item._id)}>\r\n                                            <CCard>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Relationship Items</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    <CRow className='mt-2 pb-2'>\r\n                                                        <CCol className='col-9'>\r\n                                                            <CFormInput type='text' name='relationship'\r\n                                                                onChange={this.changeRS.bind(this, index, \"nonPermitted\")}\r\n                                                                placeholder='Relationship' />\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                    <CRow>\r\n                                                        {item.nonPermitted.relationship.map((c, i) =>\r\n                                                            <CCol className='col-3'>\r\n                                                                {this.getRelationshipItems(c, index, \"nonPermitted\")}\r\n                                                            </CCol>\r\n                                                        )}\r\n                                                    </CRow>\r\n                                                </CCardBody>\r\n                                            </CCard>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Child Node Items</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n\r\n                                                    {item.nonPermitted.nodes.map((c, i) => (\r\n\r\n                                                        <div>\r\n                                                            <CRow className='mt-2'>\r\n                                                                <CCol className='col-11'>\r\n                                                                    <CFormInput type='text' name='collectionName'\r\n                                                                        onChange={this.changeCollectionName.bind(this, index, i, \"nonPermitted\", \"nodes\")}\r\n                                                                        placeholder='Collection Name' value={c.collectionName} />\r\n                                                                </CCol>\r\n                                                                <CCol className='align-self-center'>\r\n                                                                    <span style={fRight}> <button type=\"button\"\r\n                                                                        onClick={this.removeCollection.bind(this, index, i, \"nonPermitted\", \"nodes\")}\r\n                                                                        class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            {Object.keys(c.contentData).map((key, keyIndex) => (\r\n                                                                <div>\r\n                                                                    <CRow className='mt-2'>\r\n                                                                        <CCol className='col-11'>\r\n                                                                            <CCard>\r\n                                                                                <CCardBody>\r\n                                                                                    <CRow className='mt-2 pb-2 border-bottom'>\r\n                                                                                        <CCol className='col-9'><CFormInput type='text' placeholder='Content Field'\r\n                                                                                            value={key} onChange={this.changeContentDataKey.bind(this, key, index, i, \"nonPermitted\", keyIndex, \"nodes\")} /></CCol>\r\n                                                                                        <CCol className='col-1 align-self-center'>\r\n                                                                                            <button type=\"button\"\r\n                                                                                            onClick={this.removeContentDataKey.bind(this, key, index, i, \"nonPermitted\", \"nodes\")}\r\n                                                                                                class=\"btn-close\" aria-label=\"Remove\" />\r\n                                                                                        </CCol>\r\n                                                                                    </CRow>\r\n                                                                                    {this.getContentData(c.contentData[key], key, index, i, \"nonPermitted\", \"nodes\")}\r\n                                                                                </CCardBody>\r\n                                                                            </CCard>\r\n                                                                        </CCol>\r\n                                                                    </CRow>\r\n\r\n\r\n                                                                </div>\r\n                                                            ))\r\n                                                            }\r\n\r\n                                                            <CRow className='mt-2 justify-content-center'>\r\n                                                                <CCol className='col-6 text-center'>\r\n                                                                    <CButton onClick={this.addNewContentData.bind(this, index, i, \"nonPermitted\", \"nodes\")}><CIcon icon={icon.cilPlus} />Add New Content Data for {c.collectionName}</CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            <CRow className='mt-2 pb-2'>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <CFormInput type='text' name='contentKeys'\r\n                                                                        onChange={this.changeCK.bind(this, index, i, \"nonPermitted\", \"nodes\")}\r\n                                                                        placeholder='Content Keys with comma' />\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n\r\n                                                            <CRow className='mt-2'>\r\n                                                                {c.contentKeys.map((val =>\r\n                                                                    <CCol className='col-3'>\r\n                                                                        {this.getContentKeysItems(val, index, i, \"nonPermitted\", \"nodes\")}\r\n                                                                    </CCol>\r\n                                                                ))}\r\n                                                            </CRow>\r\n\r\n                                                        </div>\r\n                                                    ))}\r\n\r\n                                                </CCardBody>\r\n                                                <CCardFooter>\r\n                                                    <CRow className='mt-2 d-flex justify-content-center'>\r\n                                                        <CCol className='col-6 text-center'>\r\n                                                            <CButton onClick={this.addNewCollection.bind(this, index, \"nonPermitted\", \"nodes\")}><CIcon icon={icon.cilPlus} />Add New Child Node for {item.role}</CButton>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                </CCardFooter>\r\n                                            </CCard>\r\n\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Main Node Items</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n\r\n                                                    {item.nonPermitted.mainNodes.map((c, i) => (\r\n\r\n                                                        <div>\r\n                                                            <CRow className='mt-2'>\r\n                                                                <CCol className='col-11'>\r\n                                                                    <CFormInput type='text' name='collectionName'\r\n                                                                        onChange={this.changeCollectionName.bind(this, index, i, \"nonPermitted\", \"mainNodes\")}\r\n                                                                        placeholder='Collection Name' value={c.collectionName} />\r\n                                                                </CCol>\r\n                                                                <CCol className='align-self-center'>\r\n                                                                    <span style={fRight}> <button type=\"button\"\r\n                                                                        onClick={this.removeCollection.bind(this, index, i, \"nonPermitted\", \"mainNodes\")}\r\n                                                                        class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            {Object.keys(c.contentData).map((key, keyIndex) => (\r\n                                                                <div>\r\n                                                                    <CRow className='mt-2'>\r\n                                                                        <CCol className='col-11'>\r\n                                                                            <CCard>\r\n                                                                                <CCardBody>\r\n                                                                                    <CRow className='mt-2 pb-2 border-bottom'>\r\n                                                                                        <CCol className='col-9'><CFormInput type='text' placeholder='Content Field'\r\n                                                                                            value={key} onChange={this.changeContentDataKey.bind(this, key, index, i, \"nonPermitted\", keyIndex, \"mainNodes\")} /></CCol>\r\n                                                                                        <CCol className='col-1 align-self-center'>\r\n                                                                                            <button type=\"button\"\r\n                                                                                            onClick={this.removeContentDataKey.bind(this, key, index, i, \"nonPermitted\", \"mainNodes\")}\r\n                                                                                                class=\"btn-close\" aria-label=\"Remove\" />\r\n                                                                                        </CCol>\r\n                                                                                    </CRow>\r\n                                                                                    {this.getContentData(c.contentData[key], key, index, i, \"nonPermitted\", \"mainNodes\")}\r\n                                                                                </CCardBody>\r\n                                                                            </CCard>\r\n                                                                        </CCol>\r\n                                                                    </CRow>\r\n\r\n\r\n                                                                </div>\r\n                                                            ))\r\n                                                            }\r\n\r\n                                                            <CRow className='mt-2 justify-content-center'>\r\n                                                                <CCol className='col-6 text-center'>\r\n                                                                    <CButton onClick={this.addNewContentData.bind(this, index, i, \"nonPermitted\", \"mainNodes\")}><CIcon icon={icon.cilPlus} />Add New Content Data for {c.collectionName}</CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            <CRow className='mt-2 pb-2'>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <CFormInput type='text' name='contentKeys'\r\n                                                                        onChange={this.changeCK.bind(this, index, i, \"nonPermitted\", \"mainNodes\")}\r\n                                                                        placeholder='Content Keys with comma' />\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n\r\n                                                            <CRow className='mt-2'>\r\n                                                                {c.contentKeys.map((val =>\r\n                                                                    <CCol className='col-3'>\r\n                                                                        {this.getContentKeysItems(val, index, i, \"nonPermitted\", \"mainNodes\")}\r\n                                                                    </CCol>\r\n                                                                ))}\r\n                                                            </CRow>\r\n\r\n                                                        </div>\r\n                                                    ))}\r\n\r\n                                                </CCardBody>\r\n                                                <CCardFooter>\r\n                                                    <CRow className='mt-2 d-flex justify-content-center'>\r\n                                                        <CCol className='col-6 text-center'>\r\n                                                            <CButton onClick={this.addNewCollection.bind(this, index, \"nonPermitted\", \"mainNodes\")}><CIcon icon={icon.cilPlus} />Add New Main Node for {item.role}</CButton>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                </CCardFooter>\r\n                                            </CCard>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Main - Child Node Relation Permissions</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n\r\n                                                    {item.nonPermitted.mainSub.map((val, i) => (\r\n                                                        <div>\r\n                                                            <CRow>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <CFormInput type='text' name='main' placeholder='Main Collection Name' onChange={this.mainCollectionChange.bind(this, index, i, \"nonPermitted\")} value={val.main} />\r\n                                                                </CCol>\r\n                                                                <CCol className='align-self-center'>\r\n                                                                    <span style={fRight}> <button type=\"button\"\r\n                                                                        onClick={this.removeMainSub.bind(this, index, i, \"nonPermitted\")}\r\n                                                                        class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            <CRow className='mt-2 pb-2'>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <CFormInput type='text' name='subCollection'\r\n                                                                        onChange={this.changeSub.bind(this, index, i, \"nonPermitted\")}\r\n                                                                        placeholder='Child Collection Names with comma' />\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            <CRow className='mt-2'>\r\n                                                                {val.sub.map((s, si) =>\r\n                                                                    <CCol className='col-3'>\r\n                                                                        {this.getMainSubItems(s, index, i, si, \"nonPermitted\")}\r\n                                                                    </CCol>\r\n                                                                )}\r\n                                                            </CRow>\r\n\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </CCardBody>\r\n                                                <CCardFooter>\r\n                                                    <CRow className='mt-2 justify-content-center'>\r\n                                                        <CCol className='col-6 text-center'>\r\n                                                            <CButton onClick={this.addNewMainSub.bind(this, index, \"nonPermitted\")}><CIcon icon={icon.cilPlus} />Add Main - Child Relation for {item.role}</CButton>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                </CCardFooter>\r\n                                            </CCard>\r\n                                        </CTabPane>\r\n\r\n                                    </CTabContent>\r\n                                </CCardBody>\r\n                            </CCard>\r\n                        ))}\r\n                </CCardBody>\r\n\r\n\r\n            </CCard>\r\n        )\r\n    }\r\n}\r\nexport default DeleteRelation","import React, { Component } from 'react';\r\nimport CIcon from '@coreui/icons-react';\r\nimport * as icon from '@coreui/icons';\r\nimport { Link } from 'react-router-dom'\r\nimport { Methods, get, postWithSavedToken } from \"../../../../genetousApi\"\r\nimport { format } from 'date-fns';\r\nimport { ToastContainer, toast,Slide } from 'react-toastify';\r\nimport Popup from '../../../widgets/Popup';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CCard,\r\n    CCardBody,\r\n    CRow,\r\n    CCol,\r\n    CCardTitle,\r\n    CFormInput,\r\n    CButton,\r\n    CFormSelect,\r\n    CModal,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CCardHeader,\r\n    CCardFooter,\r\n} from '@coreui/react'\r\nimport { bool } from 'prop-types';\r\nconst vars = {\r\n    'cursor': \"pointer\",\r\n    \"color\": \"rgb(33, 37, 41)\",\r\n    \"background-color\": \"#fff\"\r\n}\r\nconst activeLink = {\r\n    'cursor': \"pointer\",\r\n    \"background-color\": \"rgb(33, 37, 41)\",\r\n    \"color\": \"#fff\"\r\n}\r\nconst dangerIcon = {\r\n    \"color\": \"#f7f2f2\"\r\n}\r\nconst fRight = {\r\n    \"float\": \"right\"\r\n}\r\nconst cardText = { \"height\": \"620px\", \"overflow-y\": \"scroll\" }\r\nconst arrayLabels = [\"not\", \"in\",\"eq\"]\r\nexport class UpdateNodes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nodeUpdateRules: [],\r\n            activeKey: 1,\r\n            activeSubKeys: [1, 1, 1, 1, 1],\r\n            subKeys: [],\r\n            changedTypes: [],\r\n            visible: false,\r\n            yesNoVisible: false,\r\n            yesNoQuestion: \"\",\r\n            arguments: [],\r\n            sendType: \"\",\r\n            compare:[\"eq\",\"not\",\"gt\",\"gte\",\"lt\",\"lte\",\"in\"]\r\n\r\n        }\r\n    }\r\n\r\n    setSubActiveKey(key, id) {\r\n        const { subKeys } = this.state;\r\n        var index = subKeys.findIndex(x => x.id === id);\r\n        subKeys[index].activeKey = key;\r\n        this.setState({ subKeys });\r\n        return false;\r\n    }\r\n    getSubActiveKey(e, key, id) {\r\n        const { subKeys } = this.state;\r\n        var index = subKeys.findIndex(x => x.id === id);\r\n        return key == subKeys[index].activeKey\r\n    }\r\n    componentDidMount() {\r\n        this.getCreateNodeRules();\r\n    }\r\n    async getCreateNodeRules() {\r\n        var orgId = localStorage.getItem('orgId')\r\n        var appId = localStorage.getItem('appId')\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            service: \"recommendationService\",\r\n            methodContentType: \"collection\",\r\n            methodType: \"recommendationUpdate\"\r\n        }\r\n        var d = { ...this.state.nodeUpdateRules };\r\n        d = await this.props.getRules(model);\r\n       \r\n        var sk = [];\r\n        if (d.length > 0) {\r\n            var rr = d[0];\r\n            rr.roleRules.permissions.map(m => {\r\n                var data = {\r\n                    id: m._id,\r\n                    activeKey: 1\r\n                }\r\n                sk.push(data);\r\n            })\r\n        }\r\n\r\n        this.setState({ nodeUpdateRules: d, subKeys: sk });\r\n    }\r\n    getValueType(val) {\r\n        if (Array.isArray(val)) {\r\n            if (val.length > 0) {\r\n                return typeof val[0]\r\n            }\r\n        }\r\n        return typeof val;\r\n    }\r\n    getContentData(item, key, permIndex, collectionIndex, type) {\r\n        return (\r\n            <div>\r\n                {Object.keys(item).length < 1 &&\r\n                    <CRow className='mt-2 justify-content-center'>\r\n                        <CCol className='col-2'>\r\n                            <CButton color='primary' onClick={this.addNewContentDataSub.bind(this, key, permIndex, collectionIndex, type)}><CIcon style={dangerIcon} icon={icon.cilPlus} /></CButton>\r\n                        </CCol>\r\n                    </CRow>\r\n                }\r\n                {typeof item == \"object\" &&\r\n                    Object.keys(item).map((k, i) => {\r\n                        return (\r\n                            <div>\r\n                                <CRow className='mt-2'>\r\n                                    <CCol className='col-3'>\r\n                                        <CFormSelect onChange={this.eqChanged.bind(this, key, k, permIndex, collectionIndex, type, i)}\r\n                                            value={k} name={this.getValueType(item[k])}>\r\n                                            <option value=\"eq\">{'='}</option>\r\n                                            <option value=\"not\">{'!='}</option>\r\n                                            <option value=\"gt\">{'>'}</option>\r\n                                            <option value=\"gte\">{'>='}</option>\r\n                                            <option value=\"lt\">{'<'}</option>\r\n                                            <option value=\"lte\">{'<='}</option>\r\n                                            <option value=\"in\">{'in'}</option>\r\n                                        </CFormSelect>\r\n                                    </CCol>\r\n                                    <CCol className='col-3'>\r\n                                        <CFormInput type='text' name='value' onChange={this.changeContentDataSubKey.bind(this, key, k, permIndex, collectionIndex, type)} placeholder={arrayLabels.indexOf(k) < 0 ? \"value\" : \"values with comma\"} value={arrayLabels.indexOf(k) < 0 ? item[k] : this.value} />\r\n                                    </CCol>\r\n                                    <CCol className='col-3'>\r\n                                        <CFormSelect id={key + \"_\" + k + \"_\" + permIndex + \"_\" + collectionIndex + \"_\" + type}\r\n                                            onChange={this.typeChanged.bind(this, key, k, permIndex, collectionIndex, type, i)}\r\n                                            value={this.getValueType(item[k])}\r\n                                            disabled={item[k].length<1} >\r\n                                            <option value=\"string\">{'String'}</option>\r\n                                            <option value=\"number\">{'Integer'}</option>\r\n                                        </CFormSelect>\r\n                                    </CCol>\r\n                                    <CCol className='col-1 align-self-center'>\r\n                                        <button type=\"button\"                        \r\n                                            onClick={this.removeContentDataSubKey.bind(this, key, k, permIndex, collectionIndex, type)}\r\n                                            class=\"btn-close\" aria-label=\"Remove\"/>\r\n                                    </CCol>\r\n                                    \r\n                                    {Object.keys(item).length - 1 == i &&\r\n                                        <CCol className='col-1'>\r\n                                            <CButton color='primary' onClick={this.addNewContentDataSub.bind(this, key, permIndex, collectionIndex, type)}><CIcon style={dangerIcon} icon={icon.cilPlus} /></CButton>\r\n                                        </CCol>\r\n                                    }\r\n                                </CRow>\r\n                                {arrayLabels.indexOf(k) >= 0 &&\r\n                                    <CRow className='mt-2'>\r\n                                        {item[k].map((val =>\r\n                                            <CCol className='col-3'>\r\n                                                {this.getArrayItems(val, key, k, permIndex, collectionIndex, type)}\r\n                                            </CCol>\r\n                                        ))}\r\n                                    </CRow>\r\n                                }\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n    getArrayItems(val, key, k, permIndex, collectionIndex, type) {\r\n        return (\r\n            <p className=\"p-1 rounded border border-primary text-primary\">{val}\r\n                <span style={fRight}> <button type=\"button\"\r\n                    onClick={this.removeContentDataSubKeyArray.bind(this, key, k, permIndex, collectionIndex, type, val)}\r\n                    class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n            </p>\r\n        )\r\n    }\r\n\r\n    eqChanged(key, k, permIndex, collectionIndex, type, keyIndex, e) {\r\n        var nodeUpdateRules = [...this.state.nodeUpdateRules]\r\n        var collection = nodeUpdateRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex]\r\n        var newContentData = {}\r\n\r\n        Object.keys(collection.contentData[key]).map((ki, i) => {\r\n            if (keyIndex == i) {\r\n                if (arrayLabels.indexOf(e.target.value) < 0)\r\n                    newContentData[e.target.value] = collection.contentData[key][ki]\r\n                else {\r\n                    var arr = this.getValueAsArrayByType(collection.contentData[key][ki], e.target.name);\r\n                    newContentData[e.target.value] = arr\r\n                }\r\n            } else {\r\n                newContentData[ki] = collection.contentData[key][ki]\r\n            }\r\n        })\r\n        collection.contentData[key] = newContentData;\r\n        this.setState({ nodeUpdateRules });\r\n    }\r\n    typeChanged(key, k, permIndex, collectionIndex, type, keyIndex, e) {\r\n        var nodeUpdateRules = [...this.state.nodeUpdateRules]\r\n        var collection = nodeUpdateRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex]\r\n        var newContentData = {}\r\n        Object.keys(collection.contentData[key]).map((ki, i) => {\r\n            if (keyIndex == i) {\r\n                if (arrayLabels.indexOf(k) < 0)\r\n                    newContentData[k] = this.convert(collection.contentData[key][ki], e.target.value);\r\n                else {\r\n                    var arr = this.convert(collection.contentData[key][ki], e.target.value);\r\n                    newContentData[k] = arr\r\n                }\r\n            } else {\r\n                newContentData[ki] = collection.contentData[key][ki]\r\n            }\r\n        })\r\n        collection.contentData[key] = newContentData;\r\n        this.setState({ nodeUpdateRules });\r\n    }\r\n    removeContentDataSubKey(key, k, permIndex, collectionIndex, type) {\r\n        var nodeUpdateRules = [...this.state.nodeUpdateRules]\r\n        var collection = nodeUpdateRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex]\r\n        delete collection.contentData[key][k];\r\n        this.setState({ nodeUpdateRules });\r\n\r\n    }\r\n    removeContentDataSubKeyArray(key, k, permIndex, collectionIndex, type, val) {\r\n        var nodeUpdateRules = [...this.state.nodeUpdateRules]\r\n        var collection = nodeUpdateRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex]\r\n        const index = collection.contentData[key][k].indexOf(val);\r\n        if (index > -1) {\r\n            collection.contentData[key][k].splice(index, 1);\r\n        }\r\n        this.setState({ nodeUpdateRules });\r\n\r\n    }\r\n\r\n    changeContentDataSubKey(key, k, permIndex, collectionIndex, type, e) {\r\n        var eleman = document.getElementById(key + \"_\" + k + \"_\" + permIndex + \"_\" + collectionIndex + \"_\" + type)\r\n        var nodeUpdateRules = [...this.state.nodeUpdateRules]\r\n        var collection = nodeUpdateRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex];\r\n        if (arrayLabels.indexOf(k) < 0)\r\n            collection.contentData[key][k] = e.target.value;\r\n        else {\r\n            if (e.target.value.toString().indexOf(\",\") >= 0) {\r\n                var arr = this.getValueAsArrayByType(e.target.value, eleman.value);\r\n                switch (eleman.value) {\r\n                    case \"string\":\r\n                        if (arr[0] && collection.contentData[key][k].indexOf(arr[0]) < 0) {\r\n                            collection.contentData[key][k].push(arr[0]);\r\n                        }\r\n                        break;\r\n                    case \"number\":\r\n                        if (!isNaN(arr[0]) && collection.contentData[key][k].indexOf(arr[0]) < 0) {\r\n                            collection.contentData[key][k].push(arr[0]);\r\n                        }\r\n                        break;\r\n                }\r\n                e.target.value = \"\";\r\n            }\r\n            else if (e.target.value.toString().trim() == \"\") {\r\n                e.target.value = \"\";\r\n            }\r\n        }\r\n        this.setState({ nodeUpdateRules });\r\n\r\n    }\r\n    addNewContentDataSub(key, permIndex, collectionIndex, type) {\r\n        var nodeUpdateRules = [...this.state.nodeUpdateRules]\r\n        var collection = nodeUpdateRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex]\r\n        for(var i=0;i<this.state.compare.length;++i){\r\n            if(!(this.state.compare[i] in collection.contentData[key])){\r\n                 if(i>0 && collection.contentData[key][this.state.compare[i-1]].length>0){\r\n                    collection.contentData[key][this.state.compare[i]] = [];\r\n                }else if(i==0){\r\n                    collection.contentData[key][this.state.compare[i]] = [];\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        this.setState({ nodeUpdateRules });\r\n\r\n    }\r\n    removeContentDataKey(key, permIndex, collectionIndex, type) {\r\n        var nodeUpdateRules = [...this.state.nodeUpdateRules]\r\n        var collection = nodeUpdateRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex]\r\n        delete collection.contentData[key];\r\n        this.setState({ nodeUpdateRules });\r\n\r\n    }\r\n    changeContentDataKey(key, permIndex, collectionIndex, type, keyIndex, e) {\r\n        var nodeUpdateRules = [...this.state.nodeUpdateRules]\r\n        var collection = nodeUpdateRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex]\r\n        var newContentData = {}\r\n        Object.keys(collection.contentData).map((k, i) => {\r\n            if (keyIndex == i) {\r\n                newContentData[e.target.value] = collection.contentData[k]\r\n            } else {\r\n                newContentData[k] = collection.contentData[k]\r\n            }\r\n        })\r\n        collection.contentData = newContentData;\r\n        this.setState({ nodeUpdateRules });\r\n\r\n    }\r\n    changeCollectionName(permIndex, collectionIndex, type, e) {\r\n        var nodeUpdateRules = [...this.state.nodeUpdateRules]\r\n        var collection = nodeUpdateRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex]\r\n        collection[\"collectionName\"] = e.target.value\r\n        this.setState({ nodeUpdateRules });\r\n    }\r\n    changeNonPermittedCollectionName(permIndex, collectionIndex, type, e) {\r\n        var nodeUpdateRules = [...this.state.nodeUpdateRules]\r\n        var collection = nodeUpdateRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex]\r\n        collection[\"collectionName\"] = e.target.value;\r\n        this.setState({ nodeUpdateRules });\r\n    }\r\n    addNewContentData(permIndex, collectionIndex, type) {\r\n        var nodeUpdateRules = [...this.state.nodeUpdateRules]\r\n        var collection = nodeUpdateRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex]\r\n        collection.contentData[\"newkey\"] = {};\r\n        this.setState({ nodeUpdateRules });\r\n    }\r\n    addNewCollection(permIndex, type) {\r\n        var nodeUpdateRules = [...this.state.nodeUpdateRules]\r\n        var collection = nodeUpdateRules[0].roleRules.permissions[permIndex][type].nodes;\r\n        var model = {\r\n            collectionName: \"collectionName\",\r\n            contentData: {},\r\n            contentKeys: []\r\n        }\r\n        collection.push(model);\r\n        this.setState({ nodeUpdateRules });\r\n    }\r\n    removeCollection(permIndex, index, type) {\r\n        var nodeUpdateRules = [...this.state.nodeUpdateRules]\r\n        var collection = nodeUpdateRules[0].roleRules.permissions[permIndex][type].nodes;\r\n        collection.splice(index, 1)\r\n        this.setState({ nodeUpdateRules });\r\n    }\r\n    changeCK(permIndex, collectionIndex, type, e) {\r\n        var nodeUpdateRules = [...this.state.nodeUpdateRules]\r\n        var collection = nodeUpdateRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex]\r\n        if (e.target.value.toString().indexOf(\",\") >= 0) {\r\n            var arr = this.getValueAsArrayByType(e.target.value, \"string\");\r\n            if (arr[0] && collection.contentKeys.indexOf(arr[0]) < 0) {\r\n                collection.contentKeys.push(arr[0]);\r\n            }\r\n            e.target.value = \"\";\r\n        }\r\n        this.setState({ nodeUpdateRules });\r\n    }\r\n    removeContentKeys(val, permIndex, collectionIndex, type, e) {\r\n        var nodeUpdateRules = [...this.state.nodeUpdateRules]\r\n        var collection = nodeUpdateRules[0].roleRules.permissions[permIndex][type].nodes[collectionIndex]\r\n        const index = collection.contentKeys.indexOf(val);\r\n        if (index > -1) {\r\n            collection.contentKeys.splice(index, 1);\r\n        }\r\n        this.setState({ nodeUpdateRules });\r\n    }\r\n    getContentKeysItems(val, permIndex, collectionIndex, type) {\r\n        return (\r\n            <p className=\"p-1 rounded border border-primary text-primary\">{val}\r\n                <span style={fRight}> <button type=\"button\"\r\n                    onClick={this.removeContentKeys.bind(this, val, permIndex, collectionIndex, type)}\r\n                    class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n            </p>\r\n        )\r\n    }\r\n    getValueAsArray(val) {\r\n        var arr = []\r\n        var d = val.toString();\r\n        var ind = d.indexOf(',');\r\n        if (ind >= 0) {\r\n            arr = val.split(\",\");\r\n        }\r\n        else\r\n            arr.push(val)\r\n\r\n        return arr;\r\n    }\r\n    getValueAsArrayByType(val, type) {\r\n        var arr = []\r\n        var d = val.toString();\r\n        var ind = d.indexOf(',');\r\n        if (ind >= 0) {\r\n            var arrElems = val.split(\",\");\r\n            switch (type) {\r\n                case \"string\":\r\n                    arr = arrElems;\r\n                    break;\r\n                case \"number\":\r\n                    arrElems.map((item) => {\r\n                        arr.push(parseInt(item));\r\n                    });\r\n            }\r\n        }\r\n        else {\r\n            switch (type) {\r\n                case \"string\":\r\n                    if (val) {\r\n                        arr.push(val)\r\n                    }\r\n                    break;\r\n                case \"number\":\r\n                    if (!isNaN(val)) {\r\n                        arr.push(val)\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return arr;\r\n    }\r\n    convert(val, type) {\r\n        if (!Array.isArray(val)) {\r\n            switch (type) {\r\n                case \"string\":\r\n                    return val.toString();\r\n                case \"number\":\r\n                    return parseInt(val);\r\n            }\r\n        } else {\r\n            switch (type) {\r\n                case \"string\":\r\n                    var arr = [];\r\n                    val.map((item) => {\r\n                        arr.push(item.toString());\r\n                    });\r\n                    return arr;\r\n                case \"number\":\r\n                    var arr = [];\r\n                    val.map((item) => {\r\n                        var item = parseInt(item);\r\n                        if (!isNaN(item))\r\n                            arr.push(item);\r\n                    });\r\n                    return arr;\r\n            }\r\n\r\n        }\r\n    }\r\n    async addUpdateRule() {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var nodeUpdateRules = [...this.state.nodeUpdateRules]\r\n        var rule = nodeUpdateRules[0].roleRules;\r\n        var rls = {\r\n            method: rule.method,\r\n            methodType: rule.methodType,\r\n            methodContentType: rule.methodContentType,\r\n            service: rule.service,\r\n            permissions: rule.permissions\r\n        }\r\n        var orgId = localStorage.getItem(\"orgId\");\r\n        var appId = localStorage.getItem(\"appId\");\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            rules: [rls]\r\n        }\r\n        this.props.addUpdateRule(model);\r\n    }\r\n    setVisible(vis) {\r\n        this.setState({ visible: vis });\r\n    }\r\n    async setYesNoVisible(vis, question, sendType, args, send) {\r\n        if (vis)\r\n            this.setState({ yesNoVisible: vis, yesNoQuestion: question, sendType: sendType, arguments: args });\r\n        else {\r\n            if (send) {\r\n                var st = this.state.sendType;\r\n                switch (st) {\r\n                    case \"deleteRole\":\r\n                        await this.deleteRole(this.state.arguments);\r\n                        break;\r\n                    case \"saveAll\":\r\n                        await this.addUpdateRule();\r\n                        break;\r\n                }\r\n            }\r\n            this.setState({ yesNoVisible: vis, yesNoQuestion: \"\", sendType: \"\", arguments: [] });\r\n        }\r\n    }\r\n    async newRuleAdd() {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var eleman = document.getElementById(\"newrule\");\r\n        if (!eleman.value) {\r\n            this.props.toastShow(\"error\", \"Role Name cannot be null or empty!\");\r\n        \r\n            return false;\r\n        }\r\n        var orgId = localStorage.getItem(\"orgId\");\r\n        var appId = localStorage.getItem(\"appId\");\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            rules: [\r\n                {\r\n                    method: \"/recommendation/update/nodes\",\r\n                    methodType: \"recommendationUpdate\",\r\n                    methodContentType: \"collection\",\r\n                    service: \"recommendationService\",\r\n                    permissions: [{\r\n                        role: eleman.value,\r\n                        permitted: {\r\n                            nodes: []\r\n                        },\r\n                        nonPermitted: {\r\n                            nodes: []\r\n                        }\r\n                    }]\r\n                }\r\n            ]\r\n        }\r\n        await this.props.newRuleAdd(model);\r\n        this.getCreateNodeRules();\r\n    }\r\n    async deleteRole(args) {\r\n        this.setVisible(false);\r\n        this.props.toastShow(\"info\", \"Processing....\");\r\n        var id = args[0];\r\n        var index = args[1];\r\n        var orgId = localStorage.getItem('orgId')\r\n        var appId = localStorage.getItem('appId')\r\n        var model = {\r\n            organizationId: orgId,\r\n            applicationId: appId,\r\n            id: id\r\n        }\r\n        var success = await this.props.deleteRole(model);\r\n      \r\n        if (success) {\r\n            var nodeUpdateRules = [...this.state.nodeUpdateRules]\r\n            var permissions = nodeUpdateRules[0].roleRules.permissions;\r\n            permissions.splice(index, 1);\r\n            this.setState({ nodeUpdateRules });\r\n        }\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <CCard>\r\n                <CRow className='m-2 border-bottom d-flex align-items-center'>\r\n                    <CCol className='col-6 pb-2'>\r\n                        <CCardTitle>Add/Update <b>\"Node Update\"</b> Permissions</CCardTitle>\r\n                    </CCol>\r\n                    <CCol className='col-6 d-grid gap-2 d-md-flex justify-content-md-end pb-2'>\r\n                        <CButton color='secondary' onClick={this.setVisible.bind(this, true)}>Add New Role</CButton>\r\n                        <CButton color='info' style={{\"color\":\"#fff\"}}\r\n                            onClick={this.setYesNoVisible.bind(this, true, \"Are you sure you want to save all?\", \"saveAll\", [this])}>Save All</CButton>\r\n                    </CCol>\r\n\r\n                    <CModal visible={this.state.visible} onClose={this.setVisible.bind(this, false)}>\r\n                        <CModalHeader>\r\n                            <CModalTitle>Add New Role</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalBody>\r\n                            <CFormInput type='text' placeholder='Role Name' name=\"newRule\" id=\"newrule\" />\r\n                        </CModalBody>\r\n                        <CModalFooter>\r\n                            <CButton color=\"secondary\" onClick={this.setVisible.bind(this, false)}>\r\n                                Close\r\n                            </CButton>\r\n                            <CButton color=\"primary\" onClick={this.newRuleAdd.bind(this)}>Create Role</CButton>\r\n                        </CModalFooter>\r\n                    </CModal>\r\n                    <CModal visible={this.state.yesNoVisible} onClose={this.setYesNoVisible.bind(this, false)}>\r\n                        <CModalHeader>\r\n                            <CModalTitle>{this.state.yesNoQuestion}</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalFooter>\r\n                            <CButton color=\"secondary\" onClick={this.setYesNoVisible.bind(this, false, null, null, null, false)}>\r\n                                No\r\n                            </CButton>\r\n                            <CButton color=\"primary\" onClick={this.setYesNoVisible.bind(this, false, null, null, null, true)}>Yes</CButton>\r\n                        </CModalFooter>\r\n                    </CModal>\r\n                </CRow>\r\n                <CCardBody style={cardText}>\r\n\r\n                    {this.state.nodeUpdateRules.length > 0 &&\r\n\r\n                        this.state.nodeUpdateRules[0].roleRules.permissions.map((item, index) => (\r\n                            <CCard className='mt-1'>\r\n                                <CCardBody>\r\n                                    <CCardTitle><b>\"{item.role}\"</b> Rules  <span style={fRight}>\r\n                                        <CButton color='danger'\r\n                                            onClick={this.setYesNoVisible.bind(this, true, \"Are you sure you want to delete \" + item.role + \" role?\", \"deleteRole\", [item._id, index, this])}\r\n                                            //onClick={this.deleteRole.bind(this,item._id,index)}\r\n                                            style={dangerIcon}>Delete Role</CButton></span></CCardTitle>\r\n                                    <CNav variant=\"tabs\" className='mt-4' role=\"tablist\" style={vars} >\r\n                                        <CNavItem>\r\n                                            <CNavLink\r\n                                                style={vars}\r\n                                                active={this.getSubActiveKey(this, 1, item._id)}\r\n                                                onClick={this.setSubActiveKey.bind(this, 1, item._id)}\r\n                                            >\r\n                                                Permitted\r\n                                            </CNavLink>\r\n                                        </CNavItem>\r\n                                        <CNavItem>\r\n                                            <CNavLink\r\n                                                style={vars}\r\n                                                active={this.getSubActiveKey(this, 2, item._id)}\r\n                                                onClick={this.setSubActiveKey.bind(this, 2, item._id)}\r\n                                            >\r\n                                                Non-Permitted\r\n                                            </CNavLink>\r\n                                        </CNavItem>\r\n\r\n                                    </CNav>\r\n                                    <CTabContent>\r\n                                        <CTabPane role=\"tabpanel\" className='p-3' aria-labelledby=\"home-tab\" visible={this.getSubActiveKey(this, 1, item._id)}>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Node Items</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    {item.permitted.nodes.map((c, i) => (\r\n                                                        <div>\r\n                                                            <CRow className='mt-2'>\r\n                                                                <CCol className='col-11'>\r\n                                                                    <CFormInput type='text' name='collectionName'\r\n                                                                        onChange={this.changeCollectionName.bind(this, index, i, \"permitted\")}\r\n                                                                        placeholder='Collection Name' value={c.collectionName} />\r\n                                                                </CCol>\r\n                                                                <CCol className='align-self-center'>\r\n                                                                    <span style={fRight}> <button type=\"button\"\r\n                                                                        onClick={this.removeCollection.bind(this, index, i, \"permitted\")}\r\n                                                                        class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            {Object.keys(c.contentData).map((key, keyIndex) => (\r\n                                                                <div>\r\n                                                                    <CRow className='mt-2'>\r\n                                                                        <CCol className='col-11'>\r\n                                                                            <CCard>\r\n                                                                                <CCardBody>\r\n                                                                                    <CRow className='mt-2 pb-2 border-bottom'>\r\n                                                                                        <CCol className='col-9'><CFormInput type='text' placeholder='Content Field'\r\n                                                                                            value={key} onChange={this.changeContentDataKey.bind(this, key, index, i, \"permitted\", keyIndex)} /></CCol>\r\n                                                                                        <CCol className='col-1 align-self-center'>\r\n                                                                                            <button type=\"button\"\r\n                                                                                            onClick={this.removeContentDataKey.bind(this, key, index, i, \"permitted\")}\r\n                                                                                                class=\"btn-close\" aria-label=\"Remove\" />\r\n                                                                                        </CCol>\r\n                                                                                    </CRow>\r\n                                                                                    {this.getContentData(c.contentData[key], key, index, i, \"permitted\")}\r\n                                                                                </CCardBody>\r\n                                                                            </CCard>\r\n                                                                        </CCol>\r\n                                                                    </CRow>\r\n\r\n\r\n                                                                </div>\r\n                                                            ))\r\n                                                            }\r\n\r\n                                                            <CRow className='mt-2 justify-content-center'>\r\n                                                                <CCol className='col-6 text-center'>\r\n                                                                    <CButton onClick={this.addNewContentData.bind(this, index, i, \"permitted\")}><CIcon icon={icon.cilPlus} />Add New Content Data for {c.collectionName}</CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            <CRow className='mt-2 pb-2'>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <CFormInput type='text' name='contentKeys'\r\n                                                                        onChange={this.changeCK.bind(this, index, i, \"permitted\")}\r\n                                                                        placeholder='Content Keys with comma' />\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n\r\n                                                            <CRow className='mt-2'>\r\n                                                                {c.contentKeys.map((val =>\r\n                                                                    <CCol className='col-3'>\r\n                                                                        {this.getContentKeysItems(val, index, i, \"permitted\")}\r\n                                                                    </CCol>\r\n                                                                ))}\r\n                                                            </CRow>\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </CCardBody>\r\n                                                <CCardFooter>\r\n                                                    <CRow className='mt-2 justify-content-center'>\r\n                                                        <CCol className='col-6 text-center'>\r\n                                                            <CButton onClick={this.addNewCollection.bind(this, index, \"permitted\")}><CIcon icon={icon.cilPlus} />Add New Collection for {item.role}</CButton>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                </CCardFooter>\r\n                                            </CCard>\r\n\r\n                                        </CTabPane>\r\n                                        <CTabPane role=\"tabpanel\" className='p-3' aria-labelledby=\"profile-tab\" visible={this.getSubActiveKey(this, 2, item._id)}>\r\n                                            <CCard className='mt-2'>\r\n                                                <CCardHeader>\r\n                                                    <CCardTitle className='p-2'>Node Items</CCardTitle>\r\n                                                </CCardHeader>\r\n                                                <CCardBody>\r\n                                                    {item.nonPermitted.nodes.map((c, i) => (\r\n                                                        <div>\r\n                                                            <CRow className='mt-2'>\r\n                                                                <CCol className='col-11'>\r\n                                                                    <CFormInput type='text' name='collectionName'\r\n                                                                        onChange={this.changeNonPermittedCollectionName.bind(this, index, i, \"nonPermitted\")} placeholder='Collection Name' value={c.collectionName} />\r\n                                                                </CCol>\r\n                                                                <CCol className='align-self-center'>\r\n                                                                    <span style={fRight}> <button type=\"button\"\r\n                                                                        onClick={this.removeCollection.bind(this, index, i, \"nonPermitted\")}\r\n                                                                        class=\"btn-close\" aria-label=\"Close\"></button></span>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            {Object.keys(c.contentData).map((key, keyIndex) => (\r\n                                                                <div>\r\n                                                                    <CRow className='mt-2'>\r\n                                                                        <CCol className='col-11'>\r\n                                                                            <CCard>\r\n                                                                                <CCardBody>\r\n                                                                                    <CRow className='mt-2 pb-2 border-bottom'>\r\n                                                                                        <CCol className='col-9'><CFormInput type='text' placeholder='Content Field'\r\n                                                                                            value={key} onChange={this.changeContentDataKey.bind(this, key, index, i, \"nonPermitted\", keyIndex)} /></CCol>\r\n                                                                                        <CCol className='col-1 align-self-center'>\r\n                                                                                            <button type=\"button\"\r\n                                                                                            onClick={this.removeContentDataKey.bind(this, key, index, i, \"nonPermitted\")}\r\n                                                                                                class=\"btn-close\" aria-label=\"Remove\" />\r\n                                                                                        </CCol>\r\n                                                                                    </CRow>\r\n                                                                                    {this.getContentData(c.contentData[key], key, index, i, \"nonPermitted\")}\r\n                                                                                </CCardBody>\r\n                                                                            </CCard>\r\n                                                                        </CCol>\r\n                                                                    </CRow>\r\n\r\n\r\n                                                                </div>\r\n                                                            ))\r\n                                                            }\r\n\r\n                                                            <CRow className='mt-2 justify-content-center'>\r\n                                                                <CCol className='col-6 text-center'>\r\n                                                                    <CButton onClick={this.addNewContentData.bind(this, index, i, \"nonPermitted\")}><CIcon icon={icon.cilPlus} />Add New Content Data for {c.collectionName}</CButton>\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n                                                            <CRow className='mt-2 pb-2'>\r\n                                                                <CCol className='col-9'>\r\n                                                                    <CFormInput type='text' name='contentKeys'\r\n                                                                        onChange={this.changeCK.bind(this, index, i, \"nonPermitted\")}\r\n                                                                        placeholder='Content Keys with comma' />\r\n                                                                </CCol>\r\n                                                            </CRow>\r\n\r\n                                                            <CRow className='mt-2'>\r\n                                                                {c.contentKeys.map((val =>\r\n                                                                    <CCol className='col-3'>\r\n                                                                        {this.getContentKeysItems(val, index, i, \"nonPermitted\")}\r\n                                                                    </CCol>\r\n                                                                ))}\r\n                                                            </CRow>\r\n\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </CCardBody>\r\n                                                <CCardFooter>\r\n                                                    <CRow className='mt-2 justify-content-center'>\r\n                                                        <CCol className='col-6 text-center'>\r\n                                                            <CButton onClick={this.addNewCollection.bind(this, index, \"nonPermitted\")}><CIcon icon={icon.cilPlus} />Add New Collection for {item.role}</CButton>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                </CCardFooter>\r\n                                            </CCard>\r\n\r\n                                        </CTabPane>\r\n\r\n                                    </CTabContent>\r\n                                </CCardBody>\r\n                            </CCard>\r\n                        ))}\r\n                </CCardBody>\r\n\r\n\r\n            </CCard>\r\n        )\r\n    }\r\n}\r\nexport default UpdateNodes","import React, { Component } from 'react';\r\nimport CreateNodes from './createNodes';\r\nimport DeleteNodes from './deleteNodes';\r\nimport Relate from './relate';\r\nimport DeleteRelation from './deleteRelation';\r\nimport UpdateNodes from './updateNodes';\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { Methods, get, postWithSavedToken } from \"../../../../genetousApi\"\r\n\r\nimport { ToastContainer, toast,Slide } from 'react-toastify';\r\nimport Popup from '../../../widgets/Popup';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CRow,\r\n    CCol,\r\n    CContainer,\r\n} from '@coreui/react'\r\nimport { bool } from 'prop-types';\r\nconst vars = {\r\n    'cursor': \"pointer\",\r\n    \"color\": \"rgba(33, 37, 41,0.8)\",\r\n    \"background-color\": \"#fff\"\r\n}\r\nconst activeLink = {\r\n    'cursor': \"pointer\",\r\n    \"background-color\": \"rgba(33, 37, 41,0.8)\",\r\n    \"color\": \"#fff\"\r\n}\r\nconst dangerIcon = {\r\n    \"color\": \"#c6c6c6\"\r\n}\r\nexport class Recommendation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            permissionItems: [\"Create Node\", \"Update Node\", \"Delete Node\", \"Relate Nodes\", \"Delete Relation\"],\r\n            collectionCreateRules: [],\r\n            activeKey: 1,\r\n            activeSubKeys: [1, 1, 1, 1, 1],\r\n            subKeys: [],\r\n            redirect: false,\r\n            sendApp:false\r\n        };\r\n        this.handleRedirect = this.handleRedirect.bind(this);\r\n        this.newRuleAdd = this.newRuleAdd.bind(this);\r\n        this.deleteRole = this.deleteRole.bind(this);\r\n        this.addUpdateRule = this.addUpdateRule.bind(this);\r\n        this.getRules = this.getRules.bind(this);\r\n        this.toastShow = this.toastShow.bind(this);\r\n\r\n    }\r\n    handleRedirectApp() {\r\n        if (!this.state.sendApp)\r\n            this.setState({ sendApp: true })\r\n    }\r\n    componentDidMount(){\r\n        var arr=[\"clientId\",\"organizationId\",\"applicationId\"]\r\n        for(var i=0;i<arr.length;++i){\r\n            var key=arr[i];\r\n            if(localStorage.getItem(key)== null || localStorage.getItem(key)==\"\"){\r\n                this.handleRedirect();\r\n                return;\r\n             }\r\n        }\r\n        var arr2=[\"appId\",\"orgId\"]\r\n        for(var i=0;i<arr2.length;++i){\r\n            var key=arr2[i];\r\n            if(localStorage.getItem(key)== null || localStorage.getItem(key)==\"\"){\r\n                this.handleRedirectApp();\r\n                return;\r\n             }\r\n        }\r\n    }\r\n    handleRedirect(e) {\r\n        if (!this.state.redirect)\r\n            this.setState({ redirect: true })\r\n    }\r\n    setActiveKey(key) {\r\n        this.setState({ activeKey: key });\r\n        return false;\r\n    }\r\n    async newRuleAdd(model) {\r\n        var eleman = document.getElementById(\"newrule\");\r\n        if (!eleman.value) {\r\n            this.toastShow(\"error\", \"Role Name cannot be null or empty!\")\r\n            return false;\r\n        }\r\n\r\n        var success=false;\r\n        var message=\"\";\r\n        await postWithSavedToken(model, Methods.AddUpdateRules).then(function (result) {\r\n            success=result.success;\r\n            if (result.success == true) {\r\n                message = \"Role Rule Created!\"\r\n\r\n            } else {\r\n                message = result.message;\r\n            }\r\n        },  err => {\r\n            if (err.status == 401) {\r\n                this.handleRedirect();\r\n            } else {\r\n                success=false;\r\n                message = err.message;\r\n            }\r\n        });\r\n        var type=success?\"success\":\"error\";\r\n        this.toastShow(type, message);\r\n        eleman.value = \"\";\r\n        return true;\r\n    }\r\n    async deleteRole(model) {\r\n        var success = false;\r\n        var message=\"\";\r\n        await postWithSavedToken(model, Methods.DeleteRule).then(function (result) {\r\n            success=result.success;\r\n            if (result.success == true) {\r\n                message = \"Role Deleted\"\r\n            } else {\r\n                message = result.message;\r\n            }\r\n        },  err => {\r\n            if (err.status == 401) {\r\n                this.handleRedirect();\r\n            } else {\r\n                success=false;\r\n                message = err.message;\r\n            }\r\n        });\r\n        var type=success?\"success\":\"error\";\r\n        this.toastShow(type, message);\r\n        if (success) {\r\n            return true\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n    async addUpdateRule(model) {\r\n        console.log(model);\r\n        var success = true;\r\n        await postWithSavedToken(model, Methods.AddUpdateRules).then(function (result) {\r\n            success=result.success;\r\n            if (result.success == true) {\r\n                message = \"Saved!\"\r\n            } else {\r\n                message = result.message;\r\n            }\r\n        },  err => {\r\n            if (err.status == 401) {\r\n                this.handleRedirect();\r\n            } else {\r\n                success=false;\r\n                message = err.message;\r\n            }\r\n        });\r\n        var type=success?\"success\":\"error\";\r\n        this.toastShow(type, message);\r\n    }\r\n    async getRules(model) {\r\n        var data = []\r\n        var success=true;\r\n        await postWithSavedToken(model, Methods.GetRules).then(function (result) {\r\n            if (result.length > 0 && result[0].hasOwnProperty('roleRules')) {\r\n                data = result;\r\n            }\r\n        }, err => {\r\n            if (err.status == 401) {\r\n                this.handleRedirect();\r\n            } else {\r\n                success=false;\r\n                message = err.message;\r\n            }\r\n        });\r\n        \r\n        return data;\r\n\r\n    }\r\n    toastShow(type, message) {\r\n        switch(type){\r\n            case \"success\":\r\n                toast.success(message, {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 1000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: false,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme: \"dark\",\r\n                    transition: Slide\r\n                });\r\n                break;\r\n            case \"error\":\r\n                toast.error(message, {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 1000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: false,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme: \"dark\",\r\n                    transition: Slide\r\n                });\r\n                break;\r\n            case \"info\":\r\n                toast.info(message, {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 1000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: false,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme: \"dark\",\r\n                    transition: Slide\r\n                });\r\n        }\r\n    }\r\n    render() {\r\n        const { redirect } = this.state;\r\n        const { sendApp } = this.state;\r\n\r\n        if (redirect) {\r\n            return <Redirect to='/login' />;\r\n        }\r\n        else if (sendApp) {\r\n            return <Redirect to='/applications' />;\r\n        }\r\n        return (\r\n            <CContainer className='p-5'>\r\n                <ToastContainer/>\r\n                <CRow>\r\n                    <CCol className='col-2'>\r\n                        <CNav className='flex-column' role=\"tablist\" style={vars} >\r\n                            {this.state.permissionItems.map((item, index) => (\r\n                                <CNavItem>\r\n                                    <CNavLink\r\n                                        style={this.state.activeKey === index + 1 ? activeLink : vars}\r\n                                        active={this.state.activeKey === index + 1}\r\n                                        onClick={this.setActiveKey.bind(this, index + 1)}\r\n                                    >\r\n                                        {item}\r\n                                    </CNavLink>\r\n                                </CNavItem>\r\n                            ))}\r\n                        </CNav>\r\n\r\n                    </CCol>\r\n                    <CCol className='col-10 justify-content-center'>\r\n                        <CTabContent>\r\n                            <CTabPane role=\"tabpanel\" aria-labelledby=\"home-tab\" visible={this.state.activeKey === 1}>\r\n                                <CreateNodes handleRedirect={this.handleRedirect}\r\n                                 newRuleAdd={this.newRuleAdd}\r\n                                 deleteRole={this.deleteRole}\r\n                                 addUpdateRule={this.addUpdateRule}\r\n                                 getRules={this.getRules}\r\n                                 toastShow={this.toastShow} />\r\n                            </CTabPane>\r\n                            <CTabPane role=\"tabpanel\" aria-labelledby=\"profile-tab\" visible={this.state.activeKey === 2}>\r\n                                <UpdateNodes handleRedirect={this.handleRedirect}\r\n                                 newRuleAdd={this.newRuleAdd}\r\n                                 deleteRole={this.deleteRole}\r\n                                 addUpdateRule={this.addUpdateRule}\r\n                                 getRules={this.getRules}\r\n                                 toastShow={this.toastShow} />\r\n                            </CTabPane>\r\n                            <CTabPane role=\"tabpanel\" aria-labelledby=\"contact-tab\" visible={this.state.activeKey === 3}>\r\n                                <DeleteNodes handleRedirect={this.handleRedirect}\r\n                                 newRuleAdd={this.newRuleAdd}\r\n                                 deleteRole={this.deleteRole}\r\n                                 addUpdateRule={this.addUpdateRule}\r\n                                 getRules={this.getRules}\r\n                                 toastShow={this.toastShow} />\r\n                            </CTabPane>\r\n                            <CTabPane role=\"tabpanel\" aria-labelledby=\"contact-tab\" visible={this.state.activeKey === 4}>\r\n                                <Relate handleRedirect={this.handleRedirect}\r\n                                 newRuleAdd={this.newRuleAdd}\r\n                                 deleteRole={this.deleteRole}\r\n                                 addUpdateRule={this.addUpdateRule}\r\n                                 getRules={this.getRules}\r\n                                 toastShow={this.toastShow} />\r\n                            </CTabPane>\r\n                            <CTabPane role=\"tabpanel\" aria-labelledby=\"contact-tab\" visible={this.state.activeKey === 5}>\r\n                                <DeleteRelation handleRedirect={this.handleRedirect}\r\n                                 newRuleAdd={this.newRuleAdd}\r\n                                 deleteRole={this.deleteRole}\r\n                                 addUpdateRule={this.addUpdateRule}\r\n                                 getRules={this.getRules}\r\n                                 toastShow={this.toastShow} />\r\n                            </CTabPane>\r\n                        </CTabContent>\r\n                    </CCol>\r\n                </CRow>\r\n\r\n            </CContainer>\r\n        )\r\n    }\r\n}\r\nexport default Recommendation","export const cilPlus = [\"512 512\",\"<polygon fill='var(--ci-primary-color, currentColor)' points='440 240 272 240 272 72 240 72 240 240 72 240 72 272 240 272 240 440 272 440 272 272 440 272 440 240' class='ci-primary'/>\"]"],"names":["vars","dangerIcon","fRight","cardText","arrayLabels","CreateNodes","Component","constructor","props","super","this","state","nodeCreateRules","activeKey","activeSubKeys","subKeys","changedTypes","visible","yesNoVisible","yesNoQuestion","arguments","sendType","compare","setSubActiveKey","key","id","index","findIndex","x","setState","getSubActiveKey","e","componentDidMount","getCreateNodeRules","async","model","organizationId","localStorage","getItem","applicationId","service","methodContentType","methodType","d","getRules","sk","length","roleRules","permissions","map","m","data","_id","push","getValueType","val","Array","isArray","getContentData","item","permIndex","collectionIndex","type","_jsxs","children","Object","keys","_jsx","CRow","className","CCol","CButton","color","onClick","addNewContentDataSub","bind","CIcon","style","icon","k","i","CFormSelect","onChange","eqChanged","value","name","CFormInput","changeContentDataSubKey","placeholder","indexOf","typeChanged","disabled","removeContentDataSubKey","class","getArrayItems","removeContentDataSubKeyArray","keyIndex","collection","nodes","newContentData","contentData","ki","target","arr","getValueAsArrayByType","convert","splice","eleman","document","getElementById","toString","isNaN","trim","removeContentDataKey","changeContentDataKey","changeCollectionName","changeNonPermittedCollectionName","addNewContentData","addNewCollection","collectionName","contentKeys","removeCollection","changeCK","removeContentKeys","getContentKeysItems","getValueAsArray","split","arrElems","parseInt","setVisible","toastShow","rule","rls","method","rules","addUpdateRule","vis","question","args","send","deleteRole","role","permitted","nonPermitted","newRuleAdd","render","CCard","CCardTitle","setYesNoVisible","CModal","onClose","CModalHeader","CModalTitle","CModalBody","CModalFooter","CCardBody","CNav","variant","CNavItem","CNavLink","active","CTabContent","CTabPane","CCardHeader","c","CCardFooter","DeleteNodes","nodeDeleteRules","getDeleteNodeRules","Relate","nodeRelateRules","getRelateNodeRules","nodeType","changeRS","relationship","removeRelationship","getRelationshipItems","mainNodes","mainSub","addNewMainSub","main","sub","removeMainSub","mainCollectionChange","mainSubIndex","changeSub","getMainSubItems","valIndex","removeSub","s","si","DeleteRelation","nodeDeleteRelationRules","getDeleteRelationNodeRules","UpdateNodes","nodeUpdateRules","activeLink","Recommendation","permissionItems","collectionCreateRules","redirect","sendApp","handleRedirect","handleRedirectApp","arr2","setActiveKey","success","message","postWithSavedToken","Methods","AddUpdateRules","then","result","err","status","DeleteRule","console","log","GetRules","hasOwnProperty","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","theme","transition","Slide","error","info","Redirect","to","CContainer","ToastContainer","cilPlus"],"sourceRoot":""}